ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tasks.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Middlewares/FreeRTOS/tasks.c"
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	prvTaskIsTaskSuspended:
  27              	.LVL0:
  28              	.LFB16:
   1:Middlewares/FreeRTOS/tasks.c **** /*
   2:Middlewares/FreeRTOS/tasks.c ****  * FreeRTOS Kernel V10.5.1
   3:Middlewares/FreeRTOS/tasks.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/FreeRTOS/tasks.c ****  *
   5:Middlewares/FreeRTOS/tasks.c ****  * SPDX-License-Identifier: MIT
   6:Middlewares/FreeRTOS/tasks.c ****  *
   7:Middlewares/FreeRTOS/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:Middlewares/FreeRTOS/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:Middlewares/FreeRTOS/tasks.c ****  * the Software without restriction, including without limitation the rights to
  10:Middlewares/FreeRTOS/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:Middlewares/FreeRTOS/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:Middlewares/FreeRTOS/tasks.c ****  * subject to the following conditions:
  13:Middlewares/FreeRTOS/tasks.c ****  *
  14:Middlewares/FreeRTOS/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  15:Middlewares/FreeRTOS/tasks.c ****  * copies or substantial portions of the Software.
  16:Middlewares/FreeRTOS/tasks.c ****  *
  17:Middlewares/FreeRTOS/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Middlewares/FreeRTOS/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:Middlewares/FreeRTOS/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:Middlewares/FreeRTOS/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:Middlewares/FreeRTOS/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:Middlewares/FreeRTOS/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:Middlewares/FreeRTOS/tasks.c ****  *
  24:Middlewares/FreeRTOS/tasks.c ****  * https://www.FreeRTOS.org
  25:Middlewares/FreeRTOS/tasks.c ****  * https://github.com/FreeRTOS
  26:Middlewares/FreeRTOS/tasks.c ****  *
  27:Middlewares/FreeRTOS/tasks.c ****  */
  28:Middlewares/FreeRTOS/tasks.c **** 
  29:Middlewares/FreeRTOS/tasks.c **** /* Standard includes. */
  30:Middlewares/FreeRTOS/tasks.c **** #include <stdlib.h>
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 2


  31:Middlewares/FreeRTOS/tasks.c **** #include <string.h>
  32:Middlewares/FreeRTOS/tasks.c **** 
  33:Middlewares/FreeRTOS/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  34:Middlewares/FreeRTOS/tasks.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  35:Middlewares/FreeRTOS/tasks.c ****  * task.h is included from an application file. */
  36:Middlewares/FreeRTOS/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  37:Middlewares/FreeRTOS/tasks.c **** 
  38:Middlewares/FreeRTOS/tasks.c **** /* FreeRTOS includes. */
  39:Middlewares/FreeRTOS/tasks.c **** #include "FreeRTOS.h"
  40:Middlewares/FreeRTOS/tasks.c **** #include "task.h"
  41:Middlewares/FreeRTOS/tasks.c **** #include "timers.h"
  42:Middlewares/FreeRTOS/tasks.c **** #include "stack_macros.h"
  43:Middlewares/FreeRTOS/tasks.c **** 
  44:Middlewares/FreeRTOS/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:Middlewares/FreeRTOS/tasks.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:Middlewares/FreeRTOS/tasks.c ****  * for the header files above, but not in this file, in order to generate the
  47:Middlewares/FreeRTOS/tasks.c ****  * correct privileged Vs unprivileged linkage and placement. */
  48:Middlewares/FreeRTOS/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:Middlewares/FreeRTOS/tasks.c **** 
  50:Middlewares/FreeRTOS/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  51:Middlewares/FreeRTOS/tasks.c ****  * functions but without including stdio.h here. */
  52:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  53:Middlewares/FreeRTOS/tasks.c **** 
  54:Middlewares/FreeRTOS/tasks.c **** /* At the bottom of this file are two optional functions that can be used
  55:Middlewares/FreeRTOS/tasks.c ****  * to generate human readable text from the raw data generated by the
  56:Middlewares/FreeRTOS/tasks.c ****  * uxTaskGetSystemState() function.  Note the formatting functions are provided
  57:Middlewares/FreeRTOS/tasks.c ****  * for convenience only, and are NOT considered part of the kernel. */
  58:Middlewares/FreeRTOS/tasks.c ****     #include <stdio.h>
  59:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  60:Middlewares/FreeRTOS/tasks.c **** 
  61:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_PREEMPTION == 0 )
  62:Middlewares/FreeRTOS/tasks.c **** 
  63:Middlewares/FreeRTOS/tasks.c **** /* If the cooperative scheduler is being used then a yield should not be
  64:Middlewares/FreeRTOS/tasks.c ****  * performed just because a higher priority task has been woken. */
  65:Middlewares/FreeRTOS/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()
  66:Middlewares/FreeRTOS/tasks.c **** #else
  67:Middlewares/FreeRTOS/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()    portYIELD_WITHIN_API()
  68:Middlewares/FreeRTOS/tasks.c **** #endif
  69:Middlewares/FreeRTOS/tasks.c **** 
  70:Middlewares/FreeRTOS/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  71:Middlewares/FreeRTOS/tasks.c **** #define taskNOT_WAITING_NOTIFICATION              ( ( uint8_t ) 0 ) /* Must be zero as it is the in
  72:Middlewares/FreeRTOS/tasks.c **** #define taskWAITING_NOTIFICATION                  ( ( uint8_t ) 1 )
  73:Middlewares/FreeRTOS/tasks.c **** #define taskNOTIFICATION_RECEIVED                 ( ( uint8_t ) 2 )
  74:Middlewares/FreeRTOS/tasks.c **** 
  75:Middlewares/FreeRTOS/tasks.c **** /*
  76:Middlewares/FreeRTOS/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  77:Middlewares/FreeRTOS/tasks.c ****  * is used purely for checking the high water mark for tasks.
  78:Middlewares/FreeRTOS/tasks.c ****  */
  79:Middlewares/FreeRTOS/tasks.c **** #define tskSTACK_FILL_BYTE                        ( 0xa5U )
  80:Middlewares/FreeRTOS/tasks.c **** 
  81:Middlewares/FreeRTOS/tasks.c **** /* Bits used to record how a task's stack and TCB were allocated. */
  82:Middlewares/FreeRTOS/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB    ( ( uint8_t ) 0 )
  83:Middlewares/FreeRTOS/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY        ( ( uint8_t ) 1 )
  84:Middlewares/FreeRTOS/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB     ( ( uint8_t ) 2 )
  85:Middlewares/FreeRTOS/tasks.c **** 
  86:Middlewares/FreeRTOS/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  87:Middlewares/FreeRTOS/tasks.c ****  * value so the high water mark can be determined.  If none of the following are
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 3


  88:Middlewares/FreeRTOS/tasks.c ****  * set then don't fill the stack so there is no unnecessary dependency on memset. */
  89:Middlewares/FreeRTOS/tasks.c **** #if ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
  90:Middlewares/FreeRTOS/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    1
  91:Middlewares/FreeRTOS/tasks.c **** #else
  92:Middlewares/FreeRTOS/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    0
  93:Middlewares/FreeRTOS/tasks.c **** #endif
  94:Middlewares/FreeRTOS/tasks.c **** 
  95:Middlewares/FreeRTOS/tasks.c **** /*
  96:Middlewares/FreeRTOS/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  97:Middlewares/FreeRTOS/tasks.c ****  */
  98:Middlewares/FreeRTOS/tasks.c **** #define tskRUNNING_CHAR      ( 'X' )
  99:Middlewares/FreeRTOS/tasks.c **** #define tskBLOCKED_CHAR      ( 'B' )
 100:Middlewares/FreeRTOS/tasks.c **** #define tskREADY_CHAR        ( 'R' )
 101:Middlewares/FreeRTOS/tasks.c **** #define tskDELETED_CHAR      ( 'D' )
 102:Middlewares/FreeRTOS/tasks.c **** #define tskSUSPENDED_CHAR    ( 'S' )
 103:Middlewares/FreeRTOS/tasks.c **** 
 104:Middlewares/FreeRTOS/tasks.c **** /*
 105:Middlewares/FreeRTOS/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to to
 106:Middlewares/FreeRTOS/tasks.c ****  * be global, rather than file scope.
 107:Middlewares/FreeRTOS/tasks.c ****  */
 108:Middlewares/FreeRTOS/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 109:Middlewares/FreeRTOS/tasks.c ****     #define static
 110:Middlewares/FreeRTOS/tasks.c **** #endif
 111:Middlewares/FreeRTOS/tasks.c **** 
 112:Middlewares/FreeRTOS/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 113:Middlewares/FreeRTOS/tasks.c ****  * configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 114:Middlewares/FreeRTOS/tasks.c **** #ifndef configIDLE_TASK_NAME
 115:Middlewares/FreeRTOS/tasks.c ****     #define configIDLE_TASK_NAME    "IDLE"
 116:Middlewares/FreeRTOS/tasks.c **** #endif
 117:Middlewares/FreeRTOS/tasks.c **** 
 118:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 119:Middlewares/FreeRTOS/tasks.c **** 
 120:Middlewares/FreeRTOS/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 121:Middlewares/FreeRTOS/tasks.c ****  * performed in a generic way that is not optimised to any particular
 122:Middlewares/FreeRTOS/tasks.c ****  * microcontroller architecture. */
 123:Middlewares/FreeRTOS/tasks.c **** 
 124:Middlewares/FreeRTOS/tasks.c **** /* uxTopReadyPriority holds the priority of the highest priority ready
 125:Middlewares/FreeRTOS/tasks.c ****  * state task. */
 126:Middlewares/FreeRTOS/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority ) \
 127:Middlewares/FreeRTOS/tasks.c ****     {                                               \
 128:Middlewares/FreeRTOS/tasks.c ****         if( ( uxPriority ) > uxTopReadyPriority )   \
 129:Middlewares/FreeRTOS/tasks.c ****         {                                           \
 130:Middlewares/FreeRTOS/tasks.c ****             uxTopReadyPriority = ( uxPriority );    \
 131:Middlewares/FreeRTOS/tasks.c ****         }                                           \
 132:Middlewares/FreeRTOS/tasks.c ****     } /* taskRECORD_READY_PRIORITY */
 133:Middlewares/FreeRTOS/tasks.c **** 
 134:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 135:Middlewares/FreeRTOS/tasks.c **** 
 136:Middlewares/FreeRTOS/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                \
 137:Middlewares/FreeRTOS/tasks.c ****     {                                                                         \
 138:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxTopPriority = uxTopReadyPriority;                       \
 139:Middlewares/FreeRTOS/tasks.c ****                                                                               \
 140:Middlewares/FreeRTOS/tasks.c ****         /* Find the highest priority queue that contains ready tasks. */      \
 141:Middlewares/FreeRTOS/tasks.c ****         while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) ) \
 142:Middlewares/FreeRTOS/tasks.c ****         {                                                                     \
 143:Middlewares/FreeRTOS/tasks.c ****             configASSERT( uxTopPriority );                                    \
 144:Middlewares/FreeRTOS/tasks.c ****             --uxTopPriority;                                                  \
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 4


 145:Middlewares/FreeRTOS/tasks.c ****         }                                                                     \
 146:Middlewares/FreeRTOS/tasks.c ****                                                                               \
 147:Middlewares/FreeRTOS/tasks.c ****         /* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of \
 148:Middlewares/FreeRTOS/tasks.c ****          * the  same priority get an equal share of the processor time. */                    \
 149:Middlewares/FreeRTOS/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) ); \
 150:Middlewares/FreeRTOS/tasks.c ****         uxTopReadyPriority = uxTopPriority;                                                   \
 151:Middlewares/FreeRTOS/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK */
 152:Middlewares/FreeRTOS/tasks.c **** 
 153:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 154:Middlewares/FreeRTOS/tasks.c **** 
 155:Middlewares/FreeRTOS/tasks.c **** /* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 156:Middlewares/FreeRTOS/tasks.c ****  * they are only required when a port optimised method of task selection is
 157:Middlewares/FreeRTOS/tasks.c ****  * being used. */
 158:Middlewares/FreeRTOS/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )
 159:Middlewares/FreeRTOS/tasks.c ****     #define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 160:Middlewares/FreeRTOS/tasks.c **** 
 161:Middlewares/FreeRTOS/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 162:Middlewares/FreeRTOS/tasks.c **** 
 163:Middlewares/FreeRTOS/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 164:Middlewares/FreeRTOS/tasks.c ****  * performed in a way that is tailored to the particular microcontroller
 165:Middlewares/FreeRTOS/tasks.c ****  * architecture being used. */
 166:Middlewares/FreeRTOS/tasks.c **** 
 167:Middlewares/FreeRTOS/tasks.c **** /* A port optimised version is provided.  Call the port defined macros. */
 168:Middlewares/FreeRTOS/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority )    portRECORD_READY_PRIORITY( ( uxPriority ), u
 169:Middlewares/FreeRTOS/tasks.c **** 
 170:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 171:Middlewares/FreeRTOS/tasks.c **** 
 172:Middlewares/FreeRTOS/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                                  \
 173:Middlewares/FreeRTOS/tasks.c ****     {                                                                                           \
 174:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxTopPriority;                                                              \
 175:Middlewares/FreeRTOS/tasks.c ****                                                                                                 \
 176:Middlewares/FreeRTOS/tasks.c ****         /* Find the highest priority list that contains ready tasks. */                         \
 177:Middlewares/FreeRTOS/tasks.c ****         portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );                          \
 178:Middlewares/FreeRTOS/tasks.c ****         configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 ); \
 179:Middlewares/FreeRTOS/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );   \
 180:Middlewares/FreeRTOS/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 181:Middlewares/FreeRTOS/tasks.c **** 
 182:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 183:Middlewares/FreeRTOS/tasks.c **** 
 184:Middlewares/FreeRTOS/tasks.c **** /* A port optimised version is provided, call it only if the TCB being reset
 185:Middlewares/FreeRTOS/tasks.c ****  * is being referenced from a ready list.  If it is referenced from a delayed
 186:Middlewares/FreeRTOS/tasks.c ****  * or suspended list then it won't be in a ready list. */
 187:Middlewares/FreeRTOS/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )                                                 
 188:Middlewares/FreeRTOS/tasks.c ****     {                                                                                              
 189:Middlewares/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 
 190:Middlewares/FreeRTOS/tasks.c ****         {                                                                                          
 191:Middlewares/FreeRTOS/tasks.c ****             portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );                    
 192:Middlewares/FreeRTOS/tasks.c ****         }                                                                                          
 193:Middlewares/FreeRTOS/tasks.c ****     }
 194:Middlewares/FreeRTOS/tasks.c **** 
 195:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 196:Middlewares/FreeRTOS/tasks.c **** 
 197:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 198:Middlewares/FreeRTOS/tasks.c **** 
 199:Middlewares/FreeRTOS/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 200:Middlewares/FreeRTOS/tasks.c ****  * count overflows. */
 201:Middlewares/FreeRTOS/tasks.c **** #define taskSWITCH_DELAYED_LISTS()                                                \
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 5


 202:Middlewares/FreeRTOS/tasks.c ****     {                                                                             \
 203:Middlewares/FreeRTOS/tasks.c ****         List_t * pxTemp;                                                          \
 204:Middlewares/FreeRTOS/tasks.c ****                                                                                   \
 205:Middlewares/FreeRTOS/tasks.c ****         /* The delayed tasks list should be empty when the lists are switched. */ \
 206:Middlewares/FreeRTOS/tasks.c ****         configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );               \
 207:Middlewares/FreeRTOS/tasks.c ****                                                                                   \
 208:Middlewares/FreeRTOS/tasks.c ****         pxTemp = pxDelayedTaskList;                                               \
 209:Middlewares/FreeRTOS/tasks.c ****         pxDelayedTaskList = pxOverflowDelayedTaskList;                            \
 210:Middlewares/FreeRTOS/tasks.c ****         pxOverflowDelayedTaskList = pxTemp;                                       \
 211:Middlewares/FreeRTOS/tasks.c ****         xNumOfOverflows++;                                                        \
 212:Middlewares/FreeRTOS/tasks.c ****         prvResetNextTaskUnblockTime();                                            \
 213:Middlewares/FreeRTOS/tasks.c ****     }
 214:Middlewares/FreeRTOS/tasks.c **** 
 215:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 216:Middlewares/FreeRTOS/tasks.c **** 
 217:Middlewares/FreeRTOS/tasks.c **** /*
 218:Middlewares/FreeRTOS/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 219:Middlewares/FreeRTOS/tasks.c ****  * the task.  It is inserted at the end of the list.
 220:Middlewares/FreeRTOS/tasks.c ****  */
 221:Middlewares/FreeRTOS/tasks.c **** #define prvAddTaskToReadyList( pxTCB )                                                             
 222:Middlewares/FreeRTOS/tasks.c ****     traceMOVED_TASK_TO_READY_STATE( pxTCB );                                                       
 223:Middlewares/FreeRTOS/tasks.c ****     taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );                                            
 224:Middlewares/FreeRTOS/tasks.c ****     listINSERT_END( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem )
 225:Middlewares/FreeRTOS/tasks.c ****     tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 226:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 227:Middlewares/FreeRTOS/tasks.c **** 
 228:Middlewares/FreeRTOS/tasks.c **** /*
 229:Middlewares/FreeRTOS/tasks.c ****  * Several functions take a TaskHandle_t parameter that can optionally be NULL,
 230:Middlewares/FreeRTOS/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 231:Middlewares/FreeRTOS/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 232:Middlewares/FreeRTOS/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 233:Middlewares/FreeRTOS/tasks.c ****  */
 234:Middlewares/FreeRTOS/tasks.c **** #define prvGetTCBFromHandle( pxHandle )    ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle )
 235:Middlewares/FreeRTOS/tasks.c **** 
 236:Middlewares/FreeRTOS/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 237:Middlewares/FreeRTOS/tasks.c ****  * of the task to which it belongs (coded to allow it to be held in reverse
 238:Middlewares/FreeRTOS/tasks.c ****  * priority order).  However, it is occasionally borrowed for other purposes.  It
 239:Middlewares/FreeRTOS/tasks.c ****  * is important its value is not updated due to a task priority change while it is
 240:Middlewares/FreeRTOS/tasks.c ****  * being used for another purpose.  The following bit definition is used to inform
 241:Middlewares/FreeRTOS/tasks.c ****  * the scheduler that the value should not be changed - in which case it is the
 242:Middlewares/FreeRTOS/tasks.c ****  * responsibility of whichever module is using the value to ensure it gets set back
 243:Middlewares/FreeRTOS/tasks.c ****  * to its original value when it is released. */
 244:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_16_BIT_TICKS == 1 )
 245:Middlewares/FreeRTOS/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x8000U
 246:Middlewares/FreeRTOS/tasks.c **** #else
 247:Middlewares/FreeRTOS/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x80000000UL
 248:Middlewares/FreeRTOS/tasks.c **** #endif
 249:Middlewares/FreeRTOS/tasks.c **** 
 250:Middlewares/FreeRTOS/tasks.c **** /*
 251:Middlewares/FreeRTOS/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 252:Middlewares/FreeRTOS/tasks.c ****  * and stores task state information, including a pointer to the task's context
 253:Middlewares/FreeRTOS/tasks.c ****  * (the task's run time environment, including register values)
 254:Middlewares/FreeRTOS/tasks.c ****  */
 255:Middlewares/FreeRTOS/tasks.c **** typedef struct tskTaskControlBlock       /* The old naming convention is used to prevent breaking k
 256:Middlewares/FreeRTOS/tasks.c **** {
 257:Middlewares/FreeRTOS/tasks.c ****     volatile StackType_t * pxTopOfStack; /*< Points to the location of the last item placed on the 
 258:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 6


 259:Middlewares/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 260:Middlewares/FreeRTOS/tasks.c ****         xMPU_SETTINGS xMPUSettings; /*< The MPU settings are defined as part of the port layer.  TH
 261:Middlewares/FreeRTOS/tasks.c ****     #endif
 262:Middlewares/FreeRTOS/tasks.c **** 
 263:Middlewares/FreeRTOS/tasks.c ****     ListItem_t xStateListItem;                  /*< The list that the state list item of a task is 
 264:Middlewares/FreeRTOS/tasks.c ****     ListItem_t xEventListItem;                  /*< Used to reference a task from an event list. */
 265:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;                     /*< The priority of the task.  0 is the lowest prio
 266:Middlewares/FreeRTOS/tasks.c ****     StackType_t * pxStack;                      /*< Points to the start of the stack. */
 267:Middlewares/FreeRTOS/tasks.c ****     char pcTaskName[ configMAX_TASK_NAME_LEN ]; /*< Descriptive name given to the task when created
 268:Middlewares/FreeRTOS/tasks.c **** 
 269:Middlewares/FreeRTOS/tasks.c ****     #if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 270:Middlewares/FreeRTOS/tasks.c ****         StackType_t * pxEndOfStack; /*< Points to the highest valid address for the stack. */
 271:Middlewares/FreeRTOS/tasks.c ****     #endif
 272:Middlewares/FreeRTOS/tasks.c **** 
 273:Middlewares/FreeRTOS/tasks.c ****     #if ( portCRITICAL_NESTING_IN_TCB == 1 )
 274:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxCriticalNesting; /*< Holds the critical section nesting depth for ports that 
 275:Middlewares/FreeRTOS/tasks.c ****     #endif
 276:Middlewares/FreeRTOS/tasks.c **** 
 277:Middlewares/FreeRTOS/tasks.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 278:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxTCBNumber;  /*< Stores a number that increments each time a TCB is created.  
 279:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxTaskNumber; /*< Stores a number specifically for use by third party trace cod
 280:Middlewares/FreeRTOS/tasks.c ****     #endif
 281:Middlewares/FreeRTOS/tasks.c **** 
 282:Middlewares/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 283:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxBasePriority; /*< The priority last assigned to the task - used by the priori
 284:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxMutexesHeld;
 285:Middlewares/FreeRTOS/tasks.c ****     #endif
 286:Middlewares/FreeRTOS/tasks.c **** 
 287:Middlewares/FreeRTOS/tasks.c ****     #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 288:Middlewares/FreeRTOS/tasks.c ****         TaskHookFunction_t pxTaskTag;
 289:Middlewares/FreeRTOS/tasks.c ****     #endif
 290:Middlewares/FreeRTOS/tasks.c **** 
 291:Middlewares/FreeRTOS/tasks.c ****     #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 292:Middlewares/FreeRTOS/tasks.c ****         void * pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 293:Middlewares/FreeRTOS/tasks.c ****     #endif
 294:Middlewares/FreeRTOS/tasks.c **** 
 295:Middlewares/FreeRTOS/tasks.c ****     #if ( configGENERATE_RUN_TIME_STATS == 1 )
 296:Middlewares/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulRunTimeCounter; /*< Stores the amount of time the task has sp
 297:Middlewares/FreeRTOS/tasks.c ****     #endif
 298:Middlewares/FreeRTOS/tasks.c **** 
 299:Middlewares/FreeRTOS/tasks.c ****     #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
 300:Middlewares/FreeRTOS/tasks.c ****         configTLS_BLOCK_TYPE xTLSBlock; /*< Memory block used as Thread Local Storage (TLS) Block f
 301:Middlewares/FreeRTOS/tasks.c ****     #endif
 302:Middlewares/FreeRTOS/tasks.c **** 
 303:Middlewares/FreeRTOS/tasks.c ****     #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 304:Middlewares/FreeRTOS/tasks.c ****         volatile uint32_t ulNotifiedValue[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 305:Middlewares/FreeRTOS/tasks.c ****         volatile uint8_t ucNotifyState[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 306:Middlewares/FreeRTOS/tasks.c ****     #endif
 307:Middlewares/FreeRTOS/tasks.c **** 
 308:Middlewares/FreeRTOS/tasks.c ****     /* See the comments in FreeRTOS.h with the definition of
 309:Middlewares/FreeRTOS/tasks.c ****      * tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 310:Middlewares/FreeRTOS/tasks.c ****     #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been conso
 311:Middlewares/FreeRTOS/tasks.c ****         uint8_t ucStaticallyAllocated;                     /*< Set to pdTRUE if the task is a stati
 312:Middlewares/FreeRTOS/tasks.c ****     #endif
 313:Middlewares/FreeRTOS/tasks.c **** 
 314:Middlewares/FreeRTOS/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
 315:Middlewares/FreeRTOS/tasks.c ****         uint8_t ucDelayAborted;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 7


 316:Middlewares/FreeRTOS/tasks.c ****     #endif
 317:Middlewares/FreeRTOS/tasks.c **** 
 318:Middlewares/FreeRTOS/tasks.c ****     #if ( configUSE_POSIX_ERRNO == 1 )
 319:Middlewares/FreeRTOS/tasks.c ****         int iTaskErrno;
 320:Middlewares/FreeRTOS/tasks.c ****     #endif
 321:Middlewares/FreeRTOS/tasks.c **** } tskTCB;
 322:Middlewares/FreeRTOS/tasks.c **** 
 323:Middlewares/FreeRTOS/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 324:Middlewares/FreeRTOS/tasks.c ****  * below to enable the use of older kernel aware debuggers. */
 325:Middlewares/FreeRTOS/tasks.c **** typedef tskTCB TCB_t;
 326:Middlewares/FreeRTOS/tasks.c **** 
 327:Middlewares/FreeRTOS/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 328:Middlewares/FreeRTOS/tasks.c ****  * which static variables must be declared volatile. */
 329:Middlewares/FreeRTOS/tasks.c **** portDONT_DISCARD PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 330:Middlewares/FreeRTOS/tasks.c **** 
 331:Middlewares/FreeRTOS/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 332:Middlewares/FreeRTOS/tasks.c ****  * xDelayedTaskList1 and xDelayedTaskList2 could be moved to function scope but
 333:Middlewares/FreeRTOS/tasks.c ****  * doing so breaks some kernel aware debuggers and debuggers that rely on removing
 334:Middlewares/FreeRTOS/tasks.c ****  * the static qualifier. */
 335:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ]; /*< Prioritised ready task
 336:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;                         /*< Delayed tasks. */
 337:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;                         /*< Delayed tasks (two lis
 338:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /*< Points to the delayed 
 339:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /*< Points to the delayed 
 340:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;                         /*< Tasks that have been r
 341:Middlewares/FreeRTOS/tasks.c **** 
 342:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 343:Middlewares/FreeRTOS/tasks.c **** 
 344:Middlewares/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static List_t xTasksWaitingTermination; /*< Tasks that have been deleted - but 
 345:Middlewares/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 346:Middlewares/FreeRTOS/tasks.c **** 
 347:Middlewares/FreeRTOS/tasks.c **** #endif
 348:Middlewares/FreeRTOS/tasks.c **** 
 349:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 350:Middlewares/FreeRTOS/tasks.c **** 
 351:Middlewares/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static List_t xSuspendedTaskList; /*< Tasks that are currently suspended. */
 352:Middlewares/FreeRTOS/tasks.c **** 
 353:Middlewares/FreeRTOS/tasks.c **** #endif
 354:Middlewares/FreeRTOS/tasks.c **** 
 355:Middlewares/FreeRTOS/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 356:Middlewares/FreeRTOS/tasks.c ****  * the errno of the currently running task. */
 357:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 358:Middlewares/FreeRTOS/tasks.c ****     int FreeRTOS_errno = 0;
 359:Middlewares/FreeRTOS/tasks.c **** #endif
 360:Middlewares/FreeRTOS/tasks.c **** 
 361:Middlewares/FreeRTOS/tasks.c **** /* Other file private variables. --------------------------------*/
 362:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
 363:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 364:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
 365:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
 366:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
 367:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending = pdFALSE;
 368:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
 369:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
 370:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised
 371:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle = NULL;                          /*< Holds the 
 372:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 8


 373:Middlewares/FreeRTOS/tasks.c **** /* Improve support for OpenOCD. The kernel tracks Ready tasks via priority lists.
 374:Middlewares/FreeRTOS/tasks.c ****  * For tracking the state of remote threads, OpenOCD uses uxTopUsedPriority
 375:Middlewares/FreeRTOS/tasks.c ****  * to determine the number of priority lists to read back from the remote target. */
 376:Middlewares/FreeRTOS/tasks.c **** const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
 377:Middlewares/FreeRTOS/tasks.c **** 
 378:Middlewares/FreeRTOS/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 379:Middlewares/FreeRTOS/tasks.c ****  * interrupts must not manipulate the xStateListItem of a TCB, or any of the
 380:Middlewares/FreeRTOS/tasks.c ****  * lists the xStateListItem can be referenced from, if the scheduler is suspended.
 381:Middlewares/FreeRTOS/tasks.c ****  * If an interrupt needs to unblock a task while the scheduler is suspended then it
 382:Middlewares/FreeRTOS/tasks.c ****  * moves the task's event list item into the xPendingReadyList, ready for the
 383:Middlewares/FreeRTOS/tasks.c ****  * kernel to move the task from the pending ready list into the real ready list
 384:Middlewares/FreeRTOS/tasks.c ****  * when the scheduler is unsuspended.  The pending ready list itself can only be
 385:Middlewares/FreeRTOS/tasks.c ****  * accessed from a critical section. */
 386:Middlewares/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) pdFALSE;
 387:Middlewares/FreeRTOS/tasks.c **** 
 388:Middlewares/FreeRTOS/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 389:Middlewares/FreeRTOS/tasks.c **** 
 390:Middlewares/FreeRTOS/tasks.c **** /* Do not move these variables to function scope as doing so prevents the
 391:Middlewares/FreeRTOS/tasks.c ****  * code working with debuggers that need to remove the static qualifier. */
 392:Middlewares/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static configRUN_TIME_COUNTER_TYPE ulTaskSwitchedInTime = 0UL;    /*< Holds the
 393:Middlewares/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static volatile configRUN_TIME_COUNTER_TYPE ulTotalRunTime = 0UL; /*< Holds the
 394:Middlewares/FreeRTOS/tasks.c **** 
 395:Middlewares/FreeRTOS/tasks.c **** #endif
 396:Middlewares/FreeRTOS/tasks.c **** 
 397:Middlewares/FreeRTOS/tasks.c **** /*lint -restore */
 398:Middlewares/FreeRTOS/tasks.c **** 
 399:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 400:Middlewares/FreeRTOS/tasks.c **** 
 401:Middlewares/FreeRTOS/tasks.c **** /* File private functions. --------------------------------*/
 402:Middlewares/FreeRTOS/tasks.c **** 
 403:Middlewares/FreeRTOS/tasks.c **** /**
 404:Middlewares/FreeRTOS/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 405:Middlewares/FreeRTOS/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 406:Middlewares/FreeRTOS/tasks.c ****  * is in any other state.
 407:Middlewares/FreeRTOS/tasks.c ****  */
 408:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 409:Middlewares/FreeRTOS/tasks.c **** 
 410:Middlewares/FreeRTOS/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 411:Middlewares/FreeRTOS/tasks.c **** 
 412:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 413:Middlewares/FreeRTOS/tasks.c **** 
 414:Middlewares/FreeRTOS/tasks.c **** /*
 415:Middlewares/FreeRTOS/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 416:Middlewares/FreeRTOS/tasks.c ****  * automatically upon the creation of the first task.
 417:Middlewares/FreeRTOS/tasks.c ****  */
 418:Middlewares/FreeRTOS/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 419:Middlewares/FreeRTOS/tasks.c **** 
 420:Middlewares/FreeRTOS/tasks.c **** /*
 421:Middlewares/FreeRTOS/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 422:Middlewares/FreeRTOS/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 423:Middlewares/FreeRTOS/tasks.c ****  * creation of the first user task.
 424:Middlewares/FreeRTOS/tasks.c ****  *
 425:Middlewares/FreeRTOS/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 426:Middlewares/FreeRTOS/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 427:Middlewares/FreeRTOS/tasks.c ****  *
 428:Middlewares/FreeRTOS/tasks.c ****  * void prvIdleTask( void *pvParameters );
 429:Middlewares/FreeRTOS/tasks.c ****  *
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 9


 430:Middlewares/FreeRTOS/tasks.c ****  */
 431:Middlewares/FreeRTOS/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters ) PRIVILEGED_FUNCTION;
 432:Middlewares/FreeRTOS/tasks.c **** 
 433:Middlewares/FreeRTOS/tasks.c **** /*
 434:Middlewares/FreeRTOS/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 435:Middlewares/FreeRTOS/tasks.c ****  * including the stack pointed to by the TCB.
 436:Middlewares/FreeRTOS/tasks.c ****  *
 437:Middlewares/FreeRTOS/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 438:Middlewares/FreeRTOS/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 439:Middlewares/FreeRTOS/tasks.c ****  */
 440:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 441:Middlewares/FreeRTOS/tasks.c **** 
 442:Middlewares/FreeRTOS/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB ) PRIVILEGED_FUNCTION;
 443:Middlewares/FreeRTOS/tasks.c **** 
 444:Middlewares/FreeRTOS/tasks.c **** #endif
 445:Middlewares/FreeRTOS/tasks.c **** 
 446:Middlewares/FreeRTOS/tasks.c **** /*
 447:Middlewares/FreeRTOS/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 448:Middlewares/FreeRTOS/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 449:Middlewares/FreeRTOS/tasks.c ****  * and its TCB deleted.
 450:Middlewares/FreeRTOS/tasks.c ****  */
 451:Middlewares/FreeRTOS/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 452:Middlewares/FreeRTOS/tasks.c **** 
 453:Middlewares/FreeRTOS/tasks.c **** /*
 454:Middlewares/FreeRTOS/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 455:Middlewares/FreeRTOS/tasks.c ****  * either the current or the overflow delayed task list.
 456:Middlewares/FreeRTOS/tasks.c ****  */
 457:Middlewares/FreeRTOS/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
 458:Middlewares/FreeRTOS/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely ) PRIVILEGED_FUN
 459:Middlewares/FreeRTOS/tasks.c **** 
 460:Middlewares/FreeRTOS/tasks.c **** /*
 461:Middlewares/FreeRTOS/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 462:Middlewares/FreeRTOS/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 463:Middlewares/FreeRTOS/tasks.c ****  * a suspended list, etc.).
 464:Middlewares/FreeRTOS/tasks.c ****  *
 465:Middlewares/FreeRTOS/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 466:Middlewares/FreeRTOS/tasks.c ****  * NORMAL APPLICATION CODE.
 467:Middlewares/FreeRTOS/tasks.c ****  */
 468:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 469:Middlewares/FreeRTOS/tasks.c **** 
 470:Middlewares/FreeRTOS/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
 471:Middlewares/FreeRTOS/tasks.c ****                                                      List_t * pxList,
 472:Middlewares/FreeRTOS/tasks.c ****                                                      eTaskState eState ) PRIVILEGED_FUNCTION;
 473:Middlewares/FreeRTOS/tasks.c **** 
 474:Middlewares/FreeRTOS/tasks.c **** #endif
 475:Middlewares/FreeRTOS/tasks.c **** 
 476:Middlewares/FreeRTOS/tasks.c **** /*
 477:Middlewares/FreeRTOS/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 478:Middlewares/FreeRTOS/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 479:Middlewares/FreeRTOS/tasks.c ****  */
 480:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 481:Middlewares/FreeRTOS/tasks.c **** 
 482:Middlewares/FreeRTOS/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
 483:Middlewares/FreeRTOS/tasks.c ****                                                      const char pcNameToQuery[] ) PRIVILEGED_FUNCTI
 484:Middlewares/FreeRTOS/tasks.c **** 
 485:Middlewares/FreeRTOS/tasks.c **** #endif
 486:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 10


 487:Middlewares/FreeRTOS/tasks.c **** /*
 488:Middlewares/FreeRTOS/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 489:Middlewares/FreeRTOS/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 490:Middlewares/FreeRTOS/tasks.c ****  * determining how much of the stack remains at the original preset value.
 491:Middlewares/FreeRTOS/tasks.c ****  */
 492:Middlewares/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 493:Middlewares/FreeRTOS/tasks.c **** 
 494:Middlewares/FreeRTOS/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVIL
 495:Middlewares/FreeRTOS/tasks.c **** 
 496:Middlewares/FreeRTOS/tasks.c **** #endif
 497:Middlewares/FreeRTOS/tasks.c **** 
 498:Middlewares/FreeRTOS/tasks.c **** /*
 499:Middlewares/FreeRTOS/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 500:Middlewares/FreeRTOS/tasks.c ****  * next move a task from the Blocked state to the Running state.
 501:Middlewares/FreeRTOS/tasks.c ****  *
 502:Middlewares/FreeRTOS/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 503:Middlewares/FreeRTOS/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 504:Middlewares/FreeRTOS/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 505:Middlewares/FreeRTOS/tasks.c ****  * set to a value other than 1.
 506:Middlewares/FreeRTOS/tasks.c ****  */
 507:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 508:Middlewares/FreeRTOS/tasks.c **** 
 509:Middlewares/FreeRTOS/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 510:Middlewares/FreeRTOS/tasks.c **** 
 511:Middlewares/FreeRTOS/tasks.c **** #endif
 512:Middlewares/FreeRTOS/tasks.c **** 
 513:Middlewares/FreeRTOS/tasks.c **** /*
 514:Middlewares/FreeRTOS/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 515:Middlewares/FreeRTOS/tasks.c ****  * will exit the Blocked state.
 516:Middlewares/FreeRTOS/tasks.c ****  */
 517:Middlewares/FreeRTOS/tasks.c **** static void prvResetNextTaskUnblockTime( void ) PRIVILEGED_FUNCTION;
 518:Middlewares/FreeRTOS/tasks.c **** 
 519:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 )
 520:Middlewares/FreeRTOS/tasks.c **** 
 521:Middlewares/FreeRTOS/tasks.c **** /*
 522:Middlewares/FreeRTOS/tasks.c ****  * Helper function used to pad task names with spaces when printing out
 523:Middlewares/FreeRTOS/tasks.c ****  * human readable tables of task information.
 524:Middlewares/FreeRTOS/tasks.c ****  */
 525:Middlewares/FreeRTOS/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
 526:Middlewares/FreeRTOS/tasks.c ****                                         const char * pcTaskName ) PRIVILEGED_FUNCTION;
 527:Middlewares/FreeRTOS/tasks.c **** 
 528:Middlewares/FreeRTOS/tasks.c **** #endif
 529:Middlewares/FreeRTOS/tasks.c **** 
 530:Middlewares/FreeRTOS/tasks.c **** /*
 531:Middlewares/FreeRTOS/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 532:Middlewares/FreeRTOS/tasks.c ****  * dynamically to fill in the structure's members.
 533:Middlewares/FreeRTOS/tasks.c ****  */
 534:Middlewares/FreeRTOS/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 535:Middlewares/FreeRTOS/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 536:Middlewares/FreeRTOS/tasks.c ****                                   const uint32_t ulStackDepth,
 537:Middlewares/FreeRTOS/tasks.c ****                                   void * const pvParameters,
 538:Middlewares/FreeRTOS/tasks.c ****                                   UBaseType_t uxPriority,
 539:Middlewares/FreeRTOS/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 540:Middlewares/FreeRTOS/tasks.c ****                                   TCB_t * pxNewTCB,
 541:Middlewares/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 542:Middlewares/FreeRTOS/tasks.c **** 
 543:Middlewares/FreeRTOS/tasks.c **** /*
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 11


 544:Middlewares/FreeRTOS/tasks.c ****  * Called after a new task has been created and initialised to place the task
 545:Middlewares/FreeRTOS/tasks.c ****  * under the control of the scheduler.
 546:Middlewares/FreeRTOS/tasks.c ****  */
 547:Middlewares/FreeRTOS/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB ) PRIVILEGED_FUNCTION;
 548:Middlewares/FreeRTOS/tasks.c **** 
 549:Middlewares/FreeRTOS/tasks.c **** /*
 550:Middlewares/FreeRTOS/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 551:Middlewares/FreeRTOS/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 552:Middlewares/FreeRTOS/tasks.c ****  * called by the function.
 553:Middlewares/FreeRTOS/tasks.c ****  */
 554:Middlewares/FreeRTOS/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 555:Middlewares/FreeRTOS/tasks.c **** 
 556:Middlewares/FreeRTOS/tasks.c ****     static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 557:Middlewares/FreeRTOS/tasks.c **** 
 558:Middlewares/FreeRTOS/tasks.c **** #endif
 559:Middlewares/FreeRTOS/tasks.c **** 
 560:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 561:Middlewares/FreeRTOS/tasks.c **** 
 562:Middlewares/FreeRTOS/tasks.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 563:Middlewares/FreeRTOS/tasks.c **** 
 564:Middlewares/FreeRTOS/tasks.c ****     TaskHandle_t xTaskCreateStatic( TaskFunction_t pxTaskCode,
 565:Middlewares/FreeRTOS/tasks.c ****                                     const char * const pcName, /*lint !e971 Unqualified char types 
 566:Middlewares/FreeRTOS/tasks.c ****                                     const uint32_t ulStackDepth,
 567:Middlewares/FreeRTOS/tasks.c ****                                     void * const pvParameters,
 568:Middlewares/FreeRTOS/tasks.c ****                                     UBaseType_t uxPriority,
 569:Middlewares/FreeRTOS/tasks.c ****                                     StackType_t * const puxStackBuffer,
 570:Middlewares/FreeRTOS/tasks.c ****                                     StaticTask_t * const pxTaskBuffer )
 571:Middlewares/FreeRTOS/tasks.c ****     {
 572:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 573:Middlewares/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
 574:Middlewares/FreeRTOS/tasks.c **** 
 575:Middlewares/FreeRTOS/tasks.c ****         configASSERT( puxStackBuffer != NULL );
 576:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 577:Middlewares/FreeRTOS/tasks.c **** 
 578:Middlewares/FreeRTOS/tasks.c ****         #if ( configASSERT_DEFINED == 1 )
 579:Middlewares/FreeRTOS/tasks.c ****         {
 580:Middlewares/FreeRTOS/tasks.c ****             /* Sanity check that the size of the structure used to declare a
 581:Middlewares/FreeRTOS/tasks.c ****              * variable of type StaticTask_t equals the size of the real task
 582:Middlewares/FreeRTOS/tasks.c ****              * structure. */
 583:Middlewares/FreeRTOS/tasks.c ****             volatile size_t xSize = sizeof( StaticTask_t );
 584:Middlewares/FreeRTOS/tasks.c ****             configASSERT( xSize == sizeof( TCB_t ) );
 585:Middlewares/FreeRTOS/tasks.c ****             ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 586:Middlewares/FreeRTOS/tasks.c ****         }
 587:Middlewares/FreeRTOS/tasks.c ****         #endif /* configASSERT_DEFINED */
 588:Middlewares/FreeRTOS/tasks.c **** 
 589:Middlewares/FreeRTOS/tasks.c ****         if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 590:Middlewares/FreeRTOS/tasks.c ****         {
 591:Middlewares/FreeRTOS/tasks.c ****             /* The memory used for the task's TCB and stack are passed into this
 592:Middlewares/FreeRTOS/tasks.c ****              * function - use them. */
 593:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the stru
 594:Middlewares/FreeRTOS/tasks.c ****             memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 595:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 596:Middlewares/FreeRTOS/tasks.c **** 
 597:Middlewares/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has be
 598:Middlewares/FreeRTOS/tasks.c ****             {
 599:Middlewares/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 600:Middlewares/FreeRTOS/tasks.c ****                  * task was created statically in case the task is later deleted. */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 12


 601:Middlewares/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 602:Middlewares/FreeRTOS/tasks.c ****             }
 603:Middlewares/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 604:Middlewares/FreeRTOS/tasks.c **** 
 605:Middlewares/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xRet
 606:Middlewares/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 607:Middlewares/FreeRTOS/tasks.c ****         }
 608:Middlewares/FreeRTOS/tasks.c ****         else
 609:Middlewares/FreeRTOS/tasks.c ****         {
 610:Middlewares/FreeRTOS/tasks.c ****             xReturn = NULL;
 611:Middlewares/FreeRTOS/tasks.c ****         }
 612:Middlewares/FreeRTOS/tasks.c **** 
 613:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
 614:Middlewares/FreeRTOS/tasks.c ****     }
 615:Middlewares/FreeRTOS/tasks.c **** 
 616:Middlewares/FreeRTOS/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 617:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 618:Middlewares/FreeRTOS/tasks.c **** 
 619:Middlewares/FreeRTOS/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 620:Middlewares/FreeRTOS/tasks.c **** 
 621:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition,
 622:Middlewares/FreeRTOS/tasks.c ****                                             TaskHandle_t * pxCreatedTask )
 623:Middlewares/FreeRTOS/tasks.c ****     {
 624:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 625:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 626:Middlewares/FreeRTOS/tasks.c **** 
 627:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 628:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 629:Middlewares/FreeRTOS/tasks.c **** 
 630:Middlewares/FreeRTOS/tasks.c ****         if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NUL
 631:Middlewares/FreeRTOS/tasks.c ****         {
 632:Middlewares/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 633:Middlewares/FreeRTOS/tasks.c ****              * on the implementation of the port malloc function and whether or
 634:Middlewares/FreeRTOS/tasks.c ****              * not static allocation is being used. */
 635:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 636:Middlewares/FreeRTOS/tasks.c ****             memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 637:Middlewares/FreeRTOS/tasks.c **** 
 638:Middlewares/FreeRTOS/tasks.c ****             /* Store the stack location in the TCB. */
 639:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 640:Middlewares/FreeRTOS/tasks.c **** 
 641:Middlewares/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 642:Middlewares/FreeRTOS/tasks.c ****             {
 643:Middlewares/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 644:Middlewares/FreeRTOS/tasks.c ****                  * task was created statically in case the task is later deleted. */
 645:Middlewares/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 646:Middlewares/FreeRTOS/tasks.c ****             }
 647:Middlewares/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 648:Middlewares/FreeRTOS/tasks.c **** 
 649:Middlewares/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 650:Middlewares/FreeRTOS/tasks.c ****                                   pxTaskDefinition->pcName,
 651:Middlewares/FreeRTOS/tasks.c ****                                   ( uint32_t ) pxTaskDefinition->usStackDepth,
 652:Middlewares/FreeRTOS/tasks.c ****                                   pxTaskDefinition->pvParameters,
 653:Middlewares/FreeRTOS/tasks.c ****                                   pxTaskDefinition->uxPriority,
 654:Middlewares/FreeRTOS/tasks.c ****                                   pxCreatedTask, pxNewTCB,
 655:Middlewares/FreeRTOS/tasks.c ****                                   pxTaskDefinition->xRegions );
 656:Middlewares/FreeRTOS/tasks.c **** 
 657:Middlewares/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 13


 658:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdPASS;
 659:Middlewares/FreeRTOS/tasks.c ****         }
 660:Middlewares/FreeRTOS/tasks.c **** 
 661:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
 662:Middlewares/FreeRTOS/tasks.c ****     }
 663:Middlewares/FreeRTOS/tasks.c **** 
 664:Middlewares/FreeRTOS/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 665:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 666:Middlewares/FreeRTOS/tasks.c **** 
 667:Middlewares/FreeRTOS/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 668:Middlewares/FreeRTOS/tasks.c **** 
 669:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition,
 670:Middlewares/FreeRTOS/tasks.c ****                                       TaskHandle_t * pxCreatedTask )
 671:Middlewares/FreeRTOS/tasks.c ****     {
 672:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 673:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 674:Middlewares/FreeRTOS/tasks.c **** 
 675:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer );
 676:Middlewares/FreeRTOS/tasks.c **** 
 677:Middlewares/FreeRTOS/tasks.c ****         if( pxTaskDefinition->puxStackBuffer != NULL )
 678:Middlewares/FreeRTOS/tasks.c ****         {
 679:Middlewares/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 680:Middlewares/FreeRTOS/tasks.c ****              * on the implementation of the port malloc function and whether or
 681:Middlewares/FreeRTOS/tasks.c ****              * not static allocation is being used. */
 682:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 683:Middlewares/FreeRTOS/tasks.c **** 
 684:Middlewares/FreeRTOS/tasks.c ****             if( pxNewTCB != NULL )
 685:Middlewares/FreeRTOS/tasks.c ****             {
 686:Middlewares/FreeRTOS/tasks.c ****                 memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 687:Middlewares/FreeRTOS/tasks.c **** 
 688:Middlewares/FreeRTOS/tasks.c ****                 /* Store the stack location in the TCB. */
 689:Middlewares/FreeRTOS/tasks.c ****                 pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 690:Middlewares/FreeRTOS/tasks.c **** 
 691:Middlewares/FreeRTOS/tasks.c ****                 #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 692:Middlewares/FreeRTOS/tasks.c ****                 {
 693:Middlewares/FreeRTOS/tasks.c ****                     /* Tasks can be created statically or dynamically, so note
 694:Middlewares/FreeRTOS/tasks.c ****                      * this task had a statically allocated stack in case it is
 695:Middlewares/FreeRTOS/tasks.c ****                      * later deleted.  The TCB was allocated dynamically. */
 696:Middlewares/FreeRTOS/tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 697:Middlewares/FreeRTOS/tasks.c ****                 }
 698:Middlewares/FreeRTOS/tasks.c ****                 #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 699:Middlewares/FreeRTOS/tasks.c **** 
 700:Middlewares/FreeRTOS/tasks.c ****                 prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 701:Middlewares/FreeRTOS/tasks.c ****                                       pxTaskDefinition->pcName,
 702:Middlewares/FreeRTOS/tasks.c ****                                       ( uint32_t ) pxTaskDefinition->usStackDepth,
 703:Middlewares/FreeRTOS/tasks.c ****                                       pxTaskDefinition->pvParameters,
 704:Middlewares/FreeRTOS/tasks.c ****                                       pxTaskDefinition->uxPriority,
 705:Middlewares/FreeRTOS/tasks.c ****                                       pxCreatedTask, pxNewTCB,
 706:Middlewares/FreeRTOS/tasks.c ****                                       pxTaskDefinition->xRegions );
 707:Middlewares/FreeRTOS/tasks.c **** 
 708:Middlewares/FreeRTOS/tasks.c ****                 prvAddNewTaskToReadyList( pxNewTCB );
 709:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 710:Middlewares/FreeRTOS/tasks.c ****             }
 711:Middlewares/FreeRTOS/tasks.c ****         }
 712:Middlewares/FreeRTOS/tasks.c **** 
 713:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
 714:Middlewares/FreeRTOS/tasks.c ****     }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 14


 715:Middlewares/FreeRTOS/tasks.c **** 
 716:Middlewares/FreeRTOS/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 717:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 718:Middlewares/FreeRTOS/tasks.c **** 
 719:Middlewares/FreeRTOS/tasks.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 720:Middlewares/FreeRTOS/tasks.c **** 
 721:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
 722:Middlewares/FreeRTOS/tasks.c ****                             const char * const pcName, /*lint !e971 Unqualified char types are allo
 723:Middlewares/FreeRTOS/tasks.c ****                             const configSTACK_DEPTH_TYPE usStackDepth,
 724:Middlewares/FreeRTOS/tasks.c ****                             void * const pvParameters,
 725:Middlewares/FreeRTOS/tasks.c ****                             UBaseType_t uxPriority,
 726:Middlewares/FreeRTOS/tasks.c ****                             TaskHandle_t * const pxCreatedTask )
 727:Middlewares/FreeRTOS/tasks.c ****     {
 728:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 729:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 730:Middlewares/FreeRTOS/tasks.c **** 
 731:Middlewares/FreeRTOS/tasks.c ****         /* If the stack grows down then allocate the stack then the TCB so the stack
 732:Middlewares/FreeRTOS/tasks.c ****          * does not grow into the TCB.  Likewise if the stack grows up then allocate
 733:Middlewares/FreeRTOS/tasks.c ****          * the TCB then the stack. */
 734:Middlewares/FreeRTOS/tasks.c ****         #if ( portSTACK_GROWTH > 0 )
 735:Middlewares/FreeRTOS/tasks.c ****         {
 736:Middlewares/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends on
 737:Middlewares/FreeRTOS/tasks.c ****              * the implementation of the port malloc function and whether or not static
 738:Middlewares/FreeRTOS/tasks.c ****              * allocation is being used. */
 739:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 740:Middlewares/FreeRTOS/tasks.c **** 
 741:Middlewares/FreeRTOS/tasks.c ****             if( pxNewTCB != NULL )
 742:Middlewares/FreeRTOS/tasks.c ****             {
 743:Middlewares/FreeRTOS/tasks.c ****                 memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 744:Middlewares/FreeRTOS/tasks.c **** 
 745:Middlewares/FreeRTOS/tasks.c ****                 /* Allocate space for the stack used by the task being created.
 746:Middlewares/FreeRTOS/tasks.c ****                  * The base of the stack memory stored in the TCB so the task can
 747:Middlewares/FreeRTOS/tasks.c ****                  * be deleted later if required. */
 748:Middlewares/FreeRTOS/tasks.c ****                 pxNewTCB->pxStack = ( StackType_t * ) pvPortMallocStack( ( ( ( size_t ) usStackDept
 749:Middlewares/FreeRTOS/tasks.c **** 
 750:Middlewares/FreeRTOS/tasks.c ****                 if( pxNewTCB->pxStack == NULL )
 751:Middlewares/FreeRTOS/tasks.c ****                 {
 752:Middlewares/FreeRTOS/tasks.c ****                     /* Could not allocate the stack.  Delete the allocated TCB. */
 753:Middlewares/FreeRTOS/tasks.c ****                     vPortFree( pxNewTCB );
 754:Middlewares/FreeRTOS/tasks.c ****                     pxNewTCB = NULL;
 755:Middlewares/FreeRTOS/tasks.c ****                 }
 756:Middlewares/FreeRTOS/tasks.c ****             }
 757:Middlewares/FreeRTOS/tasks.c ****         }
 758:Middlewares/FreeRTOS/tasks.c ****         #else /* portSTACK_GROWTH */
 759:Middlewares/FreeRTOS/tasks.c ****         {
 760:Middlewares/FreeRTOS/tasks.c ****             StackType_t * pxStack;
 761:Middlewares/FreeRTOS/tasks.c **** 
 762:Middlewares/FreeRTOS/tasks.c ****             /* Allocate space for the stack used by the task being created. */
 763:Middlewares/FreeRTOS/tasks.c ****             pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) );
 764:Middlewares/FreeRTOS/tasks.c **** 
 765:Middlewares/FreeRTOS/tasks.c ****             if( pxStack != NULL )
 766:Middlewares/FreeRTOS/tasks.c ****             {
 767:Middlewares/FreeRTOS/tasks.c ****                 /* Allocate space for the TCB. */
 768:Middlewares/FreeRTOS/tasks.c ****                 pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All va
 769:Middlewares/FreeRTOS/tasks.c **** 
 770:Middlewares/FreeRTOS/tasks.c ****                 if( pxNewTCB != NULL )
 771:Middlewares/FreeRTOS/tasks.c ****                 {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 15


 772:Middlewares/FreeRTOS/tasks.c ****                     memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 773:Middlewares/FreeRTOS/tasks.c **** 
 774:Middlewares/FreeRTOS/tasks.c ****                     /* Store the stack location in the TCB. */
 775:Middlewares/FreeRTOS/tasks.c ****                     pxNewTCB->pxStack = pxStack;
 776:Middlewares/FreeRTOS/tasks.c ****                 }
 777:Middlewares/FreeRTOS/tasks.c ****                 else
 778:Middlewares/FreeRTOS/tasks.c ****                 {
 779:Middlewares/FreeRTOS/tasks.c ****                     /* The stack cannot be used as the TCB was not created.  Free
 780:Middlewares/FreeRTOS/tasks.c ****                      * it again. */
 781:Middlewares/FreeRTOS/tasks.c ****                     vPortFreeStack( pxStack );
 782:Middlewares/FreeRTOS/tasks.c ****                 }
 783:Middlewares/FreeRTOS/tasks.c ****             }
 784:Middlewares/FreeRTOS/tasks.c ****             else
 785:Middlewares/FreeRTOS/tasks.c ****             {
 786:Middlewares/FreeRTOS/tasks.c ****                 pxNewTCB = NULL;
 787:Middlewares/FreeRTOS/tasks.c ****             }
 788:Middlewares/FreeRTOS/tasks.c ****         }
 789:Middlewares/FreeRTOS/tasks.c ****         #endif /* portSTACK_GROWTH */
 790:Middlewares/FreeRTOS/tasks.c **** 
 791:Middlewares/FreeRTOS/tasks.c ****         if( pxNewTCB != NULL )
 792:Middlewares/FreeRTOS/tasks.c ****         {
 793:Middlewares/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has be
 794:Middlewares/FreeRTOS/tasks.c ****             {
 795:Middlewares/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 796:Middlewares/FreeRTOS/tasks.c ****                  * task was created dynamically in case it is later deleted. */
 797:Middlewares/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 798:Middlewares/FreeRTOS/tasks.c ****             }
 799:Middlewares/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 800:Middlewares/FreeRTOS/tasks.c **** 
 801:Middlewares/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPr
 802:Middlewares/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 803:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdPASS;
 804:Middlewares/FreeRTOS/tasks.c ****         }
 805:Middlewares/FreeRTOS/tasks.c ****         else
 806:Middlewares/FreeRTOS/tasks.c ****         {
 807:Middlewares/FreeRTOS/tasks.c ****             xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 808:Middlewares/FreeRTOS/tasks.c ****         }
 809:Middlewares/FreeRTOS/tasks.c **** 
 810:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
 811:Middlewares/FreeRTOS/tasks.c ****     }
 812:Middlewares/FreeRTOS/tasks.c **** 
 813:Middlewares/FreeRTOS/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 814:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 815:Middlewares/FreeRTOS/tasks.c **** 
 816:Middlewares/FreeRTOS/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 817:Middlewares/FreeRTOS/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 818:Middlewares/FreeRTOS/tasks.c ****                                   const uint32_t ulStackDepth,
 819:Middlewares/FreeRTOS/tasks.c ****                                   void * const pvParameters,
 820:Middlewares/FreeRTOS/tasks.c ****                                   UBaseType_t uxPriority,
 821:Middlewares/FreeRTOS/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 822:Middlewares/FreeRTOS/tasks.c ****                                   TCB_t * pxNewTCB,
 823:Middlewares/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions )
 824:Middlewares/FreeRTOS/tasks.c **** {
 825:Middlewares/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 826:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t x;
 827:Middlewares/FreeRTOS/tasks.c **** 
 828:Middlewares/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 16


 829:Middlewares/FreeRTOS/tasks.c ****         /* Should the task be created in privileged mode? */
 830:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xRunPrivileged;
 831:Middlewares/FreeRTOS/tasks.c **** 
 832:Middlewares/FreeRTOS/tasks.c ****         if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 833:Middlewares/FreeRTOS/tasks.c ****         {
 834:Middlewares/FreeRTOS/tasks.c ****             xRunPrivileged = pdTRUE;
 835:Middlewares/FreeRTOS/tasks.c ****         }
 836:Middlewares/FreeRTOS/tasks.c ****         else
 837:Middlewares/FreeRTOS/tasks.c ****         {
 838:Middlewares/FreeRTOS/tasks.c ****             xRunPrivileged = pdFALSE;
 839:Middlewares/FreeRTOS/tasks.c ****         }
 840:Middlewares/FreeRTOS/tasks.c ****         uxPriority &= ~portPRIVILEGE_BIT;
 841:Middlewares/FreeRTOS/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS == 1 */
 842:Middlewares/FreeRTOS/tasks.c **** 
 843:Middlewares/FreeRTOS/tasks.c ****     /* Avoid dependency on memset() if it is not required. */
 844:Middlewares/FreeRTOS/tasks.c ****     #if ( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 845:Middlewares/FreeRTOS/tasks.c ****     {
 846:Middlewares/FreeRTOS/tasks.c ****         /* Fill the stack with a known value to assist debugging. */
 847:Middlewares/FreeRTOS/tasks.c ****         ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * s
 848:Middlewares/FreeRTOS/tasks.c ****     }
 849:Middlewares/FreeRTOS/tasks.c ****     #endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 850:Middlewares/FreeRTOS/tasks.c **** 
 851:Middlewares/FreeRTOS/tasks.c ****     /* Calculate the top of stack address.  This depends on whether the stack
 852:Middlewares/FreeRTOS/tasks.c ****      * grows from high memory to low (as per the 80x86) or vice versa.
 853:Middlewares/FreeRTOS/tasks.c ****      * portSTACK_GROWTH is used to make the result positive or negative as required
 854:Middlewares/FreeRTOS/tasks.c ****      * by the port. */
 855:Middlewares/FreeRTOS/tasks.c ****     #if ( portSTACK_GROWTH < 0 )
 856:Middlewares/FreeRTOS/tasks.c ****     {
 857:Middlewares/FreeRTOS/tasks.c ****         pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 858:Middlewares/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 859:Middlewares/FreeRTOS/tasks.c **** 
 860:Middlewares/FreeRTOS/tasks.c ****         /* Check the alignment of the calculated top of stack is correct. */
 861:Middlewares/FreeRTOS/tasks.c ****         configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBY
 862:Middlewares/FreeRTOS/tasks.c **** 
 863:Middlewares/FreeRTOS/tasks.c ****         #if ( configRECORD_STACK_HIGH_ADDRESS == 1 )
 864:Middlewares/FreeRTOS/tasks.c ****         {
 865:Middlewares/FreeRTOS/tasks.c ****             /* Also record the stack's high address, which may assist
 866:Middlewares/FreeRTOS/tasks.c ****              * debugging. */
 867:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB->pxEndOfStack = pxTopOfStack;
 868:Middlewares/FreeRTOS/tasks.c ****         }
 869:Middlewares/FreeRTOS/tasks.c ****         #endif /* configRECORD_STACK_HIGH_ADDRESS */
 870:Middlewares/FreeRTOS/tasks.c ****     }
 871:Middlewares/FreeRTOS/tasks.c ****     #else /* portSTACK_GROWTH */
 872:Middlewares/FreeRTOS/tasks.c ****     {
 873:Middlewares/FreeRTOS/tasks.c ****         pxTopOfStack = pxNewTCB->pxStack;
 874:Middlewares/FreeRTOS/tasks.c **** 
 875:Middlewares/FreeRTOS/tasks.c ****         /* Check the alignment of the stack buffer is correct. */
 876:Middlewares/FreeRTOS/tasks.c ****         configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) p
 877:Middlewares/FreeRTOS/tasks.c **** 
 878:Middlewares/FreeRTOS/tasks.c ****         /* The other extreme of the stack space is required if stack checking is
 879:Middlewares/FreeRTOS/tasks.c ****          * performed. */
 880:Middlewares/FreeRTOS/tasks.c ****         pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 881:Middlewares/FreeRTOS/tasks.c ****     }
 882:Middlewares/FreeRTOS/tasks.c ****     #endif /* portSTACK_GROWTH */
 883:Middlewares/FreeRTOS/tasks.c **** 
 884:Middlewares/FreeRTOS/tasks.c ****     /* Store the task name in the TCB. */
 885:Middlewares/FreeRTOS/tasks.c ****     if( pcName != NULL )
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 17


 886:Middlewares/FreeRTOS/tasks.c ****     {
 887:Middlewares/FreeRTOS/tasks.c ****         for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 888:Middlewares/FreeRTOS/tasks.c ****         {
 889:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 890:Middlewares/FreeRTOS/tasks.c **** 
 891:Middlewares/FreeRTOS/tasks.c ****             /* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 892:Middlewares/FreeRTOS/tasks.c ****              * configMAX_TASK_NAME_LEN characters just in case the memory after the
 893:Middlewares/FreeRTOS/tasks.c ****              * string is not accessible (extremely unlikely). */
 894:Middlewares/FreeRTOS/tasks.c ****             if( pcName[ x ] == ( char ) 0x00 )
 895:Middlewares/FreeRTOS/tasks.c ****             {
 896:Middlewares/FreeRTOS/tasks.c ****                 break;
 897:Middlewares/FreeRTOS/tasks.c ****             }
 898:Middlewares/FreeRTOS/tasks.c ****             else
 899:Middlewares/FreeRTOS/tasks.c ****             {
 900:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
 901:Middlewares/FreeRTOS/tasks.c ****             }
 902:Middlewares/FreeRTOS/tasks.c ****         }
 903:Middlewares/FreeRTOS/tasks.c **** 
 904:Middlewares/FreeRTOS/tasks.c ****         /* Ensure the name string is terminated in the case that the string length
 905:Middlewares/FreeRTOS/tasks.c ****          * was greater or equal to configMAX_TASK_NAME_LEN. */
 906:Middlewares/FreeRTOS/tasks.c ****         pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 907:Middlewares/FreeRTOS/tasks.c ****     }
 908:Middlewares/FreeRTOS/tasks.c ****     else
 909:Middlewares/FreeRTOS/tasks.c ****     {
 910:Middlewares/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 911:Middlewares/FreeRTOS/tasks.c ****     }
 912:Middlewares/FreeRTOS/tasks.c **** 
 913:Middlewares/FreeRTOS/tasks.c ****     /* This is used as an array index so must ensure it's not too large. */
 914:Middlewares/FreeRTOS/tasks.c ****     configASSERT( uxPriority < configMAX_PRIORITIES );
 915:Middlewares/FreeRTOS/tasks.c **** 
 916:Middlewares/FreeRTOS/tasks.c ****     if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 917:Middlewares/FreeRTOS/tasks.c ****     {
 918:Middlewares/FreeRTOS/tasks.c ****         uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 919:Middlewares/FreeRTOS/tasks.c ****     }
 920:Middlewares/FreeRTOS/tasks.c ****     else
 921:Middlewares/FreeRTOS/tasks.c ****     {
 922:Middlewares/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 923:Middlewares/FreeRTOS/tasks.c ****     }
 924:Middlewares/FreeRTOS/tasks.c **** 
 925:Middlewares/FreeRTOS/tasks.c ****     pxNewTCB->uxPriority = uxPriority;
 926:Middlewares/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 927:Middlewares/FreeRTOS/tasks.c ****     {
 928:Middlewares/FreeRTOS/tasks.c ****         pxNewTCB->uxBasePriority = uxPriority;
 929:Middlewares/FreeRTOS/tasks.c ****     }
 930:Middlewares/FreeRTOS/tasks.c ****     #endif /* configUSE_MUTEXES */
 931:Middlewares/FreeRTOS/tasks.c **** 
 932:Middlewares/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 933:Middlewares/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 934:Middlewares/FreeRTOS/tasks.c **** 
 935:Middlewares/FreeRTOS/tasks.c ****     /* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 936:Middlewares/FreeRTOS/tasks.c ****      * back to  the containing TCB from a generic item in a list. */
 937:Middlewares/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 938:Middlewares/FreeRTOS/tasks.c **** 
 939:Middlewares/FreeRTOS/tasks.c ****     /* Event lists are always in priority order. */
 940:Middlewares/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - (
 941:Middlewares/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 942:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 18


 943:Middlewares/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 944:Middlewares/FreeRTOS/tasks.c ****     {
 945:Middlewares/FreeRTOS/tasks.c ****         vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStac
 946:Middlewares/FreeRTOS/tasks.c ****     }
 947:Middlewares/FreeRTOS/tasks.c ****     #else
 948:Middlewares/FreeRTOS/tasks.c ****     {
 949:Middlewares/FreeRTOS/tasks.c ****         /* Avoid compiler warning about unreferenced parameter. */
 950:Middlewares/FreeRTOS/tasks.c ****         ( void ) xRegions;
 951:Middlewares/FreeRTOS/tasks.c ****     }
 952:Middlewares/FreeRTOS/tasks.c ****     #endif
 953:Middlewares/FreeRTOS/tasks.c **** 
 954:Middlewares/FreeRTOS/tasks.c ****     #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
 955:Middlewares/FreeRTOS/tasks.c ****     {
 956:Middlewares/FreeRTOS/tasks.c ****         /* Allocate and initialize memory for the task's TLS Block. */
 957:Middlewares/FreeRTOS/tasks.c ****         configINIT_TLS_BLOCK( pxNewTCB->xTLSBlock );
 958:Middlewares/FreeRTOS/tasks.c ****     }
 959:Middlewares/FreeRTOS/tasks.c ****     #endif
 960:Middlewares/FreeRTOS/tasks.c **** 
 961:Middlewares/FreeRTOS/tasks.c ****     /* Initialize the TCB stack to look as if the task was already running,
 962:Middlewares/FreeRTOS/tasks.c ****      * but had been interrupted by the scheduler.  The return address is set
 963:Middlewares/FreeRTOS/tasks.c ****      * to the start of the task function. Once the stack has been initialised
 964:Middlewares/FreeRTOS/tasks.c ****      * the top of stack variable is updated. */
 965:Middlewares/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 966:Middlewares/FreeRTOS/tasks.c ****     {
 967:Middlewares/FreeRTOS/tasks.c ****         /* If the port has capability to detect stack overflow,
 968:Middlewares/FreeRTOS/tasks.c ****          * pass the stack end address to the stack initialization
 969:Middlewares/FreeRTOS/tasks.c ****          * function as well. */
 970:Middlewares/FreeRTOS/tasks.c ****         #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
 971:Middlewares/FreeRTOS/tasks.c ****         {
 972:Middlewares/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH < 0 )
 973:Middlewares/FreeRTOS/tasks.c ****             {
 974:Middlewares/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, px
 975:Middlewares/FreeRTOS/tasks.c ****             }
 976:Middlewares/FreeRTOS/tasks.c ****             #else /* portSTACK_GROWTH */
 977:Middlewares/FreeRTOS/tasks.c ****             {
 978:Middlewares/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStac
 979:Middlewares/FreeRTOS/tasks.c ****             }
 980:Middlewares/FreeRTOS/tasks.c ****             #endif /* portSTACK_GROWTH */
 981:Middlewares/FreeRTOS/tasks.c ****         }
 982:Middlewares/FreeRTOS/tasks.c ****         #else /* portHAS_STACK_OVERFLOW_CHECKING */
 983:Middlewares/FreeRTOS/tasks.c ****         {
 984:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters,
 985:Middlewares/FreeRTOS/tasks.c ****         }
 986:Middlewares/FreeRTOS/tasks.c ****         #endif /* portHAS_STACK_OVERFLOW_CHECKING */
 987:Middlewares/FreeRTOS/tasks.c ****     }
 988:Middlewares/FreeRTOS/tasks.c ****     #else /* portUSING_MPU_WRAPPERS */
 989:Middlewares/FreeRTOS/tasks.c ****     {
 990:Middlewares/FreeRTOS/tasks.c ****         /* If the port has capability to detect stack overflow,
 991:Middlewares/FreeRTOS/tasks.c ****          * pass the stack end address to the stack initialization
 992:Middlewares/FreeRTOS/tasks.c ****          * function as well. */
 993:Middlewares/FreeRTOS/tasks.c ****         #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
 994:Middlewares/FreeRTOS/tasks.c ****         {
 995:Middlewares/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH < 0 )
 996:Middlewares/FreeRTOS/tasks.c ****             {
 997:Middlewares/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, px
 998:Middlewares/FreeRTOS/tasks.c ****             }
 999:Middlewares/FreeRTOS/tasks.c ****             #else /* portSTACK_GROWTH */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 19


1000:Middlewares/FreeRTOS/tasks.c ****             {
1001:Middlewares/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStac
1002:Middlewares/FreeRTOS/tasks.c ****             }
1003:Middlewares/FreeRTOS/tasks.c ****             #endif /* portSTACK_GROWTH */
1004:Middlewares/FreeRTOS/tasks.c ****         }
1005:Middlewares/FreeRTOS/tasks.c ****         #else /* portHAS_STACK_OVERFLOW_CHECKING */
1006:Middlewares/FreeRTOS/tasks.c ****         {
1007:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters 
1008:Middlewares/FreeRTOS/tasks.c ****         }
1009:Middlewares/FreeRTOS/tasks.c ****         #endif /* portHAS_STACK_OVERFLOW_CHECKING */
1010:Middlewares/FreeRTOS/tasks.c ****     }
1011:Middlewares/FreeRTOS/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS */
1012:Middlewares/FreeRTOS/tasks.c **** 
1013:Middlewares/FreeRTOS/tasks.c ****     if( pxCreatedTask != NULL )
1014:Middlewares/FreeRTOS/tasks.c ****     {
1015:Middlewares/FreeRTOS/tasks.c ****         /* Pass the handle out in an anonymous way.  The handle can be used to
1016:Middlewares/FreeRTOS/tasks.c ****          * change the created task's priority, delete the created task, etc.*/
1017:Middlewares/FreeRTOS/tasks.c ****         *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1018:Middlewares/FreeRTOS/tasks.c ****     }
1019:Middlewares/FreeRTOS/tasks.c ****     else
1020:Middlewares/FreeRTOS/tasks.c ****     {
1021:Middlewares/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1022:Middlewares/FreeRTOS/tasks.c ****     }
1023:Middlewares/FreeRTOS/tasks.c **** }
1024:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1025:Middlewares/FreeRTOS/tasks.c **** 
1026:Middlewares/FreeRTOS/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
1027:Middlewares/FreeRTOS/tasks.c **** {
1028:Middlewares/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
1029:Middlewares/FreeRTOS/tasks.c ****      * updated. */
1030:Middlewares/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
1031:Middlewares/FreeRTOS/tasks.c ****     {
1032:Middlewares/FreeRTOS/tasks.c ****         uxCurrentNumberOfTasks++;
1033:Middlewares/FreeRTOS/tasks.c **** 
1034:Middlewares/FreeRTOS/tasks.c ****         if( pxCurrentTCB == NULL )
1035:Middlewares/FreeRTOS/tasks.c ****         {
1036:Middlewares/FreeRTOS/tasks.c ****             /* There are no other tasks, or all the other tasks are in
1037:Middlewares/FreeRTOS/tasks.c ****              * the suspended state - make this the current task. */
1038:Middlewares/FreeRTOS/tasks.c ****             pxCurrentTCB = pxNewTCB;
1039:Middlewares/FreeRTOS/tasks.c **** 
1040:Middlewares/FreeRTOS/tasks.c ****             if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:Middlewares/FreeRTOS/tasks.c ****             {
1042:Middlewares/FreeRTOS/tasks.c ****                 /* This is the first task to be created so do the preliminary
1043:Middlewares/FreeRTOS/tasks.c ****                  * initialisation required.  We will not recover if this call
1044:Middlewares/FreeRTOS/tasks.c ****                  * fails, but we will report the failure. */
1045:Middlewares/FreeRTOS/tasks.c ****                 prvInitialiseTaskLists();
1046:Middlewares/FreeRTOS/tasks.c ****             }
1047:Middlewares/FreeRTOS/tasks.c ****             else
1048:Middlewares/FreeRTOS/tasks.c ****             {
1049:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1050:Middlewares/FreeRTOS/tasks.c ****             }
1051:Middlewares/FreeRTOS/tasks.c ****         }
1052:Middlewares/FreeRTOS/tasks.c ****         else
1053:Middlewares/FreeRTOS/tasks.c ****         {
1054:Middlewares/FreeRTOS/tasks.c ****             /* If the scheduler is not already running, make this task the
1055:Middlewares/FreeRTOS/tasks.c ****              * current task if it is the highest priority task to be created
1056:Middlewares/FreeRTOS/tasks.c ****              * so far. */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 20


1057:Middlewares/FreeRTOS/tasks.c ****             if( xSchedulerRunning == pdFALSE )
1058:Middlewares/FreeRTOS/tasks.c ****             {
1059:Middlewares/FreeRTOS/tasks.c ****                 if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:Middlewares/FreeRTOS/tasks.c ****                 {
1061:Middlewares/FreeRTOS/tasks.c ****                     pxCurrentTCB = pxNewTCB;
1062:Middlewares/FreeRTOS/tasks.c ****                 }
1063:Middlewares/FreeRTOS/tasks.c ****                 else
1064:Middlewares/FreeRTOS/tasks.c ****                 {
1065:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1066:Middlewares/FreeRTOS/tasks.c ****                 }
1067:Middlewares/FreeRTOS/tasks.c ****             }
1068:Middlewares/FreeRTOS/tasks.c ****             else
1069:Middlewares/FreeRTOS/tasks.c ****             {
1070:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1071:Middlewares/FreeRTOS/tasks.c ****             }
1072:Middlewares/FreeRTOS/tasks.c ****         }
1073:Middlewares/FreeRTOS/tasks.c **** 
1074:Middlewares/FreeRTOS/tasks.c ****         uxTaskNumber++;
1075:Middlewares/FreeRTOS/tasks.c **** 
1076:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
1077:Middlewares/FreeRTOS/tasks.c ****         {
1078:Middlewares/FreeRTOS/tasks.c ****             /* Add a counter into the TCB for tracing only. */
1079:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:Middlewares/FreeRTOS/tasks.c ****         }
1081:Middlewares/FreeRTOS/tasks.c ****         #endif /* configUSE_TRACE_FACILITY */
1082:Middlewares/FreeRTOS/tasks.c ****         traceTASK_CREATE( pxNewTCB );
1083:Middlewares/FreeRTOS/tasks.c **** 
1084:Middlewares/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxNewTCB );
1085:Middlewares/FreeRTOS/tasks.c **** 
1086:Middlewares/FreeRTOS/tasks.c ****         portSETUP_TCB( pxNewTCB );
1087:Middlewares/FreeRTOS/tasks.c ****     }
1088:Middlewares/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
1089:Middlewares/FreeRTOS/tasks.c **** 
1090:Middlewares/FreeRTOS/tasks.c ****     if( xSchedulerRunning != pdFALSE )
1091:Middlewares/FreeRTOS/tasks.c ****     {
1092:Middlewares/FreeRTOS/tasks.c ****         /* If the created task is of a higher priority than the current task
1093:Middlewares/FreeRTOS/tasks.c ****          * then it should run now. */
1094:Middlewares/FreeRTOS/tasks.c ****         if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:Middlewares/FreeRTOS/tasks.c ****         {
1096:Middlewares/FreeRTOS/tasks.c ****             taskYIELD_IF_USING_PREEMPTION();
1097:Middlewares/FreeRTOS/tasks.c ****         }
1098:Middlewares/FreeRTOS/tasks.c ****         else
1099:Middlewares/FreeRTOS/tasks.c ****         {
1100:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1101:Middlewares/FreeRTOS/tasks.c ****         }
1102:Middlewares/FreeRTOS/tasks.c ****     }
1103:Middlewares/FreeRTOS/tasks.c ****     else
1104:Middlewares/FreeRTOS/tasks.c ****     {
1105:Middlewares/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1106:Middlewares/FreeRTOS/tasks.c ****     }
1107:Middlewares/FreeRTOS/tasks.c **** }
1108:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1109:Middlewares/FreeRTOS/tasks.c **** 
1110:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:Middlewares/FreeRTOS/tasks.c **** 
1112:Middlewares/FreeRTOS/tasks.c ****     void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:Middlewares/FreeRTOS/tasks.c ****     {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 21


1114:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1115:Middlewares/FreeRTOS/tasks.c **** 
1116:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1117:Middlewares/FreeRTOS/tasks.c ****         {
1118:Middlewares/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the calling task that is
1119:Middlewares/FreeRTOS/tasks.c ****              * being deleted. */
1120:Middlewares/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:Middlewares/FreeRTOS/tasks.c **** 
1122:Middlewares/FreeRTOS/tasks.c ****             /* Remove task from the ready/delayed list. */
1123:Middlewares/FreeRTOS/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:Middlewares/FreeRTOS/tasks.c ****             {
1125:Middlewares/FreeRTOS/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:Middlewares/FreeRTOS/tasks.c ****             }
1127:Middlewares/FreeRTOS/tasks.c ****             else
1128:Middlewares/FreeRTOS/tasks.c ****             {
1129:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1130:Middlewares/FreeRTOS/tasks.c ****             }
1131:Middlewares/FreeRTOS/tasks.c **** 
1132:Middlewares/FreeRTOS/tasks.c ****             /* Is the task waiting on an event also? */
1133:Middlewares/FreeRTOS/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:Middlewares/FreeRTOS/tasks.c ****             {
1135:Middlewares/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:Middlewares/FreeRTOS/tasks.c ****             }
1137:Middlewares/FreeRTOS/tasks.c ****             else
1138:Middlewares/FreeRTOS/tasks.c ****             {
1139:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1140:Middlewares/FreeRTOS/tasks.c ****             }
1141:Middlewares/FreeRTOS/tasks.c **** 
1142:Middlewares/FreeRTOS/tasks.c ****             /* Increment the uxTaskNumber also so kernel aware debuggers can
1143:Middlewares/FreeRTOS/tasks.c ****              * detect that the task lists need re-generating.  This is done before
1144:Middlewares/FreeRTOS/tasks.c ****              * portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:Middlewares/FreeRTOS/tasks.c ****              * not return. */
1146:Middlewares/FreeRTOS/tasks.c ****             uxTaskNumber++;
1147:Middlewares/FreeRTOS/tasks.c **** 
1148:Middlewares/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
1149:Middlewares/FreeRTOS/tasks.c ****             {
1150:Middlewares/FreeRTOS/tasks.c ****                 /* A task is deleting itself.  This cannot complete within the
1151:Middlewares/FreeRTOS/tasks.c ****                  * task itself, as a context switch to another task is required.
1152:Middlewares/FreeRTOS/tasks.c ****                  * Place the task in the termination list.  The idle task will
1153:Middlewares/FreeRTOS/tasks.c ****                  * check the termination list and free up any memory allocated by
1154:Middlewares/FreeRTOS/tasks.c ****                  * the scheduler for the TCB and stack of the deleted task. */
1155:Middlewares/FreeRTOS/tasks.c ****                 vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:Middlewares/FreeRTOS/tasks.c **** 
1157:Middlewares/FreeRTOS/tasks.c ****                 /* Increment the ucTasksDeleted variable so the idle task knows
1158:Middlewares/FreeRTOS/tasks.c ****                  * there is a task that has been deleted and that it should therefore
1159:Middlewares/FreeRTOS/tasks.c ****                  * check the xTasksWaitingTermination list. */
1160:Middlewares/FreeRTOS/tasks.c ****                 ++uxDeletedTasksWaitingCleanUp;
1161:Middlewares/FreeRTOS/tasks.c **** 
1162:Middlewares/FreeRTOS/tasks.c ****                 /* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1163:Middlewares/FreeRTOS/tasks.c ****                  * portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1164:Middlewares/FreeRTOS/tasks.c ****                 traceTASK_DELETE( pxTCB );
1165:Middlewares/FreeRTOS/tasks.c **** 
1166:Middlewares/FreeRTOS/tasks.c ****                 /* The pre-delete hook is primarily for the Windows simulator,
1167:Middlewares/FreeRTOS/tasks.c ****                  * in which Windows specific clean up operations are performed,
1168:Middlewares/FreeRTOS/tasks.c ****                  * after which it is not possible to yield away from this task -
1169:Middlewares/FreeRTOS/tasks.c ****                  * hence xYieldPending is used to latch that a context switch is
1170:Middlewares/FreeRTOS/tasks.c ****                  * required. */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 22


1171:Middlewares/FreeRTOS/tasks.c ****                 portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1172:Middlewares/FreeRTOS/tasks.c ****             }
1173:Middlewares/FreeRTOS/tasks.c ****             else
1174:Middlewares/FreeRTOS/tasks.c ****             {
1175:Middlewares/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
1176:Middlewares/FreeRTOS/tasks.c ****                 traceTASK_DELETE( pxTCB );
1177:Middlewares/FreeRTOS/tasks.c **** 
1178:Middlewares/FreeRTOS/tasks.c ****                 /* Reset the next expected unblock time in case it referred to
1179:Middlewares/FreeRTOS/tasks.c ****                  * the task that has just been deleted. */
1180:Middlewares/FreeRTOS/tasks.c ****                 prvResetNextTaskUnblockTime();
1181:Middlewares/FreeRTOS/tasks.c ****             }
1182:Middlewares/FreeRTOS/tasks.c ****         }
1183:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1184:Middlewares/FreeRTOS/tasks.c **** 
1185:Middlewares/FreeRTOS/tasks.c ****         /* If the task is not deleting itself, call prvDeleteTCB from outside of
1186:Middlewares/FreeRTOS/tasks.c ****          * critical section. If a task deletes itself, prvDeleteTCB is called
1187:Middlewares/FreeRTOS/tasks.c ****          * from prvCheckTasksWaitingTermination which is called from Idle task. */
1188:Middlewares/FreeRTOS/tasks.c ****         if( pxTCB != pxCurrentTCB )
1189:Middlewares/FreeRTOS/tasks.c ****         {
1190:Middlewares/FreeRTOS/tasks.c ****             prvDeleteTCB( pxTCB );
1191:Middlewares/FreeRTOS/tasks.c ****         }
1192:Middlewares/FreeRTOS/tasks.c **** 
1193:Middlewares/FreeRTOS/tasks.c ****         /* Force a reschedule if it is the currently running task that has just
1194:Middlewares/FreeRTOS/tasks.c ****          * been deleted. */
1195:Middlewares/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
1196:Middlewares/FreeRTOS/tasks.c ****         {
1197:Middlewares/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
1198:Middlewares/FreeRTOS/tasks.c ****             {
1199:Middlewares/FreeRTOS/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1200:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
1201:Middlewares/FreeRTOS/tasks.c ****             }
1202:Middlewares/FreeRTOS/tasks.c ****             else
1203:Middlewares/FreeRTOS/tasks.c ****             {
1204:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1205:Middlewares/FreeRTOS/tasks.c ****             }
1206:Middlewares/FreeRTOS/tasks.c ****         }
1207:Middlewares/FreeRTOS/tasks.c ****     }
1208:Middlewares/FreeRTOS/tasks.c **** 
1209:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1210:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1211:Middlewares/FreeRTOS/tasks.c **** 
1212:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskDelayUntil == 1 )
1213:Middlewares/FreeRTOS/tasks.c **** 
1214:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskDelayUntil( TickType_t * const pxPreviousWakeTime,
1215:Middlewares/FreeRTOS/tasks.c ****                                 const TickType_t xTimeIncrement )
1216:Middlewares/FreeRTOS/tasks.c ****     {
1217:Middlewares/FreeRTOS/tasks.c ****         TickType_t xTimeToWake;
1218:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1219:Middlewares/FreeRTOS/tasks.c **** 
1220:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxPreviousWakeTime );
1221:Middlewares/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
1222:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
1223:Middlewares/FreeRTOS/tasks.c **** 
1224:Middlewares/FreeRTOS/tasks.c ****         vTaskSuspendAll();
1225:Middlewares/FreeRTOS/tasks.c ****         {
1226:Middlewares/FreeRTOS/tasks.c ****             /* Minor optimisation.  The tick count cannot change in this
1227:Middlewares/FreeRTOS/tasks.c ****              * block. */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 23


1228:Middlewares/FreeRTOS/tasks.c ****             const TickType_t xConstTickCount = xTickCount;
1229:Middlewares/FreeRTOS/tasks.c **** 
1230:Middlewares/FreeRTOS/tasks.c ****             /* Generate the tick time at which the task wants to wake. */
1231:Middlewares/FreeRTOS/tasks.c ****             xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1232:Middlewares/FreeRTOS/tasks.c **** 
1233:Middlewares/FreeRTOS/tasks.c ****             if( xConstTickCount < *pxPreviousWakeTime )
1234:Middlewares/FreeRTOS/tasks.c ****             {
1235:Middlewares/FreeRTOS/tasks.c ****                 /* The tick count has overflowed since this function was
1236:Middlewares/FreeRTOS/tasks.c ****                  * lasted called.  In this case the only time we should ever
1237:Middlewares/FreeRTOS/tasks.c ****                  * actually delay is if the wake time has also  overflowed,
1238:Middlewares/FreeRTOS/tasks.c ****                  * and the wake time is greater than the tick time.  When this
1239:Middlewares/FreeRTOS/tasks.c ****                  * is the case it is as if neither time had overflowed. */
1240:Middlewares/FreeRTOS/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1241:Middlewares/FreeRTOS/tasks.c ****                 {
1242:Middlewares/FreeRTOS/tasks.c ****                     xShouldDelay = pdTRUE;
1243:Middlewares/FreeRTOS/tasks.c ****                 }
1244:Middlewares/FreeRTOS/tasks.c ****                 else
1245:Middlewares/FreeRTOS/tasks.c ****                 {
1246:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1247:Middlewares/FreeRTOS/tasks.c ****                 }
1248:Middlewares/FreeRTOS/tasks.c ****             }
1249:Middlewares/FreeRTOS/tasks.c ****             else
1250:Middlewares/FreeRTOS/tasks.c ****             {
1251:Middlewares/FreeRTOS/tasks.c ****                 /* The tick time has not overflowed.  In this case we will
1252:Middlewares/FreeRTOS/tasks.c ****                  * delay if either the wake time has overflowed, and/or the
1253:Middlewares/FreeRTOS/tasks.c ****                  * tick time is less than the wake time. */
1254:Middlewares/FreeRTOS/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1255:Middlewares/FreeRTOS/tasks.c ****                 {
1256:Middlewares/FreeRTOS/tasks.c ****                     xShouldDelay = pdTRUE;
1257:Middlewares/FreeRTOS/tasks.c ****                 }
1258:Middlewares/FreeRTOS/tasks.c ****                 else
1259:Middlewares/FreeRTOS/tasks.c ****                 {
1260:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1261:Middlewares/FreeRTOS/tasks.c ****                 }
1262:Middlewares/FreeRTOS/tasks.c ****             }
1263:Middlewares/FreeRTOS/tasks.c **** 
1264:Middlewares/FreeRTOS/tasks.c ****             /* Update the wake time ready for the next call. */
1265:Middlewares/FreeRTOS/tasks.c ****             *pxPreviousWakeTime = xTimeToWake;
1266:Middlewares/FreeRTOS/tasks.c **** 
1267:Middlewares/FreeRTOS/tasks.c ****             if( xShouldDelay != pdFALSE )
1268:Middlewares/FreeRTOS/tasks.c ****             {
1269:Middlewares/FreeRTOS/tasks.c ****                 traceTASK_DELAY_UNTIL( xTimeToWake );
1270:Middlewares/FreeRTOS/tasks.c **** 
1271:Middlewares/FreeRTOS/tasks.c ****                 /* prvAddCurrentTaskToDelayedList() needs the block time, not
1272:Middlewares/FreeRTOS/tasks.c ****                  * the time to wake, so subtract the current tick count. */
1273:Middlewares/FreeRTOS/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1274:Middlewares/FreeRTOS/tasks.c ****             }
1275:Middlewares/FreeRTOS/tasks.c ****             else
1276:Middlewares/FreeRTOS/tasks.c ****             {
1277:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1278:Middlewares/FreeRTOS/tasks.c ****             }
1279:Middlewares/FreeRTOS/tasks.c ****         }
1280:Middlewares/FreeRTOS/tasks.c ****         xAlreadyYielded = xTaskResumeAll();
1281:Middlewares/FreeRTOS/tasks.c **** 
1282:Middlewares/FreeRTOS/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1283:Middlewares/FreeRTOS/tasks.c ****          * have put ourselves to sleep. */
1284:Middlewares/FreeRTOS/tasks.c ****         if( xAlreadyYielded == pdFALSE )
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 24


1285:Middlewares/FreeRTOS/tasks.c ****         {
1286:Middlewares/FreeRTOS/tasks.c ****             portYIELD_WITHIN_API();
1287:Middlewares/FreeRTOS/tasks.c ****         }
1288:Middlewares/FreeRTOS/tasks.c ****         else
1289:Middlewares/FreeRTOS/tasks.c ****         {
1290:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1291:Middlewares/FreeRTOS/tasks.c ****         }
1292:Middlewares/FreeRTOS/tasks.c **** 
1293:Middlewares/FreeRTOS/tasks.c ****         return xShouldDelay;
1294:Middlewares/FreeRTOS/tasks.c ****     }
1295:Middlewares/FreeRTOS/tasks.c **** 
1296:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskDelayUntil */
1297:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1298:Middlewares/FreeRTOS/tasks.c **** 
1299:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1300:Middlewares/FreeRTOS/tasks.c **** 
1301:Middlewares/FreeRTOS/tasks.c ****     void vTaskDelay( const TickType_t xTicksToDelay )
1302:Middlewares/FreeRTOS/tasks.c ****     {
1303:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
1304:Middlewares/FreeRTOS/tasks.c **** 
1305:Middlewares/FreeRTOS/tasks.c ****         /* A delay time of zero just forces a reschedule. */
1306:Middlewares/FreeRTOS/tasks.c ****         if( xTicksToDelay > ( TickType_t ) 0U )
1307:Middlewares/FreeRTOS/tasks.c ****         {
1308:Middlewares/FreeRTOS/tasks.c ****             configASSERT( uxSchedulerSuspended == 0 );
1309:Middlewares/FreeRTOS/tasks.c ****             vTaskSuspendAll();
1310:Middlewares/FreeRTOS/tasks.c ****             {
1311:Middlewares/FreeRTOS/tasks.c ****                 traceTASK_DELAY();
1312:Middlewares/FreeRTOS/tasks.c **** 
1313:Middlewares/FreeRTOS/tasks.c ****                 /* A task that is removed from the event list while the
1314:Middlewares/FreeRTOS/tasks.c ****                  * scheduler is suspended will not get placed in the ready
1315:Middlewares/FreeRTOS/tasks.c ****                  * list or removed from the blocked list until the scheduler
1316:Middlewares/FreeRTOS/tasks.c ****                  * is resumed.
1317:Middlewares/FreeRTOS/tasks.c ****                  *
1318:Middlewares/FreeRTOS/tasks.c ****                  * This task cannot be in an event list as it is the currently
1319:Middlewares/FreeRTOS/tasks.c ****                  * executing task. */
1320:Middlewares/FreeRTOS/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1321:Middlewares/FreeRTOS/tasks.c ****             }
1322:Middlewares/FreeRTOS/tasks.c ****             xAlreadyYielded = xTaskResumeAll();
1323:Middlewares/FreeRTOS/tasks.c ****         }
1324:Middlewares/FreeRTOS/tasks.c ****         else
1325:Middlewares/FreeRTOS/tasks.c ****         {
1326:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1327:Middlewares/FreeRTOS/tasks.c ****         }
1328:Middlewares/FreeRTOS/tasks.c **** 
1329:Middlewares/FreeRTOS/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1330:Middlewares/FreeRTOS/tasks.c ****          * have put ourselves to sleep. */
1331:Middlewares/FreeRTOS/tasks.c ****         if( xAlreadyYielded == pdFALSE )
1332:Middlewares/FreeRTOS/tasks.c ****         {
1333:Middlewares/FreeRTOS/tasks.c ****             portYIELD_WITHIN_API();
1334:Middlewares/FreeRTOS/tasks.c ****         }
1335:Middlewares/FreeRTOS/tasks.c ****         else
1336:Middlewares/FreeRTOS/tasks.c ****         {
1337:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1338:Middlewares/FreeRTOS/tasks.c ****         }
1339:Middlewares/FreeRTOS/tasks.c ****     }
1340:Middlewares/FreeRTOS/tasks.c **** 
1341:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelay */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 25


1342:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1343:Middlewares/FreeRTOS/tasks.c **** 
1344:Middlewares/FreeRTOS/tasks.c **** #if ( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDe
1345:Middlewares/FreeRTOS/tasks.c **** 
1346:Middlewares/FreeRTOS/tasks.c ****     eTaskState eTaskGetState( TaskHandle_t xTask )
1347:Middlewares/FreeRTOS/tasks.c ****     {
1348:Middlewares/FreeRTOS/tasks.c ****         eTaskState eReturn;
1349:Middlewares/FreeRTOS/tasks.c ****         List_t const * pxStateList;
1350:Middlewares/FreeRTOS/tasks.c ****         List_t const * pxDelayedList;
1351:Middlewares/FreeRTOS/tasks.c ****         List_t const * pxOverflowedDelayedList;
1352:Middlewares/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
1353:Middlewares/FreeRTOS/tasks.c **** 
1354:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxTCB );
1355:Middlewares/FreeRTOS/tasks.c **** 
1356:Middlewares/FreeRTOS/tasks.c ****         if( pxTCB == pxCurrentTCB )
1357:Middlewares/FreeRTOS/tasks.c ****         {
1358:Middlewares/FreeRTOS/tasks.c ****             /* The task calling this function is querying its own state. */
1359:Middlewares/FreeRTOS/tasks.c ****             eReturn = eRunning;
1360:Middlewares/FreeRTOS/tasks.c ****         }
1361:Middlewares/FreeRTOS/tasks.c ****         else
1362:Middlewares/FreeRTOS/tasks.c ****         {
1363:Middlewares/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1364:Middlewares/FreeRTOS/tasks.c ****             {
1365:Middlewares/FreeRTOS/tasks.c ****                 pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1366:Middlewares/FreeRTOS/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
1367:Middlewares/FreeRTOS/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1368:Middlewares/FreeRTOS/tasks.c ****             }
1369:Middlewares/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1370:Middlewares/FreeRTOS/tasks.c **** 
1371:Middlewares/FreeRTOS/tasks.c ****             if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1372:Middlewares/FreeRTOS/tasks.c ****             {
1373:Middlewares/FreeRTOS/tasks.c ****                 /* The task being queried is referenced from one of the Blocked
1374:Middlewares/FreeRTOS/tasks.c ****                  * lists. */
1375:Middlewares/FreeRTOS/tasks.c ****                 eReturn = eBlocked;
1376:Middlewares/FreeRTOS/tasks.c ****             }
1377:Middlewares/FreeRTOS/tasks.c **** 
1378:Middlewares/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
1379:Middlewares/FreeRTOS/tasks.c ****                 else if( pxStateList == &xSuspendedTaskList )
1380:Middlewares/FreeRTOS/tasks.c ****                 {
1381:Middlewares/FreeRTOS/tasks.c ****                     /* The task being queried is referenced from the suspended
1382:Middlewares/FreeRTOS/tasks.c ****                      * list.  Is it genuinely suspended or is it blocked
1383:Middlewares/FreeRTOS/tasks.c ****                      * indefinitely? */
1384:Middlewares/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1385:Middlewares/FreeRTOS/tasks.c ****                     {
1386:Middlewares/FreeRTOS/tasks.c ****                         #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1387:Middlewares/FreeRTOS/tasks.c ****                         {
1388:Middlewares/FreeRTOS/tasks.c ****                             BaseType_t x;
1389:Middlewares/FreeRTOS/tasks.c **** 
1390:Middlewares/FreeRTOS/tasks.c ****                             /* The task does not appear on the event list item of
1391:Middlewares/FreeRTOS/tasks.c ****                              * and of the RTOS objects, but could still be in the
1392:Middlewares/FreeRTOS/tasks.c ****                              * blocked state if it is waiting on its notification
1393:Middlewares/FreeRTOS/tasks.c ****                              * rather than waiting on an object.  If not, is
1394:Middlewares/FreeRTOS/tasks.c ****                              * suspended. */
1395:Middlewares/FreeRTOS/tasks.c ****                             eReturn = eSuspended;
1396:Middlewares/FreeRTOS/tasks.c **** 
1397:Middlewares/FreeRTOS/tasks.c ****                             for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1398:Middlewares/FreeRTOS/tasks.c ****                             {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 26


1399:Middlewares/FreeRTOS/tasks.c ****                                 if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1400:Middlewares/FreeRTOS/tasks.c ****                                 {
1401:Middlewares/FreeRTOS/tasks.c ****                                     eReturn = eBlocked;
1402:Middlewares/FreeRTOS/tasks.c ****                                     break;
1403:Middlewares/FreeRTOS/tasks.c ****                                 }
1404:Middlewares/FreeRTOS/tasks.c ****                             }
1405:Middlewares/FreeRTOS/tasks.c ****                         }
1406:Middlewares/FreeRTOS/tasks.c ****                         #else /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1407:Middlewares/FreeRTOS/tasks.c ****                         {
1408:Middlewares/FreeRTOS/tasks.c ****                             eReturn = eSuspended;
1409:Middlewares/FreeRTOS/tasks.c ****                         }
1410:Middlewares/FreeRTOS/tasks.c ****                         #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1411:Middlewares/FreeRTOS/tasks.c ****                     }
1412:Middlewares/FreeRTOS/tasks.c ****                     else
1413:Middlewares/FreeRTOS/tasks.c ****                     {
1414:Middlewares/FreeRTOS/tasks.c ****                         eReturn = eBlocked;
1415:Middlewares/FreeRTOS/tasks.c ****                     }
1416:Middlewares/FreeRTOS/tasks.c ****                 }
1417:Middlewares/FreeRTOS/tasks.c ****             #endif /* if ( INCLUDE_vTaskSuspend == 1 ) */
1418:Middlewares/FreeRTOS/tasks.c **** 
1419:Middlewares/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
1420:Middlewares/FreeRTOS/tasks.c ****                 else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1421:Middlewares/FreeRTOS/tasks.c ****                 {
1422:Middlewares/FreeRTOS/tasks.c ****                     /* The task being queried is referenced from the deleted
1423:Middlewares/FreeRTOS/tasks.c ****                      * tasks list, or it is not referenced from any lists at
1424:Middlewares/FreeRTOS/tasks.c ****                      * all. */
1425:Middlewares/FreeRTOS/tasks.c ****                     eReturn = eDeleted;
1426:Middlewares/FreeRTOS/tasks.c ****                 }
1427:Middlewares/FreeRTOS/tasks.c ****             #endif
1428:Middlewares/FreeRTOS/tasks.c **** 
1429:Middlewares/FreeRTOS/tasks.c ****             else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer
1430:Middlewares/FreeRTOS/tasks.c ****             {
1431:Middlewares/FreeRTOS/tasks.c ****                 /* If the task is not in any other state, it must be in the
1432:Middlewares/FreeRTOS/tasks.c ****                  * Ready (including pending ready) state. */
1433:Middlewares/FreeRTOS/tasks.c ****                 eReturn = eReady;
1434:Middlewares/FreeRTOS/tasks.c ****             }
1435:Middlewares/FreeRTOS/tasks.c ****         }
1436:Middlewares/FreeRTOS/tasks.c **** 
1437:Middlewares/FreeRTOS/tasks.c ****         return eReturn;
1438:Middlewares/FreeRTOS/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1439:Middlewares/FreeRTOS/tasks.c **** 
1440:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1441:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1442:Middlewares/FreeRTOS/tasks.c **** 
1443:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1444:Middlewares/FreeRTOS/tasks.c **** 
1445:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1446:Middlewares/FreeRTOS/tasks.c ****     {
1447:Middlewares/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
1448:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
1449:Middlewares/FreeRTOS/tasks.c **** 
1450:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1451:Middlewares/FreeRTOS/tasks.c ****         {
1452:Middlewares/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the task
1453:Middlewares/FreeRTOS/tasks.c ****              * that called uxTaskPriorityGet() that is being queried. */
1454:Middlewares/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1455:Middlewares/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 27


1456:Middlewares/FreeRTOS/tasks.c ****         }
1457:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1458:Middlewares/FreeRTOS/tasks.c **** 
1459:Middlewares/FreeRTOS/tasks.c ****         return uxReturn;
1460:Middlewares/FreeRTOS/tasks.c ****     }
1461:Middlewares/FreeRTOS/tasks.c **** 
1462:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1463:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1464:Middlewares/FreeRTOS/tasks.c **** 
1465:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1466:Middlewares/FreeRTOS/tasks.c **** 
1467:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1468:Middlewares/FreeRTOS/tasks.c ****     {
1469:Middlewares/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
1470:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxReturn, uxSavedInterruptState;
1471:Middlewares/FreeRTOS/tasks.c **** 
1472:Middlewares/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1473:Middlewares/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1474:Middlewares/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1475:Middlewares/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1476:Middlewares/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1477:Middlewares/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
1478:Middlewares/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1479:Middlewares/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1480:Middlewares/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
1481:Middlewares/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1482:Middlewares/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1483:Middlewares/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1484:Middlewares/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1485:Middlewares/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1486:Middlewares/FreeRTOS/tasks.c ****          * provided on the following link:
1487:Middlewares/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1488:Middlewares/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1489:Middlewares/FreeRTOS/tasks.c **** 
1490:Middlewares/FreeRTOS/tasks.c ****         uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1491:Middlewares/FreeRTOS/tasks.c ****         {
1492:Middlewares/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1493:Middlewares/FreeRTOS/tasks.c ****              * task that is being queried. */
1494:Middlewares/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1495:Middlewares/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
1496:Middlewares/FreeRTOS/tasks.c ****         }
1497:Middlewares/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1498:Middlewares/FreeRTOS/tasks.c **** 
1499:Middlewares/FreeRTOS/tasks.c ****         return uxReturn;
1500:Middlewares/FreeRTOS/tasks.c ****     }
1501:Middlewares/FreeRTOS/tasks.c **** 
1502:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1503:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1504:Middlewares/FreeRTOS/tasks.c **** 
1505:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1506:Middlewares/FreeRTOS/tasks.c **** 
1507:Middlewares/FreeRTOS/tasks.c ****     void vTaskPrioritySet( TaskHandle_t xTask,
1508:Middlewares/FreeRTOS/tasks.c ****                            UBaseType_t uxNewPriority )
1509:Middlewares/FreeRTOS/tasks.c ****     {
1510:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1511:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1512:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 28


1513:Middlewares/FreeRTOS/tasks.c **** 
1514:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxNewPriority < configMAX_PRIORITIES );
1515:Middlewares/FreeRTOS/tasks.c **** 
1516:Middlewares/FreeRTOS/tasks.c ****         /* Ensure the new priority is valid. */
1517:Middlewares/FreeRTOS/tasks.c ****         if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1518:Middlewares/FreeRTOS/tasks.c ****         {
1519:Middlewares/FreeRTOS/tasks.c ****             uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1520:Middlewares/FreeRTOS/tasks.c ****         }
1521:Middlewares/FreeRTOS/tasks.c ****         else
1522:Middlewares/FreeRTOS/tasks.c ****         {
1523:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1524:Middlewares/FreeRTOS/tasks.c ****         }
1525:Middlewares/FreeRTOS/tasks.c **** 
1526:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1527:Middlewares/FreeRTOS/tasks.c ****         {
1528:Middlewares/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1529:Middlewares/FreeRTOS/tasks.c ****              * task that is being changed. */
1530:Middlewares/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1531:Middlewares/FreeRTOS/tasks.c **** 
1532:Middlewares/FreeRTOS/tasks.c ****             traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1533:Middlewares/FreeRTOS/tasks.c **** 
1534:Middlewares/FreeRTOS/tasks.c ****             #if ( configUSE_MUTEXES == 1 )
1535:Middlewares/FreeRTOS/tasks.c ****             {
1536:Middlewares/FreeRTOS/tasks.c ****                 uxCurrentBasePriority = pxTCB->uxBasePriority;
1537:Middlewares/FreeRTOS/tasks.c ****             }
1538:Middlewares/FreeRTOS/tasks.c ****             #else
1539:Middlewares/FreeRTOS/tasks.c ****             {
1540:Middlewares/FreeRTOS/tasks.c ****                 uxCurrentBasePriority = pxTCB->uxPriority;
1541:Middlewares/FreeRTOS/tasks.c ****             }
1542:Middlewares/FreeRTOS/tasks.c ****             #endif
1543:Middlewares/FreeRTOS/tasks.c **** 
1544:Middlewares/FreeRTOS/tasks.c ****             if( uxCurrentBasePriority != uxNewPriority )
1545:Middlewares/FreeRTOS/tasks.c ****             {
1546:Middlewares/FreeRTOS/tasks.c ****                 /* The priority change may have readied a task of higher
1547:Middlewares/FreeRTOS/tasks.c ****                  * priority than the calling task. */
1548:Middlewares/FreeRTOS/tasks.c ****                 if( uxNewPriority > uxCurrentBasePriority )
1549:Middlewares/FreeRTOS/tasks.c ****                 {
1550:Middlewares/FreeRTOS/tasks.c ****                     if( pxTCB != pxCurrentTCB )
1551:Middlewares/FreeRTOS/tasks.c ****                     {
1552:Middlewares/FreeRTOS/tasks.c ****                         /* The priority of a task other than the currently
1553:Middlewares/FreeRTOS/tasks.c ****                          * running task is being raised.  Is the priority being
1554:Middlewares/FreeRTOS/tasks.c ****                          * raised above that of the running task? */
1555:Middlewares/FreeRTOS/tasks.c ****                         if( uxNewPriority >= pxCurrentTCB->uxPriority )
1556:Middlewares/FreeRTOS/tasks.c ****                         {
1557:Middlewares/FreeRTOS/tasks.c ****                             xYieldRequired = pdTRUE;
1558:Middlewares/FreeRTOS/tasks.c ****                         }
1559:Middlewares/FreeRTOS/tasks.c ****                         else
1560:Middlewares/FreeRTOS/tasks.c ****                         {
1561:Middlewares/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
1562:Middlewares/FreeRTOS/tasks.c ****                         }
1563:Middlewares/FreeRTOS/tasks.c ****                     }
1564:Middlewares/FreeRTOS/tasks.c ****                     else
1565:Middlewares/FreeRTOS/tasks.c ****                     {
1566:Middlewares/FreeRTOS/tasks.c ****                         /* The priority of the running task is being raised,
1567:Middlewares/FreeRTOS/tasks.c ****                          * but the running task must already be the highest
1568:Middlewares/FreeRTOS/tasks.c ****                          * priority task able to run so no yield is required. */
1569:Middlewares/FreeRTOS/tasks.c ****                     }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 29


1570:Middlewares/FreeRTOS/tasks.c ****                 }
1571:Middlewares/FreeRTOS/tasks.c ****                 else if( pxTCB == pxCurrentTCB )
1572:Middlewares/FreeRTOS/tasks.c ****                 {
1573:Middlewares/FreeRTOS/tasks.c ****                     /* Setting the priority of the running task down means
1574:Middlewares/FreeRTOS/tasks.c ****                      * there may now be another task of higher priority that
1575:Middlewares/FreeRTOS/tasks.c ****                      * is ready to execute. */
1576:Middlewares/FreeRTOS/tasks.c ****                     xYieldRequired = pdTRUE;
1577:Middlewares/FreeRTOS/tasks.c ****                 }
1578:Middlewares/FreeRTOS/tasks.c ****                 else
1579:Middlewares/FreeRTOS/tasks.c ****                 {
1580:Middlewares/FreeRTOS/tasks.c ****                     /* Setting the priority of any other task down does not
1581:Middlewares/FreeRTOS/tasks.c ****                      * require a yield as the running task must be above the
1582:Middlewares/FreeRTOS/tasks.c ****                      * new priority of the task being modified. */
1583:Middlewares/FreeRTOS/tasks.c ****                 }
1584:Middlewares/FreeRTOS/tasks.c **** 
1585:Middlewares/FreeRTOS/tasks.c ****                 /* Remember the ready list the task might be referenced from
1586:Middlewares/FreeRTOS/tasks.c ****                  * before its uxPriority member is changed so the
1587:Middlewares/FreeRTOS/tasks.c ****                  * taskRESET_READY_PRIORITY() macro can function correctly. */
1588:Middlewares/FreeRTOS/tasks.c ****                 uxPriorityUsedOnEntry = pxTCB->uxPriority;
1589:Middlewares/FreeRTOS/tasks.c **** 
1590:Middlewares/FreeRTOS/tasks.c ****                 #if ( configUSE_MUTEXES == 1 )
1591:Middlewares/FreeRTOS/tasks.c ****                 {
1592:Middlewares/FreeRTOS/tasks.c ****                     /* Only change the priority being used if the task is not
1593:Middlewares/FreeRTOS/tasks.c ****                      * currently using an inherited priority. */
1594:Middlewares/FreeRTOS/tasks.c ****                     if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1595:Middlewares/FreeRTOS/tasks.c ****                     {
1596:Middlewares/FreeRTOS/tasks.c ****                         pxTCB->uxPriority = uxNewPriority;
1597:Middlewares/FreeRTOS/tasks.c ****                     }
1598:Middlewares/FreeRTOS/tasks.c ****                     else
1599:Middlewares/FreeRTOS/tasks.c ****                     {
1600:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1601:Middlewares/FreeRTOS/tasks.c ****                     }
1602:Middlewares/FreeRTOS/tasks.c **** 
1603:Middlewares/FreeRTOS/tasks.c ****                     /* The base priority gets set whatever. */
1604:Middlewares/FreeRTOS/tasks.c ****                     pxTCB->uxBasePriority = uxNewPriority;
1605:Middlewares/FreeRTOS/tasks.c ****                 }
1606:Middlewares/FreeRTOS/tasks.c ****                 #else /* if ( configUSE_MUTEXES == 1 ) */
1607:Middlewares/FreeRTOS/tasks.c ****                 {
1608:Middlewares/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxNewPriority;
1609:Middlewares/FreeRTOS/tasks.c ****                 }
1610:Middlewares/FreeRTOS/tasks.c ****                 #endif /* if ( configUSE_MUTEXES == 1 ) */
1611:Middlewares/FreeRTOS/tasks.c **** 
1612:Middlewares/FreeRTOS/tasks.c ****                 /* Only reset the event list item value if the value is not
1613:Middlewares/FreeRTOS/tasks.c ****                  * being used for anything else. */
1614:Middlewares/FreeRTOS/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_V
1615:Middlewares/FreeRTOS/tasks.c ****                 {
1616:Middlewares/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX
1617:Middlewares/FreeRTOS/tasks.c ****                 }
1618:Middlewares/FreeRTOS/tasks.c ****                 else
1619:Middlewares/FreeRTOS/tasks.c ****                 {
1620:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1621:Middlewares/FreeRTOS/tasks.c ****                 }
1622:Middlewares/FreeRTOS/tasks.c **** 
1623:Middlewares/FreeRTOS/tasks.c ****                 /* If the task is in the blocked or suspended list we need do
1624:Middlewares/FreeRTOS/tasks.c ****                  * nothing more than change its priority variable. However, if
1625:Middlewares/FreeRTOS/tasks.c ****                  * the task is in a ready list it needs to be removed and placed
1626:Middlewares/FreeRTOS/tasks.c ****                  * in the list appropriate to its new priority. */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 30


1627:Middlewares/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( px
1628:Middlewares/FreeRTOS/tasks.c ****                 {
1629:Middlewares/FreeRTOS/tasks.c ****                     /* The task is currently in its ready list - remove before
1630:Middlewares/FreeRTOS/tasks.c ****                      * adding it to its new ready list.  As we are in a critical
1631:Middlewares/FreeRTOS/tasks.c ****                      * section we can do this even if the scheduler is suspended. */
1632:Middlewares/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1633:Middlewares/FreeRTOS/tasks.c ****                     {
1634:Middlewares/FreeRTOS/tasks.c ****                         /* It is known that the task is in its ready list so
1635:Middlewares/FreeRTOS/tasks.c ****                          * there is no need to check again and the port level
1636:Middlewares/FreeRTOS/tasks.c ****                          * reset macro can be called directly. */
1637:Middlewares/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1638:Middlewares/FreeRTOS/tasks.c ****                     }
1639:Middlewares/FreeRTOS/tasks.c ****                     else
1640:Middlewares/FreeRTOS/tasks.c ****                     {
1641:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1642:Middlewares/FreeRTOS/tasks.c ****                     }
1643:Middlewares/FreeRTOS/tasks.c **** 
1644:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1645:Middlewares/FreeRTOS/tasks.c ****                 }
1646:Middlewares/FreeRTOS/tasks.c ****                 else
1647:Middlewares/FreeRTOS/tasks.c ****                 {
1648:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1649:Middlewares/FreeRTOS/tasks.c ****                 }
1650:Middlewares/FreeRTOS/tasks.c **** 
1651:Middlewares/FreeRTOS/tasks.c ****                 if( xYieldRequired != pdFALSE )
1652:Middlewares/FreeRTOS/tasks.c ****                 {
1653:Middlewares/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
1654:Middlewares/FreeRTOS/tasks.c ****                 }
1655:Middlewares/FreeRTOS/tasks.c ****                 else
1656:Middlewares/FreeRTOS/tasks.c ****                 {
1657:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1658:Middlewares/FreeRTOS/tasks.c ****                 }
1659:Middlewares/FreeRTOS/tasks.c **** 
1660:Middlewares/FreeRTOS/tasks.c ****                 /* Remove compiler warning about unused variables when the port
1661:Middlewares/FreeRTOS/tasks.c ****                  * optimised task selection is not being used. */
1662:Middlewares/FreeRTOS/tasks.c ****                 ( void ) uxPriorityUsedOnEntry;
1663:Middlewares/FreeRTOS/tasks.c ****             }
1664:Middlewares/FreeRTOS/tasks.c ****         }
1665:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1666:Middlewares/FreeRTOS/tasks.c ****     }
1667:Middlewares/FreeRTOS/tasks.c **** 
1668:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1669:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1670:Middlewares/FreeRTOS/tasks.c **** 
1671:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1672:Middlewares/FreeRTOS/tasks.c **** 
1673:Middlewares/FreeRTOS/tasks.c ****     void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1674:Middlewares/FreeRTOS/tasks.c ****     {
1675:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1676:Middlewares/FreeRTOS/tasks.c **** 
1677:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1678:Middlewares/FreeRTOS/tasks.c ****         {
1679:Middlewares/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the running task that is
1680:Middlewares/FreeRTOS/tasks.c ****              * being suspended. */
1681:Middlewares/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1682:Middlewares/FreeRTOS/tasks.c **** 
1683:Middlewares/FreeRTOS/tasks.c ****             traceTASK_SUSPEND( pxTCB );
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 31


1684:Middlewares/FreeRTOS/tasks.c **** 
1685:Middlewares/FreeRTOS/tasks.c ****             /* Remove task from the ready/delayed list and place in the
1686:Middlewares/FreeRTOS/tasks.c ****              * suspended list. */
1687:Middlewares/FreeRTOS/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1688:Middlewares/FreeRTOS/tasks.c ****             {
1689:Middlewares/FreeRTOS/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1690:Middlewares/FreeRTOS/tasks.c ****             }
1691:Middlewares/FreeRTOS/tasks.c ****             else
1692:Middlewares/FreeRTOS/tasks.c ****             {
1693:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1694:Middlewares/FreeRTOS/tasks.c ****             }
1695:Middlewares/FreeRTOS/tasks.c **** 
1696:Middlewares/FreeRTOS/tasks.c ****             /* Is the task waiting on an event also? */
1697:Middlewares/FreeRTOS/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1698:Middlewares/FreeRTOS/tasks.c ****             {
1699:Middlewares/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1700:Middlewares/FreeRTOS/tasks.c ****             }
1701:Middlewares/FreeRTOS/tasks.c ****             else
1702:Middlewares/FreeRTOS/tasks.c ****             {
1703:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1704:Middlewares/FreeRTOS/tasks.c ****             }
1705:Middlewares/FreeRTOS/tasks.c **** 
1706:Middlewares/FreeRTOS/tasks.c ****             vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1707:Middlewares/FreeRTOS/tasks.c **** 
1708:Middlewares/FreeRTOS/tasks.c ****             #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1709:Middlewares/FreeRTOS/tasks.c ****             {
1710:Middlewares/FreeRTOS/tasks.c ****                 BaseType_t x;
1711:Middlewares/FreeRTOS/tasks.c **** 
1712:Middlewares/FreeRTOS/tasks.c ****                 for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1713:Middlewares/FreeRTOS/tasks.c ****                 {
1714:Middlewares/FreeRTOS/tasks.c ****                     if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1715:Middlewares/FreeRTOS/tasks.c ****                     {
1716:Middlewares/FreeRTOS/tasks.c ****                         /* The task was blocked to wait for a notification, but is
1717:Middlewares/FreeRTOS/tasks.c ****                          * now suspended, so no notification was received. */
1718:Middlewares/FreeRTOS/tasks.c ****                         pxTCB->ucNotifyState[ x ] = taskNOT_WAITING_NOTIFICATION;
1719:Middlewares/FreeRTOS/tasks.c ****                     }
1720:Middlewares/FreeRTOS/tasks.c ****                 }
1721:Middlewares/FreeRTOS/tasks.c ****             }
1722:Middlewares/FreeRTOS/tasks.c ****             #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1723:Middlewares/FreeRTOS/tasks.c ****         }
1724:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1725:Middlewares/FreeRTOS/tasks.c **** 
1726:Middlewares/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
1727:Middlewares/FreeRTOS/tasks.c ****         {
1728:Middlewares/FreeRTOS/tasks.c ****             /* Reset the next expected unblock time in case it referred to the
1729:Middlewares/FreeRTOS/tasks.c ****              * task that is now in the Suspended state. */
1730:Middlewares/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1731:Middlewares/FreeRTOS/tasks.c ****             {
1732:Middlewares/FreeRTOS/tasks.c ****                 prvResetNextTaskUnblockTime();
1733:Middlewares/FreeRTOS/tasks.c ****             }
1734:Middlewares/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1735:Middlewares/FreeRTOS/tasks.c ****         }
1736:Middlewares/FreeRTOS/tasks.c ****         else
1737:Middlewares/FreeRTOS/tasks.c ****         {
1738:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1739:Middlewares/FreeRTOS/tasks.c ****         }
1740:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 32


1741:Middlewares/FreeRTOS/tasks.c ****         if( pxTCB == pxCurrentTCB )
1742:Middlewares/FreeRTOS/tasks.c ****         {
1743:Middlewares/FreeRTOS/tasks.c ****             if( xSchedulerRunning != pdFALSE )
1744:Middlewares/FreeRTOS/tasks.c ****             {
1745:Middlewares/FreeRTOS/tasks.c ****                 /* The current task has just been suspended. */
1746:Middlewares/FreeRTOS/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1747:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
1748:Middlewares/FreeRTOS/tasks.c ****             }
1749:Middlewares/FreeRTOS/tasks.c ****             else
1750:Middlewares/FreeRTOS/tasks.c ****             {
1751:Middlewares/FreeRTOS/tasks.c ****                 /* The scheduler is not running, but the task that was pointed
1752:Middlewares/FreeRTOS/tasks.c ****                  * to by pxCurrentTCB has just been suspended and pxCurrentTCB
1753:Middlewares/FreeRTOS/tasks.c ****                  * must be adjusted to point to a different task. */
1754:Middlewares/FreeRTOS/tasks.c ****                 if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*li
1755:Middlewares/FreeRTOS/tasks.c ****                 {
1756:Middlewares/FreeRTOS/tasks.c ****                     /* No other tasks are ready, so set pxCurrentTCB back to
1757:Middlewares/FreeRTOS/tasks.c ****                      * NULL so when the next task is created pxCurrentTCB will
1758:Middlewares/FreeRTOS/tasks.c ****                      * be set to point to it no matter what its relative priority
1759:Middlewares/FreeRTOS/tasks.c ****                      * is. */
1760:Middlewares/FreeRTOS/tasks.c ****                     pxCurrentTCB = NULL;
1761:Middlewares/FreeRTOS/tasks.c ****                 }
1762:Middlewares/FreeRTOS/tasks.c ****                 else
1763:Middlewares/FreeRTOS/tasks.c ****                 {
1764:Middlewares/FreeRTOS/tasks.c ****                     vTaskSwitchContext();
1765:Middlewares/FreeRTOS/tasks.c ****                 }
1766:Middlewares/FreeRTOS/tasks.c ****             }
1767:Middlewares/FreeRTOS/tasks.c ****         }
1768:Middlewares/FreeRTOS/tasks.c ****         else
1769:Middlewares/FreeRTOS/tasks.c ****         {
1770:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1771:Middlewares/FreeRTOS/tasks.c ****         }
1772:Middlewares/FreeRTOS/tasks.c ****     }
1773:Middlewares/FreeRTOS/tasks.c **** 
1774:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1775:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1776:Middlewares/FreeRTOS/tasks.c **** 
1777:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1778:Middlewares/FreeRTOS/tasks.c **** 
1779:Middlewares/FreeRTOS/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1780:Middlewares/FreeRTOS/tasks.c ****     {
  29              		.loc 1 1780 5 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1781:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
  34              		.loc 1 1781 9 view .LVU1
1782:Middlewares/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  35              		.loc 1 1782 9 view .LVU2
1783:Middlewares/FreeRTOS/tasks.c **** 
1784:Middlewares/FreeRTOS/tasks.c ****         /* Accesses xPendingReadyList so must be called from a critical
1785:Middlewares/FreeRTOS/tasks.c ****          * section. */
1786:Middlewares/FreeRTOS/tasks.c **** 
1787:Middlewares/FreeRTOS/tasks.c ****         /* It does not make sense to check if the calling task is suspended. */
1788:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTask );
  36              		.loc 1 1788 9 view .LVU3
  37 0000 28B1     		cbz	r0, .L8
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 33


  38              		.loc 1 1788 30 discriminator 2 view .LVU4
1789:Middlewares/FreeRTOS/tasks.c **** 
1790:Middlewares/FreeRTOS/tasks.c ****         /* Is the task being resumed actually in the suspended list? */
1791:Middlewares/FreeRTOS/tasks.c ****         if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  39              		.loc 1 1791 9 discriminator 2 view .LVU5
  40              		.loc 1 1791 13 is_stmt 0 discriminator 2 view .LVU6
  41 0002 4169     		ldr	r1, [r0, #20]
  42              		.loc 1 1791 11 discriminator 2 view .LVU7
  43 0004 0C4A     		ldr	r2, .L10
  44 0006 9142     		cmp	r1, r2
  45 0008 0AD0     		beq	.L9
1781:Middlewares/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  46              		.loc 1 1781 20 view .LVU8
  47 000a 0020     		movs	r0, #0
  48              	.LVL1:
1781:Middlewares/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  49              		.loc 1 1781 20 view .LVU9
  50 000c 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1788:Middlewares/FreeRTOS/tasks.c **** 
  53              		.loc 1 1788 9 is_stmt 1 view .LVU10
  54              	.LBB159:
  55              	.LBI159:
  56              		.file 2 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.5.1
   3:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   7:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  13:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  14:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  16:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  17:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  24:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  25:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  26:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  27:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  28:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  30:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  31:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  32:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 34


  33:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  34:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  35:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  36:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  37:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #include "projdefs.h"
  38:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #include "FreeRTOSConfig.h"
  39:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  40:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  41:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  43:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  44:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  45:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  46:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  47:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  48:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  49:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  50:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  51:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  52:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  53:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  54:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  55:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  56:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  57:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  58:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  59:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  60:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  61:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  62:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  63:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
  64:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  65:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  66:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  67:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  68:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  69:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  70:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  71:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  72:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  73:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  74:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  75:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  76:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  77:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  78:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  79:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  80:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  81:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  82:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  83:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  84:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  85:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  86:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  87:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  88:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  89:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 35


  90:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  91:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  92:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
  93:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  94:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  95:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  96:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  97:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  98:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  99:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 100:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
 101:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
 102:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 103:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 104:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 105:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 106:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 107:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 108:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 109:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 110:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 111:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 112:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 113:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 114:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 115:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 116:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 117:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 118:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 119:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 120:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 121:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 122:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 123:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 124:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 125:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 126:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 127:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 128:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 129:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 130:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 131:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 132:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 133:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 134:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 135:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 136:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 137:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 139:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 140:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 141:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 142:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 144:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 145:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 146:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 36


 147:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 148:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 149:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 150:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 151:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 152:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 153:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 154:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 155:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 156:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 157:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 158:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 159:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 161:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 162:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 163:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 164:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 166:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 167:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 168:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 169:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 170:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 171:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 172:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 173:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 175:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 176:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 177:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
 178:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 179:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 180:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 181:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 182:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 183:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 184:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 185:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 186:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         else
 187:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 188:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 189:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 190:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 192:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 193:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 194:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 195:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  57              		.loc 2 196 34 view .LVU11
  58              	.LBB160:
 197:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
  59              		.loc 2 198 9 view .LVU12
 199:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 37


  60              		.loc 2 200 9 view .LVU13
  61              		.syntax unified
  62              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
  63 000e 4FF01003 			mov r3, #16												
  64 0012 83F31188 		msr basepri, r3											
  65 0016 BFF36F8F 		isb														
  66 001a BFF34F8F 		dsb														
  67              	
  68              	@ 0 "" 2
  69              	.LVL3:
  70              		.thumb
  71              		.syntax unified
  72              	.L3:
  73              		.loc 2 200 9 is_stmt 0 view .LVU14
  74              	.LBE160:
  75              	.LBE159:
1788:Middlewares/FreeRTOS/tasks.c **** 
  76              		.loc 1 1788 9 is_stmt 1 discriminator 1 view .LVU15
1788:Middlewares/FreeRTOS/tasks.c **** 
  77              		.loc 1 1788 9 discriminator 1 view .LVU16
  78 001e FEE7     		b	.L3
  79              	.L9:
1792:Middlewares/FreeRTOS/tasks.c ****         {
1793:Middlewares/FreeRTOS/tasks.c ****             /* Has the task already been resumed from within an ISR? */
1794:Middlewares/FreeRTOS/tasks.c ****             if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALS
  80              		.loc 1 1794 13 view .LVU17
  81              		.loc 1 1794 17 is_stmt 0 view .LVU18
  82 0020 836A     		ldr	r3, [r0, #40]
  83              		.loc 1 1794 15 view .LVU19
  84 0022 064A     		ldr	r2, .L10+4
  85 0024 9342     		cmp	r3, r2
  86 0026 02D0     		beq	.L6
1795:Middlewares/FreeRTOS/tasks.c ****             {
1796:Middlewares/FreeRTOS/tasks.c ****                 /* Is it in the suspended list because it is in the Suspended
1797:Middlewares/FreeRTOS/tasks.c ****                  * state, or because is is blocked with no timeout? */
1798:Middlewares/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint
  87              		.loc 1 1798 17 is_stmt 1 view .LVU20
  88              		.loc 1 1798 19 is_stmt 0 view .LVU21
  89 0028 1BB1     		cbz	r3, .L7
1781:Middlewares/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  90              		.loc 1 1781 20 view .LVU22
  91 002a 0020     		movs	r0, #0
  92              	.LVL4:
1781:Middlewares/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  93              		.loc 1 1781 20 view .LVU23
  94 002c 7047     		bx	lr
  95              	.LVL5:
  96              	.L6:
1781:Middlewares/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  97              		.loc 1 1781 20 view .LVU24
  98 002e 0020     		movs	r0, #0
  99              	.LVL6:
1781:Middlewares/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
 100              		.loc 1 1781 20 view .LVU25
 101 0030 7047     		bx	lr
 102              	.LVL7:
 103              	.L7:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 38


1799:Middlewares/FreeRTOS/tasks.c ****                 {
1800:Middlewares/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
 104              		.loc 1 1800 29 view .LVU26
 105 0032 0120     		movs	r0, #1
 106              	.LVL8:
1801:Middlewares/FreeRTOS/tasks.c ****                 }
1802:Middlewares/FreeRTOS/tasks.c ****                 else
1803:Middlewares/FreeRTOS/tasks.c ****                 {
1804:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1805:Middlewares/FreeRTOS/tasks.c ****                 }
1806:Middlewares/FreeRTOS/tasks.c ****             }
1807:Middlewares/FreeRTOS/tasks.c ****             else
1808:Middlewares/FreeRTOS/tasks.c ****             {
1809:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1810:Middlewares/FreeRTOS/tasks.c ****             }
1811:Middlewares/FreeRTOS/tasks.c ****         }
1812:Middlewares/FreeRTOS/tasks.c ****         else
1813:Middlewares/FreeRTOS/tasks.c ****         {
1814:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
 107              		.loc 1 1814 37 is_stmt 1 view .LVU27
1815:Middlewares/FreeRTOS/tasks.c ****         }
1816:Middlewares/FreeRTOS/tasks.c **** 
1817:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
 108              		.loc 1 1817 9 view .LVU28
1818:Middlewares/FreeRTOS/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 109              		.loc 1 1818 5 is_stmt 0 view .LVU29
 110 0034 7047     		bx	lr
 111              	.L11:
 112 0036 00BF     		.align	2
 113              	.L10:
 114 0038 00000000 		.word	xSuspendedTaskList
 115 003c 00000000 		.word	xPendingReadyList
 116              		.cfi_endproc
 117              	.LFE16:
 119              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	prvResetNextTaskUnblockTime:
 126              	.LFB42:
1819:Middlewares/FreeRTOS/tasks.c **** 
1820:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1821:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1822:Middlewares/FreeRTOS/tasks.c **** 
1823:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1824:Middlewares/FreeRTOS/tasks.c **** 
1825:Middlewares/FreeRTOS/tasks.c ****     void vTaskResume( TaskHandle_t xTaskToResume )
1826:Middlewares/FreeRTOS/tasks.c ****     {
1827:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1828:Middlewares/FreeRTOS/tasks.c **** 
1829:Middlewares/FreeRTOS/tasks.c ****         /* It does not make sense to resume the calling task. */
1830:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTaskToResume );
1831:Middlewares/FreeRTOS/tasks.c **** 
1832:Middlewares/FreeRTOS/tasks.c ****         /* The parameter cannot be NULL as it is impossible to resume the
1833:Middlewares/FreeRTOS/tasks.c ****          * currently executing task. */
1834:Middlewares/FreeRTOS/tasks.c ****         if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 39


1835:Middlewares/FreeRTOS/tasks.c ****         {
1836:Middlewares/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1837:Middlewares/FreeRTOS/tasks.c ****             {
1838:Middlewares/FreeRTOS/tasks.c ****                 if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1839:Middlewares/FreeRTOS/tasks.c ****                 {
1840:Middlewares/FreeRTOS/tasks.c ****                     traceTASK_RESUME( pxTCB );
1841:Middlewares/FreeRTOS/tasks.c **** 
1842:Middlewares/FreeRTOS/tasks.c ****                     /* The ready list can be accessed even if the scheduler is
1843:Middlewares/FreeRTOS/tasks.c ****                      * suspended because this is inside a critical section. */
1844:Middlewares/FreeRTOS/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1845:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1846:Middlewares/FreeRTOS/tasks.c **** 
1847:Middlewares/FreeRTOS/tasks.c ****                     /* A higher priority task may have just been resumed. */
1848:Middlewares/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1849:Middlewares/FreeRTOS/tasks.c ****                     {
1850:Middlewares/FreeRTOS/tasks.c ****                         /* This yield may not cause the task just resumed to run,
1851:Middlewares/FreeRTOS/tasks.c ****                          * but will leave the lists in the correct state for the
1852:Middlewares/FreeRTOS/tasks.c ****                          * next yield. */
1853:Middlewares/FreeRTOS/tasks.c ****                         taskYIELD_IF_USING_PREEMPTION();
1854:Middlewares/FreeRTOS/tasks.c ****                     }
1855:Middlewares/FreeRTOS/tasks.c ****                     else
1856:Middlewares/FreeRTOS/tasks.c ****                     {
1857:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1858:Middlewares/FreeRTOS/tasks.c ****                     }
1859:Middlewares/FreeRTOS/tasks.c ****                 }
1860:Middlewares/FreeRTOS/tasks.c ****                 else
1861:Middlewares/FreeRTOS/tasks.c ****                 {
1862:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1863:Middlewares/FreeRTOS/tasks.c ****                 }
1864:Middlewares/FreeRTOS/tasks.c ****             }
1865:Middlewares/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1866:Middlewares/FreeRTOS/tasks.c ****         }
1867:Middlewares/FreeRTOS/tasks.c ****         else
1868:Middlewares/FreeRTOS/tasks.c ****         {
1869:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1870:Middlewares/FreeRTOS/tasks.c ****         }
1871:Middlewares/FreeRTOS/tasks.c ****     }
1872:Middlewares/FreeRTOS/tasks.c **** 
1873:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1874:Middlewares/FreeRTOS/tasks.c **** 
1875:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1876:Middlewares/FreeRTOS/tasks.c **** 
1877:Middlewares/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1878:Middlewares/FreeRTOS/tasks.c **** 
1879:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1880:Middlewares/FreeRTOS/tasks.c ****     {
1881:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
1882:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1883:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
1884:Middlewares/FreeRTOS/tasks.c **** 
1885:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTaskToResume );
1886:Middlewares/FreeRTOS/tasks.c **** 
1887:Middlewares/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1888:Middlewares/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1889:Middlewares/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1890:Middlewares/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1891:Middlewares/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 40


1892:Middlewares/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
1893:Middlewares/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1894:Middlewares/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1895:Middlewares/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
1896:Middlewares/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1897:Middlewares/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1898:Middlewares/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1899:Middlewares/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1900:Middlewares/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1901:Middlewares/FreeRTOS/tasks.c ****          * provided on the following link:
1902:Middlewares/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1903:Middlewares/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1904:Middlewares/FreeRTOS/tasks.c **** 
1905:Middlewares/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1906:Middlewares/FreeRTOS/tasks.c ****         {
1907:Middlewares/FreeRTOS/tasks.c ****             if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1908:Middlewares/FreeRTOS/tasks.c ****             {
1909:Middlewares/FreeRTOS/tasks.c ****                 traceTASK_RESUME_FROM_ISR( pxTCB );
1910:Middlewares/FreeRTOS/tasks.c **** 
1911:Middlewares/FreeRTOS/tasks.c ****                 /* Check the ready lists can be accessed. */
1912:Middlewares/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1913:Middlewares/FreeRTOS/tasks.c ****                 {
1914:Middlewares/FreeRTOS/tasks.c ****                     /* Ready lists can be accessed so move the task from the
1915:Middlewares/FreeRTOS/tasks.c ****                      * suspended list to the ready list directly. */
1916:Middlewares/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1917:Middlewares/FreeRTOS/tasks.c ****                     {
1918:Middlewares/FreeRTOS/tasks.c ****                         xYieldRequired = pdTRUE;
1919:Middlewares/FreeRTOS/tasks.c **** 
1920:Middlewares/FreeRTOS/tasks.c ****                         /* Mark that a yield is pending in case the user is not
1921:Middlewares/FreeRTOS/tasks.c ****                          * using the return value to initiate a context switch
1922:Middlewares/FreeRTOS/tasks.c ****                          * from the ISR using portYIELD_FROM_ISR. */
1923:Middlewares/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
1924:Middlewares/FreeRTOS/tasks.c ****                     }
1925:Middlewares/FreeRTOS/tasks.c ****                     else
1926:Middlewares/FreeRTOS/tasks.c ****                     {
1927:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1928:Middlewares/FreeRTOS/tasks.c ****                     }
1929:Middlewares/FreeRTOS/tasks.c **** 
1930:Middlewares/FreeRTOS/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1931:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1932:Middlewares/FreeRTOS/tasks.c ****                 }
1933:Middlewares/FreeRTOS/tasks.c ****                 else
1934:Middlewares/FreeRTOS/tasks.c ****                 {
1935:Middlewares/FreeRTOS/tasks.c ****                     /* The delayed or ready lists cannot be accessed so the task
1936:Middlewares/FreeRTOS/tasks.c ****                      * is held in the pending ready list until the scheduler is
1937:Middlewares/FreeRTOS/tasks.c ****                      * unsuspended. */
1938:Middlewares/FreeRTOS/tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1939:Middlewares/FreeRTOS/tasks.c ****                 }
1940:Middlewares/FreeRTOS/tasks.c ****             }
1941:Middlewares/FreeRTOS/tasks.c ****             else
1942:Middlewares/FreeRTOS/tasks.c ****             {
1943:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1944:Middlewares/FreeRTOS/tasks.c ****             }
1945:Middlewares/FreeRTOS/tasks.c ****         }
1946:Middlewares/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1947:Middlewares/FreeRTOS/tasks.c **** 
1948:Middlewares/FreeRTOS/tasks.c ****         return xYieldRequired;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 41


1949:Middlewares/FreeRTOS/tasks.c ****     }
1950:Middlewares/FreeRTOS/tasks.c **** 
1951:Middlewares/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1952:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1953:Middlewares/FreeRTOS/tasks.c **** 
1954:Middlewares/FreeRTOS/tasks.c **** void vTaskStartScheduler( void )
1955:Middlewares/FreeRTOS/tasks.c **** {
1956:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xReturn;
1957:Middlewares/FreeRTOS/tasks.c **** 
1958:Middlewares/FreeRTOS/tasks.c ****     /* Add the idle task at the lowest priority. */
1959:Middlewares/FreeRTOS/tasks.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
1960:Middlewares/FreeRTOS/tasks.c ****     {
1961:Middlewares/FreeRTOS/tasks.c ****         StaticTask_t * pxIdleTaskTCBBuffer = NULL;
1962:Middlewares/FreeRTOS/tasks.c ****         StackType_t * pxIdleTaskStackBuffer = NULL;
1963:Middlewares/FreeRTOS/tasks.c ****         uint32_t ulIdleTaskStackSize;
1964:Middlewares/FreeRTOS/tasks.c **** 
1965:Middlewares/FreeRTOS/tasks.c ****         /* The Idle task is created using user provided RAM - obtain the
1966:Middlewares/FreeRTOS/tasks.c ****          * address of the RAM then create the idle task. */
1967:Middlewares/FreeRTOS/tasks.c ****         vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskSta
1968:Middlewares/FreeRTOS/tasks.c ****         xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
1969:Middlewares/FreeRTOS/tasks.c ****                                              configIDLE_TASK_NAME,
1970:Middlewares/FreeRTOS/tasks.c ****                                              ulIdleTaskStackSize,
1971:Middlewares/FreeRTOS/tasks.c ****                                              ( void * ) NULL,       /*lint !e961.  The cast is not 
1972:Middlewares/FreeRTOS/tasks.c ****                                              portPRIVILEGE_BIT,     /* In effect ( tskIDLE_PRIORITY
1973:Middlewares/FreeRTOS/tasks.c ****                                              pxIdleTaskStackBuffer,
1974:Middlewares/FreeRTOS/tasks.c ****                                              pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, j
1975:Middlewares/FreeRTOS/tasks.c **** 
1976:Middlewares/FreeRTOS/tasks.c ****         if( xIdleTaskHandle != NULL )
1977:Middlewares/FreeRTOS/tasks.c ****         {
1978:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdPASS;
1979:Middlewares/FreeRTOS/tasks.c ****         }
1980:Middlewares/FreeRTOS/tasks.c ****         else
1981:Middlewares/FreeRTOS/tasks.c ****         {
1982:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdFAIL;
1983:Middlewares/FreeRTOS/tasks.c ****         }
1984:Middlewares/FreeRTOS/tasks.c ****     }
1985:Middlewares/FreeRTOS/tasks.c ****     #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
1986:Middlewares/FreeRTOS/tasks.c ****     {
1987:Middlewares/FreeRTOS/tasks.c ****         /* The Idle task is being created using dynamically allocated RAM. */
1988:Middlewares/FreeRTOS/tasks.c ****         xReturn = xTaskCreate( prvIdleTask,
1989:Middlewares/FreeRTOS/tasks.c ****                                configIDLE_TASK_NAME,
1990:Middlewares/FreeRTOS/tasks.c ****                                configMINIMAL_STACK_SIZE,
1991:Middlewares/FreeRTOS/tasks.c ****                                ( void * ) NULL,
1992:Middlewares/FreeRTOS/tasks.c ****                                portPRIVILEGE_BIT,  /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_
1993:Middlewares/FreeRTOS/tasks.c ****                                &xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is
1994:Middlewares/FreeRTOS/tasks.c ****     }
1995:Middlewares/FreeRTOS/tasks.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
1996:Middlewares/FreeRTOS/tasks.c **** 
1997:Middlewares/FreeRTOS/tasks.c ****     #if ( configUSE_TIMERS == 1 )
1998:Middlewares/FreeRTOS/tasks.c ****     {
1999:Middlewares/FreeRTOS/tasks.c ****         if( xReturn == pdPASS )
2000:Middlewares/FreeRTOS/tasks.c ****         {
2001:Middlewares/FreeRTOS/tasks.c ****             xReturn = xTimerCreateTimerTask();
2002:Middlewares/FreeRTOS/tasks.c ****         }
2003:Middlewares/FreeRTOS/tasks.c ****         else
2004:Middlewares/FreeRTOS/tasks.c ****         {
2005:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 42


2006:Middlewares/FreeRTOS/tasks.c ****         }
2007:Middlewares/FreeRTOS/tasks.c ****     }
2008:Middlewares/FreeRTOS/tasks.c ****     #endif /* configUSE_TIMERS */
2009:Middlewares/FreeRTOS/tasks.c **** 
2010:Middlewares/FreeRTOS/tasks.c ****     if( xReturn == pdPASS )
2011:Middlewares/FreeRTOS/tasks.c ****     {
2012:Middlewares/FreeRTOS/tasks.c ****         /* freertos_tasks_c_additions_init() should only be called if the user
2013:Middlewares/FreeRTOS/tasks.c ****          * definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2014:Middlewares/FreeRTOS/tasks.c ****          * the only macro called by the function. */
2015:Middlewares/FreeRTOS/tasks.c ****         #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2016:Middlewares/FreeRTOS/tasks.c ****         {
2017:Middlewares/FreeRTOS/tasks.c ****             freertos_tasks_c_additions_init();
2018:Middlewares/FreeRTOS/tasks.c ****         }
2019:Middlewares/FreeRTOS/tasks.c ****         #endif
2020:Middlewares/FreeRTOS/tasks.c **** 
2021:Middlewares/FreeRTOS/tasks.c ****         /* Interrupts are turned off here, to ensure a tick does not occur
2022:Middlewares/FreeRTOS/tasks.c ****          * before or during the call to xPortStartScheduler().  The stacks of
2023:Middlewares/FreeRTOS/tasks.c ****          * the created tasks contain a status word with interrupts switched on
2024:Middlewares/FreeRTOS/tasks.c ****          * so interrupts will automatically get re-enabled when the first task
2025:Middlewares/FreeRTOS/tasks.c ****          * starts to run. */
2026:Middlewares/FreeRTOS/tasks.c ****         portDISABLE_INTERRUPTS();
2027:Middlewares/FreeRTOS/tasks.c **** 
2028:Middlewares/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
2029:Middlewares/FreeRTOS/tasks.c ****         {
2030:Middlewares/FreeRTOS/tasks.c ****             /* Switch C-Runtime's TLS Block to point to the TLS
2031:Middlewares/FreeRTOS/tasks.c ****              * block specific to the task that will run first. */
2032:Middlewares/FreeRTOS/tasks.c ****             configSET_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
2033:Middlewares/FreeRTOS/tasks.c ****         }
2034:Middlewares/FreeRTOS/tasks.c ****         #endif
2035:Middlewares/FreeRTOS/tasks.c **** 
2036:Middlewares/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
2037:Middlewares/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
2038:Middlewares/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2039:Middlewares/FreeRTOS/tasks.c **** 
2040:Middlewares/FreeRTOS/tasks.c ****         /* If configGENERATE_RUN_TIME_STATS is defined then the following
2041:Middlewares/FreeRTOS/tasks.c ****          * macro must be defined to configure the timer/counter used to generate
2042:Middlewares/FreeRTOS/tasks.c ****          * the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2043:Middlewares/FreeRTOS/tasks.c ****          * is set to 0 and the following line fails to build then ensure you do not
2044:Middlewares/FreeRTOS/tasks.c ****          * have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2045:Middlewares/FreeRTOS/tasks.c ****          * FreeRTOSConfig.h file. */
2046:Middlewares/FreeRTOS/tasks.c ****         portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2047:Middlewares/FreeRTOS/tasks.c **** 
2048:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
2049:Middlewares/FreeRTOS/tasks.c **** 
2050:Middlewares/FreeRTOS/tasks.c ****         /* Setting up the timer tick is hardware specific and thus in the
2051:Middlewares/FreeRTOS/tasks.c ****          * portable interface. */
2052:Middlewares/FreeRTOS/tasks.c ****         xPortStartScheduler();
2053:Middlewares/FreeRTOS/tasks.c **** 
2054:Middlewares/FreeRTOS/tasks.c ****         /* In most cases, xPortStartScheduler() will not return. If it
2055:Middlewares/FreeRTOS/tasks.c ****          * returns pdTRUE then there was not enough heap memory available
2056:Middlewares/FreeRTOS/tasks.c ****          * to create either the Idle or the Timer task. If it returned
2057:Middlewares/FreeRTOS/tasks.c ****          * pdFALSE, then the application called xTaskEndScheduler().
2058:Middlewares/FreeRTOS/tasks.c ****          * Most ports don't implement xTaskEndScheduler() as there is
2059:Middlewares/FreeRTOS/tasks.c ****          * nothing to return to. */
2060:Middlewares/FreeRTOS/tasks.c ****     }
2061:Middlewares/FreeRTOS/tasks.c ****     else
2062:Middlewares/FreeRTOS/tasks.c ****     {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 43


2063:Middlewares/FreeRTOS/tasks.c ****         /* This line will only be reached if the kernel could not be started,
2064:Middlewares/FreeRTOS/tasks.c ****          * because there was not enough FreeRTOS heap to create the idle task
2065:Middlewares/FreeRTOS/tasks.c ****          * or the timer task. */
2066:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2067:Middlewares/FreeRTOS/tasks.c ****     }
2068:Middlewares/FreeRTOS/tasks.c **** 
2069:Middlewares/FreeRTOS/tasks.c ****     /* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2070:Middlewares/FreeRTOS/tasks.c ****      * meaning xIdleTaskHandle is not used anywhere else. */
2071:Middlewares/FreeRTOS/tasks.c ****     ( void ) xIdleTaskHandle;
2072:Middlewares/FreeRTOS/tasks.c **** 
2073:Middlewares/FreeRTOS/tasks.c ****     /* OpenOCD makes use of uxTopUsedPriority for thread debugging. Prevent uxTopUsedPriority
2074:Middlewares/FreeRTOS/tasks.c ****      * from getting optimized out as it is no longer used by the kernel. */
2075:Middlewares/FreeRTOS/tasks.c ****     ( void ) uxTopUsedPriority;
2076:Middlewares/FreeRTOS/tasks.c **** }
2077:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2078:Middlewares/FreeRTOS/tasks.c **** 
2079:Middlewares/FreeRTOS/tasks.c **** void vTaskEndScheduler( void )
2080:Middlewares/FreeRTOS/tasks.c **** {
2081:Middlewares/FreeRTOS/tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
2082:Middlewares/FreeRTOS/tasks.c ****      * routine so the original ISRs can be restored if necessary.  The port
2083:Middlewares/FreeRTOS/tasks.c ****      * layer must ensure interrupts enable  bit is left in the correct state. */
2084:Middlewares/FreeRTOS/tasks.c ****     portDISABLE_INTERRUPTS();
2085:Middlewares/FreeRTOS/tasks.c ****     xSchedulerRunning = pdFALSE;
2086:Middlewares/FreeRTOS/tasks.c ****     vPortEndScheduler();
2087:Middlewares/FreeRTOS/tasks.c **** }
2088:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2089:Middlewares/FreeRTOS/tasks.c **** 
2090:Middlewares/FreeRTOS/tasks.c **** void vTaskSuspendAll( void )
2091:Middlewares/FreeRTOS/tasks.c **** {
2092:Middlewares/FreeRTOS/tasks.c ****     /* A critical section is not required as the variable is of type
2093:Middlewares/FreeRTOS/tasks.c ****      * BaseType_t.  Please read Richard Barry's reply in the following link to a
2094:Middlewares/FreeRTOS/tasks.c ****      * post in the FreeRTOS support forum before reporting this as a bug! -
2095:Middlewares/FreeRTOS/tasks.c ****      * https://goo.gl/wu4acr */
2096:Middlewares/FreeRTOS/tasks.c **** 
2097:Middlewares/FreeRTOS/tasks.c ****     /* portSOFTWARE_BARRIER() is only implemented for emulated/simulated ports that
2098:Middlewares/FreeRTOS/tasks.c ****      * do not otherwise exhibit real time behaviour. */
2099:Middlewares/FreeRTOS/tasks.c ****     portSOFTWARE_BARRIER();
2100:Middlewares/FreeRTOS/tasks.c **** 
2101:Middlewares/FreeRTOS/tasks.c ****     /* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2102:Middlewares/FreeRTOS/tasks.c ****      * is used to allow calls to vTaskSuspendAll() to nest. */
2103:Middlewares/FreeRTOS/tasks.c ****     ++uxSchedulerSuspended;
2104:Middlewares/FreeRTOS/tasks.c **** 
2105:Middlewares/FreeRTOS/tasks.c ****     /* Enforces ordering for ports and optimised compilers that may otherwise place
2106:Middlewares/FreeRTOS/tasks.c ****      * the above increment elsewhere. */
2107:Middlewares/FreeRTOS/tasks.c ****     portMEMORY_BARRIER();
2108:Middlewares/FreeRTOS/tasks.c **** }
2109:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2110:Middlewares/FreeRTOS/tasks.c **** 
2111:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2112:Middlewares/FreeRTOS/tasks.c **** 
2113:Middlewares/FreeRTOS/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void )
2114:Middlewares/FreeRTOS/tasks.c ****     {
2115:Middlewares/FreeRTOS/tasks.c ****         TickType_t xReturn;
2116:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2117:Middlewares/FreeRTOS/tasks.c **** 
2118:Middlewares/FreeRTOS/tasks.c ****         /* uxHigherPriorityReadyTasks takes care of the case where
2119:Middlewares/FreeRTOS/tasks.c ****          * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 44


2120:Middlewares/FreeRTOS/tasks.c ****          * task that are in the Ready state, even though the idle task is
2121:Middlewares/FreeRTOS/tasks.c ****          * running. */
2122:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2123:Middlewares/FreeRTOS/tasks.c ****         {
2124:Middlewares/FreeRTOS/tasks.c ****             if( uxTopReadyPriority > tskIDLE_PRIORITY )
2125:Middlewares/FreeRTOS/tasks.c ****             {
2126:Middlewares/FreeRTOS/tasks.c ****                 uxHigherPriorityReadyTasks = pdTRUE;
2127:Middlewares/FreeRTOS/tasks.c ****             }
2128:Middlewares/FreeRTOS/tasks.c ****         }
2129:Middlewares/FreeRTOS/tasks.c ****         #else
2130:Middlewares/FreeRTOS/tasks.c ****         {
2131:Middlewares/FreeRTOS/tasks.c ****             const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2132:Middlewares/FreeRTOS/tasks.c **** 
2133:Middlewares/FreeRTOS/tasks.c ****             /* When port optimised task selection is used the uxTopReadyPriority
2134:Middlewares/FreeRTOS/tasks.c ****              * variable is used as a bit map.  If bits other than the least
2135:Middlewares/FreeRTOS/tasks.c ****              * significant bit are set then there are tasks that have a priority
2136:Middlewares/FreeRTOS/tasks.c ****              * above the idle priority that are in the Ready state.  This takes
2137:Middlewares/FreeRTOS/tasks.c ****              * care of the case where the co-operative scheduler is in use. */
2138:Middlewares/FreeRTOS/tasks.c ****             if( uxTopReadyPriority > uxLeastSignificantBit )
2139:Middlewares/FreeRTOS/tasks.c ****             {
2140:Middlewares/FreeRTOS/tasks.c ****                 uxHigherPriorityReadyTasks = pdTRUE;
2141:Middlewares/FreeRTOS/tasks.c ****             }
2142:Middlewares/FreeRTOS/tasks.c ****         }
2143:Middlewares/FreeRTOS/tasks.c ****         #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */
2144:Middlewares/FreeRTOS/tasks.c **** 
2145:Middlewares/FreeRTOS/tasks.c ****         if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2146:Middlewares/FreeRTOS/tasks.c ****         {
2147:Middlewares/FreeRTOS/tasks.c ****             xReturn = 0;
2148:Middlewares/FreeRTOS/tasks.c ****         }
2149:Middlewares/FreeRTOS/tasks.c ****         else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2150:Middlewares/FreeRTOS/tasks.c ****         {
2151:Middlewares/FreeRTOS/tasks.c ****             /* There are other idle priority tasks in the ready state.  If
2152:Middlewares/FreeRTOS/tasks.c ****              * time slicing is used then the very next tick interrupt must be
2153:Middlewares/FreeRTOS/tasks.c ****              * processed. */
2154:Middlewares/FreeRTOS/tasks.c ****             xReturn = 0;
2155:Middlewares/FreeRTOS/tasks.c ****         }
2156:Middlewares/FreeRTOS/tasks.c ****         else if( uxHigherPriorityReadyTasks != pdFALSE )
2157:Middlewares/FreeRTOS/tasks.c ****         {
2158:Middlewares/FreeRTOS/tasks.c ****             /* There are tasks in the Ready state that have a priority above the
2159:Middlewares/FreeRTOS/tasks.c ****              * idle priority.  This path can only be reached if
2160:Middlewares/FreeRTOS/tasks.c ****              * configUSE_PREEMPTION is 0. */
2161:Middlewares/FreeRTOS/tasks.c ****             xReturn = 0;
2162:Middlewares/FreeRTOS/tasks.c ****         }
2163:Middlewares/FreeRTOS/tasks.c ****         else
2164:Middlewares/FreeRTOS/tasks.c ****         {
2165:Middlewares/FreeRTOS/tasks.c ****             xReturn = xNextTaskUnblockTime - xTickCount;
2166:Middlewares/FreeRTOS/tasks.c ****         }
2167:Middlewares/FreeRTOS/tasks.c **** 
2168:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
2169:Middlewares/FreeRTOS/tasks.c ****     }
2170:Middlewares/FreeRTOS/tasks.c **** 
2171:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2172:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2173:Middlewares/FreeRTOS/tasks.c **** 
2174:Middlewares/FreeRTOS/tasks.c **** BaseType_t xTaskResumeAll( void )
2175:Middlewares/FreeRTOS/tasks.c **** {
2176:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxTCB = NULL;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 45


2177:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
2178:Middlewares/FreeRTOS/tasks.c **** 
2179:Middlewares/FreeRTOS/tasks.c ****     /* If uxSchedulerSuspended is zero then this function does not match a
2180:Middlewares/FreeRTOS/tasks.c ****      * previous call to vTaskSuspendAll(). */
2181:Middlewares/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended );
2182:Middlewares/FreeRTOS/tasks.c **** 
2183:Middlewares/FreeRTOS/tasks.c ****     /* It is possible that an ISR caused a task to be removed from an event
2184:Middlewares/FreeRTOS/tasks.c ****      * list while the scheduler was suspended.  If this was the case then the
2185:Middlewares/FreeRTOS/tasks.c ****      * removed task will have been added to the xPendingReadyList.  Once the
2186:Middlewares/FreeRTOS/tasks.c ****      * scheduler has been resumed it is safe to move all the pending ready
2187:Middlewares/FreeRTOS/tasks.c ****      * tasks from this list into their appropriate ready list. */
2188:Middlewares/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
2189:Middlewares/FreeRTOS/tasks.c ****     {
2190:Middlewares/FreeRTOS/tasks.c ****         --uxSchedulerSuspended;
2191:Middlewares/FreeRTOS/tasks.c **** 
2192:Middlewares/FreeRTOS/tasks.c ****         if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2193:Middlewares/FreeRTOS/tasks.c ****         {
2194:Middlewares/FreeRTOS/tasks.c ****             if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2195:Middlewares/FreeRTOS/tasks.c ****             {
2196:Middlewares/FreeRTOS/tasks.c ****                 /* Move any readied tasks from the pending list into the
2197:Middlewares/FreeRTOS/tasks.c ****                  * appropriate ready list. */
2198:Middlewares/FreeRTOS/tasks.c ****                 while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2199:Middlewares/FreeRTOS/tasks.c ****                 {
2200:Middlewares/FreeRTOS/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 vo
2201:Middlewares/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
2202:Middlewares/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
2203:Middlewares/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
2204:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2205:Middlewares/FreeRTOS/tasks.c **** 
2206:Middlewares/FreeRTOS/tasks.c ****                     /* If the moved task has a priority higher than or equal to
2207:Middlewares/FreeRTOS/tasks.c ****                      * the current task then a yield must be performed. */
2208:Middlewares/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2209:Middlewares/FreeRTOS/tasks.c ****                     {
2210:Middlewares/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
2211:Middlewares/FreeRTOS/tasks.c ****                     }
2212:Middlewares/FreeRTOS/tasks.c ****                     else
2213:Middlewares/FreeRTOS/tasks.c ****                     {
2214:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2215:Middlewares/FreeRTOS/tasks.c ****                     }
2216:Middlewares/FreeRTOS/tasks.c ****                 }
2217:Middlewares/FreeRTOS/tasks.c **** 
2218:Middlewares/FreeRTOS/tasks.c ****                 if( pxTCB != NULL )
2219:Middlewares/FreeRTOS/tasks.c ****                 {
2220:Middlewares/FreeRTOS/tasks.c ****                     /* A task was unblocked while the scheduler was suspended,
2221:Middlewares/FreeRTOS/tasks.c ****                      * which may have prevented the next unblock time from being
2222:Middlewares/FreeRTOS/tasks.c ****                      * re-calculated, in which case re-calculate it now.  Mainly
2223:Middlewares/FreeRTOS/tasks.c ****                      * important for low power tickless implementations, where
2224:Middlewares/FreeRTOS/tasks.c ****                      * this can prevent an unnecessary exit from low power
2225:Middlewares/FreeRTOS/tasks.c ****                      * state. */
2226:Middlewares/FreeRTOS/tasks.c ****                     prvResetNextTaskUnblockTime();
2227:Middlewares/FreeRTOS/tasks.c ****                 }
2228:Middlewares/FreeRTOS/tasks.c **** 
2229:Middlewares/FreeRTOS/tasks.c ****                 /* If any ticks occurred while the scheduler was suspended then
2230:Middlewares/FreeRTOS/tasks.c ****                  * they should be processed now.  This ensures the tick count does
2231:Middlewares/FreeRTOS/tasks.c ****                  * not  slip, and that any delayed tasks are resumed at the correct
2232:Middlewares/FreeRTOS/tasks.c ****                  * time. */
2233:Middlewares/FreeRTOS/tasks.c ****                 {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 46


2234:Middlewares/FreeRTOS/tasks.c ****                     TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2235:Middlewares/FreeRTOS/tasks.c **** 
2236:Middlewares/FreeRTOS/tasks.c ****                     if( xPendedCounts > ( TickType_t ) 0U )
2237:Middlewares/FreeRTOS/tasks.c ****                     {
2238:Middlewares/FreeRTOS/tasks.c ****                         do
2239:Middlewares/FreeRTOS/tasks.c ****                         {
2240:Middlewares/FreeRTOS/tasks.c ****                             if( xTaskIncrementTick() != pdFALSE )
2241:Middlewares/FreeRTOS/tasks.c ****                             {
2242:Middlewares/FreeRTOS/tasks.c ****                                 xYieldPending = pdTRUE;
2243:Middlewares/FreeRTOS/tasks.c ****                             }
2244:Middlewares/FreeRTOS/tasks.c ****                             else
2245:Middlewares/FreeRTOS/tasks.c ****                             {
2246:Middlewares/FreeRTOS/tasks.c ****                                 mtCOVERAGE_TEST_MARKER();
2247:Middlewares/FreeRTOS/tasks.c ****                             }
2248:Middlewares/FreeRTOS/tasks.c **** 
2249:Middlewares/FreeRTOS/tasks.c ****                             --xPendedCounts;
2250:Middlewares/FreeRTOS/tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
2251:Middlewares/FreeRTOS/tasks.c **** 
2252:Middlewares/FreeRTOS/tasks.c ****                         xPendedTicks = 0;
2253:Middlewares/FreeRTOS/tasks.c ****                     }
2254:Middlewares/FreeRTOS/tasks.c ****                     else
2255:Middlewares/FreeRTOS/tasks.c ****                     {
2256:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2257:Middlewares/FreeRTOS/tasks.c ****                     }
2258:Middlewares/FreeRTOS/tasks.c ****                 }
2259:Middlewares/FreeRTOS/tasks.c **** 
2260:Middlewares/FreeRTOS/tasks.c ****                 if( xYieldPending != pdFALSE )
2261:Middlewares/FreeRTOS/tasks.c ****                 {
2262:Middlewares/FreeRTOS/tasks.c ****                     #if ( configUSE_PREEMPTION != 0 )
2263:Middlewares/FreeRTOS/tasks.c ****                     {
2264:Middlewares/FreeRTOS/tasks.c ****                         xAlreadyYielded = pdTRUE;
2265:Middlewares/FreeRTOS/tasks.c ****                     }
2266:Middlewares/FreeRTOS/tasks.c ****                     #endif
2267:Middlewares/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
2268:Middlewares/FreeRTOS/tasks.c ****                 }
2269:Middlewares/FreeRTOS/tasks.c ****                 else
2270:Middlewares/FreeRTOS/tasks.c ****                 {
2271:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2272:Middlewares/FreeRTOS/tasks.c ****                 }
2273:Middlewares/FreeRTOS/tasks.c ****             }
2274:Middlewares/FreeRTOS/tasks.c ****         }
2275:Middlewares/FreeRTOS/tasks.c ****         else
2276:Middlewares/FreeRTOS/tasks.c ****         {
2277:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2278:Middlewares/FreeRTOS/tasks.c ****         }
2279:Middlewares/FreeRTOS/tasks.c ****     }
2280:Middlewares/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
2281:Middlewares/FreeRTOS/tasks.c **** 
2282:Middlewares/FreeRTOS/tasks.c ****     return xAlreadyYielded;
2283:Middlewares/FreeRTOS/tasks.c **** }
2284:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2285:Middlewares/FreeRTOS/tasks.c **** 
2286:Middlewares/FreeRTOS/tasks.c **** TickType_t xTaskGetTickCount( void )
2287:Middlewares/FreeRTOS/tasks.c **** {
2288:Middlewares/FreeRTOS/tasks.c ****     TickType_t xTicks;
2289:Middlewares/FreeRTOS/tasks.c **** 
2290:Middlewares/FreeRTOS/tasks.c ****     /* Critical section required if running on a 16 bit processor. */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 47


2291:Middlewares/FreeRTOS/tasks.c ****     portTICK_TYPE_ENTER_CRITICAL();
2292:Middlewares/FreeRTOS/tasks.c ****     {
2293:Middlewares/FreeRTOS/tasks.c ****         xTicks = xTickCount;
2294:Middlewares/FreeRTOS/tasks.c ****     }
2295:Middlewares/FreeRTOS/tasks.c ****     portTICK_TYPE_EXIT_CRITICAL();
2296:Middlewares/FreeRTOS/tasks.c **** 
2297:Middlewares/FreeRTOS/tasks.c ****     return xTicks;
2298:Middlewares/FreeRTOS/tasks.c **** }
2299:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2300:Middlewares/FreeRTOS/tasks.c **** 
2301:Middlewares/FreeRTOS/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2302:Middlewares/FreeRTOS/tasks.c **** {
2303:Middlewares/FreeRTOS/tasks.c ****     TickType_t xReturn;
2304:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t uxSavedInterruptStatus;
2305:Middlewares/FreeRTOS/tasks.c **** 
2306:Middlewares/FreeRTOS/tasks.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
2307:Middlewares/FreeRTOS/tasks.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
2308:Middlewares/FreeRTOS/tasks.c ****      * above the maximum system call priority are kept permanently enabled, even
2309:Middlewares/FreeRTOS/tasks.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
2310:Middlewares/FreeRTOS/tasks.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2311:Middlewares/FreeRTOS/tasks.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2312:Middlewares/FreeRTOS/tasks.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
2313:Middlewares/FreeRTOS/tasks.c ****      * assigned a priority above the configured maximum system call priority.
2314:Middlewares/FreeRTOS/tasks.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
2315:Middlewares/FreeRTOS/tasks.c ****      * that have been assigned a priority at or (logically) below the maximum
2316:Middlewares/FreeRTOS/tasks.c ****      * system call  interrupt priority.  FreeRTOS maintains a separate interrupt
2317:Middlewares/FreeRTOS/tasks.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
2318:Middlewares/FreeRTOS/tasks.c ****      * More information (albeit Cortex-M specific) is provided on the following
2319:Middlewares/FreeRTOS/tasks.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
2320:Middlewares/FreeRTOS/tasks.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2321:Middlewares/FreeRTOS/tasks.c **** 
2322:Middlewares/FreeRTOS/tasks.c ****     uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2323:Middlewares/FreeRTOS/tasks.c ****     {
2324:Middlewares/FreeRTOS/tasks.c ****         xReturn = xTickCount;
2325:Middlewares/FreeRTOS/tasks.c ****     }
2326:Middlewares/FreeRTOS/tasks.c ****     portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2327:Middlewares/FreeRTOS/tasks.c **** 
2328:Middlewares/FreeRTOS/tasks.c ****     return xReturn;
2329:Middlewares/FreeRTOS/tasks.c **** }
2330:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2331:Middlewares/FreeRTOS/tasks.c **** 
2332:Middlewares/FreeRTOS/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2333:Middlewares/FreeRTOS/tasks.c **** {
2334:Middlewares/FreeRTOS/tasks.c ****     /* A critical section is not required because the variables are of type
2335:Middlewares/FreeRTOS/tasks.c ****      * BaseType_t. */
2336:Middlewares/FreeRTOS/tasks.c ****     return uxCurrentNumberOfTasks;
2337:Middlewares/FreeRTOS/tasks.c **** }
2338:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2339:Middlewares/FreeRTOS/tasks.c **** 
2340:Middlewares/FreeRTOS/tasks.c **** char * pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed f
2341:Middlewares/FreeRTOS/tasks.c **** {
2342:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
2343:Middlewares/FreeRTOS/tasks.c **** 
2344:Middlewares/FreeRTOS/tasks.c ****     /* If null is passed in here then the name of the calling task is being
2345:Middlewares/FreeRTOS/tasks.c ****      * queried. */
2346:Middlewares/FreeRTOS/tasks.c ****     pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2347:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 48


2348:Middlewares/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
2349:Middlewares/FreeRTOS/tasks.c **** }
2350:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2351:Middlewares/FreeRTOS/tasks.c **** 
2352:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2353:Middlewares/FreeRTOS/tasks.c **** 
2354:Middlewares/FreeRTOS/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
2355:Middlewares/FreeRTOS/tasks.c ****                                                      const char pcNameToQuery[] )
2356:Middlewares/FreeRTOS/tasks.c ****     {
2357:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxNextTCB;
2358:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxFirstTCB;
2359:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxReturn = NULL;
2360:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t x;
2361:Middlewares/FreeRTOS/tasks.c ****         char cNextChar;
2362:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xBreakLoop;
2363:Middlewares/FreeRTOS/tasks.c **** 
2364:Middlewares/FreeRTOS/tasks.c ****         /* This function is called with the scheduler suspended. */
2365:Middlewares/FreeRTOS/tasks.c **** 
2366:Middlewares/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2367:Middlewares/FreeRTOS/tasks.c ****         {
2368:Middlewares/FreeRTOS/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
2369:Middlewares/FreeRTOS/tasks.c **** 
2370:Middlewares/FreeRTOS/tasks.c ****             do
2371:Middlewares/FreeRTOS/tasks.c ****             {
2372:Middlewares/FreeRTOS/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
2373:Middlewares/FreeRTOS/tasks.c **** 
2374:Middlewares/FreeRTOS/tasks.c ****                 /* Check each character in the name looking for a match or
2375:Middlewares/FreeRTOS/tasks.c ****                  * mismatch. */
2376:Middlewares/FreeRTOS/tasks.c ****                 xBreakLoop = pdFALSE;
2377:Middlewares/FreeRTOS/tasks.c **** 
2378:Middlewares/FreeRTOS/tasks.c ****                 for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2379:Middlewares/FreeRTOS/tasks.c ****                 {
2380:Middlewares/FreeRTOS/tasks.c ****                     cNextChar = pxNextTCB->pcTaskName[ x ];
2381:Middlewares/FreeRTOS/tasks.c **** 
2382:Middlewares/FreeRTOS/tasks.c ****                     if( cNextChar != pcNameToQuery[ x ] )
2383:Middlewares/FreeRTOS/tasks.c ****                     {
2384:Middlewares/FreeRTOS/tasks.c ****                         /* Characters didn't match. */
2385:Middlewares/FreeRTOS/tasks.c ****                         xBreakLoop = pdTRUE;
2386:Middlewares/FreeRTOS/tasks.c ****                     }
2387:Middlewares/FreeRTOS/tasks.c ****                     else if( cNextChar == ( char ) 0x00 )
2388:Middlewares/FreeRTOS/tasks.c ****                     {
2389:Middlewares/FreeRTOS/tasks.c ****                         /* Both strings terminated, a match must have been
2390:Middlewares/FreeRTOS/tasks.c ****                          * found. */
2391:Middlewares/FreeRTOS/tasks.c ****                         pxReturn = pxNextTCB;
2392:Middlewares/FreeRTOS/tasks.c ****                         xBreakLoop = pdTRUE;
2393:Middlewares/FreeRTOS/tasks.c ****                     }
2394:Middlewares/FreeRTOS/tasks.c ****                     else
2395:Middlewares/FreeRTOS/tasks.c ****                     {
2396:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2397:Middlewares/FreeRTOS/tasks.c ****                     }
2398:Middlewares/FreeRTOS/tasks.c **** 
2399:Middlewares/FreeRTOS/tasks.c ****                     if( xBreakLoop != pdFALSE )
2400:Middlewares/FreeRTOS/tasks.c ****                     {
2401:Middlewares/FreeRTOS/tasks.c ****                         break;
2402:Middlewares/FreeRTOS/tasks.c ****                     }
2403:Middlewares/FreeRTOS/tasks.c ****                 }
2404:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 49


2405:Middlewares/FreeRTOS/tasks.c ****                 if( pxReturn != NULL )
2406:Middlewares/FreeRTOS/tasks.c ****                 {
2407:Middlewares/FreeRTOS/tasks.c ****                     /* The handle has been found. */
2408:Middlewares/FreeRTOS/tasks.c ****                     break;
2409:Middlewares/FreeRTOS/tasks.c ****                 }
2410:Middlewares/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
2411:Middlewares/FreeRTOS/tasks.c ****         }
2412:Middlewares/FreeRTOS/tasks.c ****         else
2413:Middlewares/FreeRTOS/tasks.c ****         {
2414:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2415:Middlewares/FreeRTOS/tasks.c ****         }
2416:Middlewares/FreeRTOS/tasks.c **** 
2417:Middlewares/FreeRTOS/tasks.c ****         return pxReturn;
2418:Middlewares/FreeRTOS/tasks.c ****     }
2419:Middlewares/FreeRTOS/tasks.c **** 
2420:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2421:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2422:Middlewares/FreeRTOS/tasks.c **** 
2423:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2424:Middlewares/FreeRTOS/tasks.c **** 
2425:Middlewares/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetHandle( const char * pcNameToQuery ) /*lint !e971 Unqualified char types a
2426:Middlewares/FreeRTOS/tasks.c ****     {
2427:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxQueue = configMAX_PRIORITIES;
2428:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2429:Middlewares/FreeRTOS/tasks.c **** 
2430:Middlewares/FreeRTOS/tasks.c ****         /* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2431:Middlewares/FreeRTOS/tasks.c ****         configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2432:Middlewares/FreeRTOS/tasks.c **** 
2433:Middlewares/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2434:Middlewares/FreeRTOS/tasks.c ****         {
2435:Middlewares/FreeRTOS/tasks.c ****             /* Search the ready lists. */
2436:Middlewares/FreeRTOS/tasks.c ****             do
2437:Middlewares/FreeRTOS/tasks.c ****             {
2438:Middlewares/FreeRTOS/tasks.c ****                 uxQueue--;
2439:Middlewares/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueu
2440:Middlewares/FreeRTOS/tasks.c **** 
2441:Middlewares/FreeRTOS/tasks.c ****                 if( pxTCB != NULL )
2442:Middlewares/FreeRTOS/tasks.c ****                 {
2443:Middlewares/FreeRTOS/tasks.c ****                     /* Found the handle. */
2444:Middlewares/FreeRTOS/tasks.c ****                     break;
2445:Middlewares/FreeRTOS/tasks.c ****                 }
2446:Middlewares/FreeRTOS/tasks.c ****             } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as 
2447:Middlewares/FreeRTOS/tasks.c **** 
2448:Middlewares/FreeRTOS/tasks.c ****             /* Search the delayed lists. */
2449:Middlewares/FreeRTOS/tasks.c ****             if( pxTCB == NULL )
2450:Middlewares/FreeRTOS/tasks.c ****             {
2451:Middlewares/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQ
2452:Middlewares/FreeRTOS/tasks.c ****             }
2453:Middlewares/FreeRTOS/tasks.c **** 
2454:Middlewares/FreeRTOS/tasks.c ****             if( pxTCB == NULL )
2455:Middlewares/FreeRTOS/tasks.c ****             {
2456:Middlewares/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, p
2457:Middlewares/FreeRTOS/tasks.c ****             }
2458:Middlewares/FreeRTOS/tasks.c **** 
2459:Middlewares/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
2460:Middlewares/FreeRTOS/tasks.c ****             {
2461:Middlewares/FreeRTOS/tasks.c ****                 if( pxTCB == NULL )
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 50


2462:Middlewares/FreeRTOS/tasks.c ****                 {
2463:Middlewares/FreeRTOS/tasks.c ****                     /* Search the suspended list. */
2464:Middlewares/FreeRTOS/tasks.c ****                     pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2465:Middlewares/FreeRTOS/tasks.c ****                 }
2466:Middlewares/FreeRTOS/tasks.c ****             }
2467:Middlewares/FreeRTOS/tasks.c ****             #endif
2468:Middlewares/FreeRTOS/tasks.c **** 
2469:Middlewares/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
2470:Middlewares/FreeRTOS/tasks.c ****             {
2471:Middlewares/FreeRTOS/tasks.c ****                 if( pxTCB == NULL )
2472:Middlewares/FreeRTOS/tasks.c ****                 {
2473:Middlewares/FreeRTOS/tasks.c ****                     /* Search the deleted list. */
2474:Middlewares/FreeRTOS/tasks.c ****                     pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQu
2475:Middlewares/FreeRTOS/tasks.c ****                 }
2476:Middlewares/FreeRTOS/tasks.c ****             }
2477:Middlewares/FreeRTOS/tasks.c ****             #endif
2478:Middlewares/FreeRTOS/tasks.c ****         }
2479:Middlewares/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2480:Middlewares/FreeRTOS/tasks.c **** 
2481:Middlewares/FreeRTOS/tasks.c ****         return pxTCB;
2482:Middlewares/FreeRTOS/tasks.c ****     }
2483:Middlewares/FreeRTOS/tasks.c **** 
2484:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2485:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2486:Middlewares/FreeRTOS/tasks.c **** 
2487:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2488:Middlewares/FreeRTOS/tasks.c **** 
2489:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,
2490:Middlewares/FreeRTOS/tasks.c ****                                       const UBaseType_t uxArraySize,
2491:Middlewares/FreeRTOS/tasks.c ****                                       configRUN_TIME_COUNTER_TYPE * const pulTotalRunTime )
2492:Middlewares/FreeRTOS/tasks.c ****     {
2493:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2494:Middlewares/FreeRTOS/tasks.c **** 
2495:Middlewares/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2496:Middlewares/FreeRTOS/tasks.c ****         {
2497:Middlewares/FreeRTOS/tasks.c ****             /* Is there a space in the array for each task in the system? */
2498:Middlewares/FreeRTOS/tasks.c ****             if( uxArraySize >= uxCurrentNumberOfTasks )
2499:Middlewares/FreeRTOS/tasks.c ****             {
2500:Middlewares/FreeRTOS/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2501:Middlewares/FreeRTOS/tasks.c ****                  * task in the Ready state. */
2502:Middlewares/FreeRTOS/tasks.c ****                 do
2503:Middlewares/FreeRTOS/tasks.c ****                 {
2504:Middlewares/FreeRTOS/tasks.c ****                     uxQueue--;
2505:Middlewares/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
2506:Middlewares/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
2507:Middlewares/FreeRTOS/tasks.c **** 
2508:Middlewares/FreeRTOS/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2509:Middlewares/FreeRTOS/tasks.c ****                  * task in the Blocked state. */
2510:Middlewares/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2511:Middlewares/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2512:Middlewares/FreeRTOS/tasks.c **** 
2513:Middlewares/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskDelete == 1 )
2514:Middlewares/FreeRTOS/tasks.c ****                 {
2515:Middlewares/FreeRTOS/tasks.c ****                     /* Fill in an TaskStatus_t structure with information on
2516:Middlewares/FreeRTOS/tasks.c ****                      * each task that has been deleted but not yet cleaned up. */
2517:Middlewares/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTas
2518:Middlewares/FreeRTOS/tasks.c ****                 }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 51


2519:Middlewares/FreeRTOS/tasks.c ****                 #endif
2520:Middlewares/FreeRTOS/tasks.c **** 
2521:Middlewares/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
2522:Middlewares/FreeRTOS/tasks.c ****                 {
2523:Middlewares/FreeRTOS/tasks.c ****                     /* Fill in an TaskStatus_t structure with information on
2524:Middlewares/FreeRTOS/tasks.c ****                      * each task in the Suspended state. */
2525:Middlewares/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSus
2526:Middlewares/FreeRTOS/tasks.c ****                 }
2527:Middlewares/FreeRTOS/tasks.c ****                 #endif
2528:Middlewares/FreeRTOS/tasks.c **** 
2529:Middlewares/FreeRTOS/tasks.c ****                 #if ( configGENERATE_RUN_TIME_STATS == 1 )
2530:Middlewares/FreeRTOS/tasks.c ****                 {
2531:Middlewares/FreeRTOS/tasks.c ****                     if( pulTotalRunTime != NULL )
2532:Middlewares/FreeRTOS/tasks.c ****                     {
2533:Middlewares/FreeRTOS/tasks.c ****                         #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2534:Middlewares/FreeRTOS/tasks.c ****                             portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2535:Middlewares/FreeRTOS/tasks.c ****                         #else
2536:Middlewares/FreeRTOS/tasks.c ****                             *pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2537:Middlewares/FreeRTOS/tasks.c ****                         #endif
2538:Middlewares/FreeRTOS/tasks.c ****                     }
2539:Middlewares/FreeRTOS/tasks.c ****                 }
2540:Middlewares/FreeRTOS/tasks.c ****                 #else /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2541:Middlewares/FreeRTOS/tasks.c ****                 {
2542:Middlewares/FreeRTOS/tasks.c ****                     if( pulTotalRunTime != NULL )
2543:Middlewares/FreeRTOS/tasks.c ****                     {
2544:Middlewares/FreeRTOS/tasks.c ****                         *pulTotalRunTime = 0;
2545:Middlewares/FreeRTOS/tasks.c ****                     }
2546:Middlewares/FreeRTOS/tasks.c ****                 }
2547:Middlewares/FreeRTOS/tasks.c ****                 #endif /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2548:Middlewares/FreeRTOS/tasks.c ****             }
2549:Middlewares/FreeRTOS/tasks.c ****             else
2550:Middlewares/FreeRTOS/tasks.c ****             {
2551:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2552:Middlewares/FreeRTOS/tasks.c ****             }
2553:Middlewares/FreeRTOS/tasks.c ****         }
2554:Middlewares/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2555:Middlewares/FreeRTOS/tasks.c **** 
2556:Middlewares/FreeRTOS/tasks.c ****         return uxTask;
2557:Middlewares/FreeRTOS/tasks.c ****     }
2558:Middlewares/FreeRTOS/tasks.c **** 
2559:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2560:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2561:Middlewares/FreeRTOS/tasks.c **** 
2562:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2563:Middlewares/FreeRTOS/tasks.c **** 
2564:Middlewares/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetIdleTaskHandle( void )
2565:Middlewares/FreeRTOS/tasks.c ****     {
2566:Middlewares/FreeRTOS/tasks.c ****         /* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2567:Middlewares/FreeRTOS/tasks.c ****          * started, then xIdleTaskHandle will be NULL. */
2568:Middlewares/FreeRTOS/tasks.c ****         configASSERT( ( xIdleTaskHandle != NULL ) );
2569:Middlewares/FreeRTOS/tasks.c ****         return xIdleTaskHandle;
2570:Middlewares/FreeRTOS/tasks.c ****     }
2571:Middlewares/FreeRTOS/tasks.c **** 
2572:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2573:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2574:Middlewares/FreeRTOS/tasks.c **** 
2575:Middlewares/FreeRTOS/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 52


2576:Middlewares/FreeRTOS/tasks.c ****  * This is to ensure vTaskStepTick() is available when user defined low power mode
2577:Middlewares/FreeRTOS/tasks.c ****  * implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2578:Middlewares/FreeRTOS/tasks.c ****  * 1. */
2579:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2580:Middlewares/FreeRTOS/tasks.c **** 
2581:Middlewares/FreeRTOS/tasks.c ****     void vTaskStepTick( TickType_t xTicksToJump )
2582:Middlewares/FreeRTOS/tasks.c ****     {
2583:Middlewares/FreeRTOS/tasks.c ****         /* Correct the tick count value after a period during which the tick
2584:Middlewares/FreeRTOS/tasks.c ****          * was suppressed.  Note this does *not* call the tick hook function for
2585:Middlewares/FreeRTOS/tasks.c ****          * each stepped tick. */
2586:Middlewares/FreeRTOS/tasks.c ****         configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2587:Middlewares/FreeRTOS/tasks.c **** 
2588:Middlewares/FreeRTOS/tasks.c ****         if( ( xTickCount + xTicksToJump ) == xNextTaskUnblockTime )
2589:Middlewares/FreeRTOS/tasks.c ****         {
2590:Middlewares/FreeRTOS/tasks.c ****             /* Arrange for xTickCount to reach xNextTaskUnblockTime in
2591:Middlewares/FreeRTOS/tasks.c ****              * xTaskIncrementTick() when the scheduler resumes.  This ensures
2592:Middlewares/FreeRTOS/tasks.c ****              * that any delayed tasks are resumed at the correct time. */
2593:Middlewares/FreeRTOS/tasks.c ****             configASSERT( uxSchedulerSuspended );
2594:Middlewares/FreeRTOS/tasks.c ****             configASSERT( xTicksToJump != ( TickType_t ) 0 );
2595:Middlewares/FreeRTOS/tasks.c **** 
2596:Middlewares/FreeRTOS/tasks.c ****             /* Prevent the tick interrupt modifying xPendedTicks simultaneously. */
2597:Middlewares/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
2598:Middlewares/FreeRTOS/tasks.c ****             {
2599:Middlewares/FreeRTOS/tasks.c ****                 xPendedTicks++;
2600:Middlewares/FreeRTOS/tasks.c ****             }
2601:Middlewares/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
2602:Middlewares/FreeRTOS/tasks.c ****             xTicksToJump--;
2603:Middlewares/FreeRTOS/tasks.c ****         }
2604:Middlewares/FreeRTOS/tasks.c ****         else
2605:Middlewares/FreeRTOS/tasks.c ****         {
2606:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2607:Middlewares/FreeRTOS/tasks.c ****         }
2608:Middlewares/FreeRTOS/tasks.c **** 
2609:Middlewares/FreeRTOS/tasks.c ****         xTickCount += xTicksToJump;
2610:Middlewares/FreeRTOS/tasks.c ****         traceINCREASE_TICK_COUNT( xTicksToJump );
2611:Middlewares/FreeRTOS/tasks.c ****     }
2612:Middlewares/FreeRTOS/tasks.c **** 
2613:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2614:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2615:Middlewares/FreeRTOS/tasks.c **** 
2616:Middlewares/FreeRTOS/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2617:Middlewares/FreeRTOS/tasks.c **** {
2618:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
2619:Middlewares/FreeRTOS/tasks.c **** 
2620:Middlewares/FreeRTOS/tasks.c ****     /* Must not be called with the scheduler suspended as the implementation
2621:Middlewares/FreeRTOS/tasks.c ****      * relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2622:Middlewares/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended == 0 );
2623:Middlewares/FreeRTOS/tasks.c **** 
2624:Middlewares/FreeRTOS/tasks.c ****     /* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2625:Middlewares/FreeRTOS/tasks.c ****      * the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2626:Middlewares/FreeRTOS/tasks.c ****     vTaskSuspendAll();
2627:Middlewares/FreeRTOS/tasks.c **** 
2628:Middlewares/FreeRTOS/tasks.c ****     /* Prevent the tick interrupt modifying xPendedTicks simultaneously. */
2629:Middlewares/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
2630:Middlewares/FreeRTOS/tasks.c ****     {
2631:Middlewares/FreeRTOS/tasks.c ****         xPendedTicks += xTicksToCatchUp;
2632:Middlewares/FreeRTOS/tasks.c ****     }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 53


2633:Middlewares/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
2634:Middlewares/FreeRTOS/tasks.c ****     xYieldOccurred = xTaskResumeAll();
2635:Middlewares/FreeRTOS/tasks.c **** 
2636:Middlewares/FreeRTOS/tasks.c ****     return xYieldOccurred;
2637:Middlewares/FreeRTOS/tasks.c **** }
2638:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2639:Middlewares/FreeRTOS/tasks.c **** 
2640:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2641:Middlewares/FreeRTOS/tasks.c **** 
2642:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2643:Middlewares/FreeRTOS/tasks.c ****     {
2644:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB = xTask;
2645:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn;
2646:Middlewares/FreeRTOS/tasks.c **** 
2647:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxTCB );
2648:Middlewares/FreeRTOS/tasks.c **** 
2649:Middlewares/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2650:Middlewares/FreeRTOS/tasks.c ****         {
2651:Middlewares/FreeRTOS/tasks.c ****             /* A task can only be prematurely removed from the Blocked state if
2652:Middlewares/FreeRTOS/tasks.c ****              * it is actually in the Blocked state. */
2653:Middlewares/FreeRTOS/tasks.c ****             if( eTaskGetState( xTask ) == eBlocked )
2654:Middlewares/FreeRTOS/tasks.c ****             {
2655:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
2656:Middlewares/FreeRTOS/tasks.c **** 
2657:Middlewares/FreeRTOS/tasks.c ****                 /* Remove the reference to the task from the blocked list.  An
2658:Middlewares/FreeRTOS/tasks.c ****                  * interrupt won't touch the xStateListItem because the
2659:Middlewares/FreeRTOS/tasks.c ****                  * scheduler is suspended. */
2660:Middlewares/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2661:Middlewares/FreeRTOS/tasks.c **** 
2662:Middlewares/FreeRTOS/tasks.c ****                 /* Is the task waiting on an event also?  If so remove it from
2663:Middlewares/FreeRTOS/tasks.c ****                  * the event list too.  Interrupts can touch the event list item,
2664:Middlewares/FreeRTOS/tasks.c ****                  * even though the scheduler is suspended, so a critical section
2665:Middlewares/FreeRTOS/tasks.c ****                  * is used. */
2666:Middlewares/FreeRTOS/tasks.c ****                 taskENTER_CRITICAL();
2667:Middlewares/FreeRTOS/tasks.c ****                 {
2668:Middlewares/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2669:Middlewares/FreeRTOS/tasks.c ****                     {
2670:Middlewares/FreeRTOS/tasks.c ****                         ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2671:Middlewares/FreeRTOS/tasks.c **** 
2672:Middlewares/FreeRTOS/tasks.c ****                         /* This lets the task know it was forcibly removed from the
2673:Middlewares/FreeRTOS/tasks.c ****                          * blocked state so it should not re-evaluate its block time and
2674:Middlewares/FreeRTOS/tasks.c ****                          * then block again. */
2675:Middlewares/FreeRTOS/tasks.c ****                         pxTCB->ucDelayAborted = pdTRUE;
2676:Middlewares/FreeRTOS/tasks.c ****                     }
2677:Middlewares/FreeRTOS/tasks.c ****                     else
2678:Middlewares/FreeRTOS/tasks.c ****                     {
2679:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2680:Middlewares/FreeRTOS/tasks.c ****                     }
2681:Middlewares/FreeRTOS/tasks.c ****                 }
2682:Middlewares/FreeRTOS/tasks.c ****                 taskEXIT_CRITICAL();
2683:Middlewares/FreeRTOS/tasks.c **** 
2684:Middlewares/FreeRTOS/tasks.c ****                 /* Place the unblocked task into the appropriate ready list. */
2685:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
2686:Middlewares/FreeRTOS/tasks.c **** 
2687:Middlewares/FreeRTOS/tasks.c ****                 /* A task being unblocked cannot cause an immediate context
2688:Middlewares/FreeRTOS/tasks.c ****                  * switch if preemption is turned off. */
2689:Middlewares/FreeRTOS/tasks.c ****                 #if ( configUSE_PREEMPTION == 1 )
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 54


2690:Middlewares/FreeRTOS/tasks.c ****                 {
2691:Middlewares/FreeRTOS/tasks.c ****                     /* Preemption is on, but a context switch should only be
2692:Middlewares/FreeRTOS/tasks.c ****                      * performed if the unblocked task has a priority that is
2693:Middlewares/FreeRTOS/tasks.c ****                      * higher than the currently executing task. */
2694:Middlewares/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2695:Middlewares/FreeRTOS/tasks.c ****                     {
2696:Middlewares/FreeRTOS/tasks.c ****                         /* Pend the yield to be performed when the scheduler
2697:Middlewares/FreeRTOS/tasks.c ****                          * is unsuspended. */
2698:Middlewares/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
2699:Middlewares/FreeRTOS/tasks.c ****                     }
2700:Middlewares/FreeRTOS/tasks.c ****                     else
2701:Middlewares/FreeRTOS/tasks.c ****                     {
2702:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2703:Middlewares/FreeRTOS/tasks.c ****                     }
2704:Middlewares/FreeRTOS/tasks.c ****                 }
2705:Middlewares/FreeRTOS/tasks.c ****                 #endif /* configUSE_PREEMPTION */
2706:Middlewares/FreeRTOS/tasks.c ****             }
2707:Middlewares/FreeRTOS/tasks.c ****             else
2708:Middlewares/FreeRTOS/tasks.c ****             {
2709:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdFAIL;
2710:Middlewares/FreeRTOS/tasks.c ****             }
2711:Middlewares/FreeRTOS/tasks.c ****         }
2712:Middlewares/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2713:Middlewares/FreeRTOS/tasks.c **** 
2714:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
2715:Middlewares/FreeRTOS/tasks.c ****     }
2716:Middlewares/FreeRTOS/tasks.c **** 
2717:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2718:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2719:Middlewares/FreeRTOS/tasks.c **** 
2720:Middlewares/FreeRTOS/tasks.c **** BaseType_t xTaskIncrementTick( void )
2721:Middlewares/FreeRTOS/tasks.c **** {
2722:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
2723:Middlewares/FreeRTOS/tasks.c ****     TickType_t xItemValue;
2724:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
2725:Middlewares/FreeRTOS/tasks.c **** 
2726:Middlewares/FreeRTOS/tasks.c ****     /* Called by the portable layer each time a tick interrupt occurs.
2727:Middlewares/FreeRTOS/tasks.c ****      * Increments the tick then checks to see if the new tick value will cause any
2728:Middlewares/FreeRTOS/tasks.c ****      * tasks to be unblocked. */
2729:Middlewares/FreeRTOS/tasks.c ****     traceTASK_INCREMENT_TICK( xTickCount );
2730:Middlewares/FreeRTOS/tasks.c **** 
2731:Middlewares/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2732:Middlewares/FreeRTOS/tasks.c ****     {
2733:Middlewares/FreeRTOS/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this
2734:Middlewares/FreeRTOS/tasks.c ****          * block. */
2735:Middlewares/FreeRTOS/tasks.c ****         const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2736:Middlewares/FreeRTOS/tasks.c **** 
2737:Middlewares/FreeRTOS/tasks.c ****         /* Increment the RTOS tick, switching the delayed and overflowed
2738:Middlewares/FreeRTOS/tasks.c ****          * delayed lists if it wraps to 0. */
2739:Middlewares/FreeRTOS/tasks.c ****         xTickCount = xConstTickCount;
2740:Middlewares/FreeRTOS/tasks.c **** 
2741:Middlewares/FreeRTOS/tasks.c ****         if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to fa
2742:Middlewares/FreeRTOS/tasks.c ****         {
2743:Middlewares/FreeRTOS/tasks.c ****             taskSWITCH_DELAYED_LISTS();
2744:Middlewares/FreeRTOS/tasks.c ****         }
2745:Middlewares/FreeRTOS/tasks.c ****         else
2746:Middlewares/FreeRTOS/tasks.c ****         {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 55


2747:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2748:Middlewares/FreeRTOS/tasks.c ****         }
2749:Middlewares/FreeRTOS/tasks.c **** 
2750:Middlewares/FreeRTOS/tasks.c ****         /* See if this tick has made a timeout expire.  Tasks are stored in
2751:Middlewares/FreeRTOS/tasks.c ****          * the  queue in the order of their wake time - meaning once one task
2752:Middlewares/FreeRTOS/tasks.c ****          * has been found whose block time has not expired there is no need to
2753:Middlewares/FreeRTOS/tasks.c ****          * look any further down the list. */
2754:Middlewares/FreeRTOS/tasks.c ****         if( xConstTickCount >= xNextTaskUnblockTime )
2755:Middlewares/FreeRTOS/tasks.c ****         {
2756:Middlewares/FreeRTOS/tasks.c ****             for( ; ; )
2757:Middlewares/FreeRTOS/tasks.c ****             {
2758:Middlewares/FreeRTOS/tasks.c ****                 if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2759:Middlewares/FreeRTOS/tasks.c ****                 {
2760:Middlewares/FreeRTOS/tasks.c ****                     /* The delayed list is empty.  Set xNextTaskUnblockTime
2761:Middlewares/FreeRTOS/tasks.c ****                      * to the maximum possible value so it is extremely
2762:Middlewares/FreeRTOS/tasks.c ****                      * unlikely that the
2763:Middlewares/FreeRTOS/tasks.c ****                      * if( xTickCount >= xNextTaskUnblockTime ) test will pass
2764:Middlewares/FreeRTOS/tasks.c ****                      * next time through. */
2765:Middlewares/FreeRTOS/tasks.c ****                     xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts
2766:Middlewares/FreeRTOS/tasks.c ****                     break;
2767:Middlewares/FreeRTOS/tasks.c ****                 }
2768:Middlewares/FreeRTOS/tasks.c ****                 else
2769:Middlewares/FreeRTOS/tasks.c ****                 {
2770:Middlewares/FreeRTOS/tasks.c ****                     /* The delayed list is not empty, get the value of the
2771:Middlewares/FreeRTOS/tasks.c ****                      * item at the head of the delayed list.  This is the time
2772:Middlewares/FreeRTOS/tasks.c ****                      * at which the task at the head of the delayed list must
2773:Middlewares/FreeRTOS/tasks.c ****                      * be removed from the Blocked state. */
2774:Middlewares/FreeRTOS/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * 
2775:Middlewares/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2776:Middlewares/FreeRTOS/tasks.c **** 
2777:Middlewares/FreeRTOS/tasks.c ****                     if( xConstTickCount < xItemValue )
2778:Middlewares/FreeRTOS/tasks.c ****                     {
2779:Middlewares/FreeRTOS/tasks.c ****                         /* It is not time to unblock this item yet, but the
2780:Middlewares/FreeRTOS/tasks.c ****                          * item value is the time at which the task at the head
2781:Middlewares/FreeRTOS/tasks.c ****                          * of the blocked list must be removed from the Blocked
2782:Middlewares/FreeRTOS/tasks.c ****                          * state -  so record the item value in
2783:Middlewares/FreeRTOS/tasks.c ****                          * xNextTaskUnblockTime. */
2784:Middlewares/FreeRTOS/tasks.c ****                         xNextTaskUnblockTime = xItemValue;
2785:Middlewares/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
2786:Middlewares/FreeRTOS/tasks.c ****                     }
2787:Middlewares/FreeRTOS/tasks.c ****                     else
2788:Middlewares/FreeRTOS/tasks.c ****                     {
2789:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2790:Middlewares/FreeRTOS/tasks.c ****                     }
2791:Middlewares/FreeRTOS/tasks.c **** 
2792:Middlewares/FreeRTOS/tasks.c ****                     /* It is time to remove the item from the Blocked state. */
2793:Middlewares/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
2794:Middlewares/FreeRTOS/tasks.c **** 
2795:Middlewares/FreeRTOS/tasks.c ****                     /* Is the task waiting on an event also?  If so remove
2796:Middlewares/FreeRTOS/tasks.c ****                      * it from the event list. */
2797:Middlewares/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2798:Middlewares/FreeRTOS/tasks.c ****                     {
2799:Middlewares/FreeRTOS/tasks.c ****                         listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
2800:Middlewares/FreeRTOS/tasks.c ****                     }
2801:Middlewares/FreeRTOS/tasks.c ****                     else
2802:Middlewares/FreeRTOS/tasks.c ****                     {
2803:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 56


2804:Middlewares/FreeRTOS/tasks.c ****                     }
2805:Middlewares/FreeRTOS/tasks.c **** 
2806:Middlewares/FreeRTOS/tasks.c ****                     /* Place the unblocked task into the appropriate ready
2807:Middlewares/FreeRTOS/tasks.c ****                      * list. */
2808:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2809:Middlewares/FreeRTOS/tasks.c **** 
2810:Middlewares/FreeRTOS/tasks.c ****                     /* A task being unblocked cannot cause an immediate
2811:Middlewares/FreeRTOS/tasks.c ****                      * context switch if preemption is turned off. */
2812:Middlewares/FreeRTOS/tasks.c ****                     #if ( configUSE_PREEMPTION == 1 )
2813:Middlewares/FreeRTOS/tasks.c ****                     {
2814:Middlewares/FreeRTOS/tasks.c ****                         /* Preemption is on, but a context switch should
2815:Middlewares/FreeRTOS/tasks.c ****                          * only be performed if the unblocked task's
2816:Middlewares/FreeRTOS/tasks.c ****                          * priority is higher than the currently executing
2817:Middlewares/FreeRTOS/tasks.c ****                          * task.
2818:Middlewares/FreeRTOS/tasks.c ****                          * The case of equal priority tasks sharing
2819:Middlewares/FreeRTOS/tasks.c ****                          * processing time (which happens when both
2820:Middlewares/FreeRTOS/tasks.c ****                          * preemption and time slicing are on) is
2821:Middlewares/FreeRTOS/tasks.c ****                          * handled below.*/
2822:Middlewares/FreeRTOS/tasks.c ****                         if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2823:Middlewares/FreeRTOS/tasks.c ****                         {
2824:Middlewares/FreeRTOS/tasks.c ****                             xSwitchRequired = pdTRUE;
2825:Middlewares/FreeRTOS/tasks.c ****                         }
2826:Middlewares/FreeRTOS/tasks.c ****                         else
2827:Middlewares/FreeRTOS/tasks.c ****                         {
2828:Middlewares/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
2829:Middlewares/FreeRTOS/tasks.c ****                         }
2830:Middlewares/FreeRTOS/tasks.c ****                     }
2831:Middlewares/FreeRTOS/tasks.c ****                     #endif /* configUSE_PREEMPTION */
2832:Middlewares/FreeRTOS/tasks.c ****                 }
2833:Middlewares/FreeRTOS/tasks.c ****             }
2834:Middlewares/FreeRTOS/tasks.c ****         }
2835:Middlewares/FreeRTOS/tasks.c **** 
2836:Middlewares/FreeRTOS/tasks.c ****         /* Tasks of equal priority to the currently running task will share
2837:Middlewares/FreeRTOS/tasks.c ****          * processing time (time slice) if preemption is on, and the application
2838:Middlewares/FreeRTOS/tasks.c ****          * writer has not explicitly turned time slicing off. */
2839:Middlewares/FreeRTOS/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2840:Middlewares/FreeRTOS/tasks.c ****         {
2841:Middlewares/FreeRTOS/tasks.c ****             if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( U
2842:Middlewares/FreeRTOS/tasks.c ****             {
2843:Middlewares/FreeRTOS/tasks.c ****                 xSwitchRequired = pdTRUE;
2844:Middlewares/FreeRTOS/tasks.c ****             }
2845:Middlewares/FreeRTOS/tasks.c ****             else
2846:Middlewares/FreeRTOS/tasks.c ****             {
2847:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2848:Middlewares/FreeRTOS/tasks.c ****             }
2849:Middlewares/FreeRTOS/tasks.c ****         }
2850:Middlewares/FreeRTOS/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2851:Middlewares/FreeRTOS/tasks.c **** 
2852:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2853:Middlewares/FreeRTOS/tasks.c ****         {
2854:Middlewares/FreeRTOS/tasks.c ****             /* Guard against the tick hook being called when the pended tick
2855:Middlewares/FreeRTOS/tasks.c ****              * count is being unwound (when the scheduler is being unlocked). */
2856:Middlewares/FreeRTOS/tasks.c ****             if( xPendedTicks == ( TickType_t ) 0 )
2857:Middlewares/FreeRTOS/tasks.c ****             {
2858:Middlewares/FreeRTOS/tasks.c ****                 vApplicationTickHook();
2859:Middlewares/FreeRTOS/tasks.c ****             }
2860:Middlewares/FreeRTOS/tasks.c ****             else
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 57


2861:Middlewares/FreeRTOS/tasks.c ****             {
2862:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2863:Middlewares/FreeRTOS/tasks.c ****             }
2864:Middlewares/FreeRTOS/tasks.c ****         }
2865:Middlewares/FreeRTOS/tasks.c ****         #endif /* configUSE_TICK_HOOK */
2866:Middlewares/FreeRTOS/tasks.c **** 
2867:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_PREEMPTION == 1 )
2868:Middlewares/FreeRTOS/tasks.c ****         {
2869:Middlewares/FreeRTOS/tasks.c ****             if( xYieldPending != pdFALSE )
2870:Middlewares/FreeRTOS/tasks.c ****             {
2871:Middlewares/FreeRTOS/tasks.c ****                 xSwitchRequired = pdTRUE;
2872:Middlewares/FreeRTOS/tasks.c ****             }
2873:Middlewares/FreeRTOS/tasks.c ****             else
2874:Middlewares/FreeRTOS/tasks.c ****             {
2875:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2876:Middlewares/FreeRTOS/tasks.c ****             }
2877:Middlewares/FreeRTOS/tasks.c ****         }
2878:Middlewares/FreeRTOS/tasks.c ****         #endif /* configUSE_PREEMPTION */
2879:Middlewares/FreeRTOS/tasks.c ****     }
2880:Middlewares/FreeRTOS/tasks.c ****     else
2881:Middlewares/FreeRTOS/tasks.c ****     {
2882:Middlewares/FreeRTOS/tasks.c ****         ++xPendedTicks;
2883:Middlewares/FreeRTOS/tasks.c **** 
2884:Middlewares/FreeRTOS/tasks.c ****         /* The tick hook gets called at regular intervals, even if the
2885:Middlewares/FreeRTOS/tasks.c ****          * scheduler is locked. */
2886:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2887:Middlewares/FreeRTOS/tasks.c ****         {
2888:Middlewares/FreeRTOS/tasks.c ****             vApplicationTickHook();
2889:Middlewares/FreeRTOS/tasks.c ****         }
2890:Middlewares/FreeRTOS/tasks.c ****         #endif
2891:Middlewares/FreeRTOS/tasks.c ****     }
2892:Middlewares/FreeRTOS/tasks.c **** 
2893:Middlewares/FreeRTOS/tasks.c ****     return xSwitchRequired;
2894:Middlewares/FreeRTOS/tasks.c **** }
2895:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2896:Middlewares/FreeRTOS/tasks.c **** 
2897:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2898:Middlewares/FreeRTOS/tasks.c **** 
2899:Middlewares/FreeRTOS/tasks.c ****     void vTaskSetApplicationTaskTag( TaskHandle_t xTask,
2900:Middlewares/FreeRTOS/tasks.c ****                                      TaskHookFunction_t pxHookFunction )
2901:Middlewares/FreeRTOS/tasks.c ****     {
2902:Middlewares/FreeRTOS/tasks.c ****         TCB_t * xTCB;
2903:Middlewares/FreeRTOS/tasks.c **** 
2904:Middlewares/FreeRTOS/tasks.c ****         /* If xTask is NULL then it is the task hook of the calling task that is
2905:Middlewares/FreeRTOS/tasks.c ****          * getting set. */
2906:Middlewares/FreeRTOS/tasks.c ****         if( xTask == NULL )
2907:Middlewares/FreeRTOS/tasks.c ****         {
2908:Middlewares/FreeRTOS/tasks.c ****             xTCB = ( TCB_t * ) pxCurrentTCB;
2909:Middlewares/FreeRTOS/tasks.c ****         }
2910:Middlewares/FreeRTOS/tasks.c ****         else
2911:Middlewares/FreeRTOS/tasks.c ****         {
2912:Middlewares/FreeRTOS/tasks.c ****             xTCB = xTask;
2913:Middlewares/FreeRTOS/tasks.c ****         }
2914:Middlewares/FreeRTOS/tasks.c **** 
2915:Middlewares/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2916:Middlewares/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2917:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 58


2918:Middlewares/FreeRTOS/tasks.c ****         {
2919:Middlewares/FreeRTOS/tasks.c ****             xTCB->pxTaskTag = pxHookFunction;
2920:Middlewares/FreeRTOS/tasks.c ****         }
2921:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
2922:Middlewares/FreeRTOS/tasks.c ****     }
2923:Middlewares/FreeRTOS/tasks.c **** 
2924:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2925:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2926:Middlewares/FreeRTOS/tasks.c **** 
2927:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2928:Middlewares/FreeRTOS/tasks.c **** 
2929:Middlewares/FreeRTOS/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2930:Middlewares/FreeRTOS/tasks.c ****     {
2931:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2932:Middlewares/FreeRTOS/tasks.c ****         TaskHookFunction_t xReturn;
2933:Middlewares/FreeRTOS/tasks.c **** 
2934:Middlewares/FreeRTOS/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2935:Middlewares/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2936:Middlewares/FreeRTOS/tasks.c **** 
2937:Middlewares/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2938:Middlewares/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2939:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
2940:Middlewares/FreeRTOS/tasks.c ****         {
2941:Middlewares/FreeRTOS/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2942:Middlewares/FreeRTOS/tasks.c ****         }
2943:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
2944:Middlewares/FreeRTOS/tasks.c **** 
2945:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
2946:Middlewares/FreeRTOS/tasks.c ****     }
2947:Middlewares/FreeRTOS/tasks.c **** 
2948:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2949:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2950:Middlewares/FreeRTOS/tasks.c **** 
2951:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2952:Middlewares/FreeRTOS/tasks.c **** 
2953:Middlewares/FreeRTOS/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2954:Middlewares/FreeRTOS/tasks.c ****     {
2955:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2956:Middlewares/FreeRTOS/tasks.c ****         TaskHookFunction_t xReturn;
2957:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
2958:Middlewares/FreeRTOS/tasks.c **** 
2959:Middlewares/FreeRTOS/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2960:Middlewares/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2961:Middlewares/FreeRTOS/tasks.c **** 
2962:Middlewares/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2963:Middlewares/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2964:Middlewares/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2965:Middlewares/FreeRTOS/tasks.c ****         {
2966:Middlewares/FreeRTOS/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2967:Middlewares/FreeRTOS/tasks.c ****         }
2968:Middlewares/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2969:Middlewares/FreeRTOS/tasks.c **** 
2970:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
2971:Middlewares/FreeRTOS/tasks.c ****     }
2972:Middlewares/FreeRTOS/tasks.c **** 
2973:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2974:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 59


2975:Middlewares/FreeRTOS/tasks.c **** 
2976:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2977:Middlewares/FreeRTOS/tasks.c **** 
2978:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask,
2979:Middlewares/FreeRTOS/tasks.c ****                                              void * pvParameter )
2980:Middlewares/FreeRTOS/tasks.c ****     {
2981:Middlewares/FreeRTOS/tasks.c ****         TCB_t * xTCB;
2982:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn;
2983:Middlewares/FreeRTOS/tasks.c **** 
2984:Middlewares/FreeRTOS/tasks.c ****         /* If xTask is NULL then we are calling our own task hook. */
2985:Middlewares/FreeRTOS/tasks.c ****         if( xTask == NULL )
2986:Middlewares/FreeRTOS/tasks.c ****         {
2987:Middlewares/FreeRTOS/tasks.c ****             xTCB = pxCurrentTCB;
2988:Middlewares/FreeRTOS/tasks.c ****         }
2989:Middlewares/FreeRTOS/tasks.c ****         else
2990:Middlewares/FreeRTOS/tasks.c ****         {
2991:Middlewares/FreeRTOS/tasks.c ****             xTCB = xTask;
2992:Middlewares/FreeRTOS/tasks.c ****         }
2993:Middlewares/FreeRTOS/tasks.c **** 
2994:Middlewares/FreeRTOS/tasks.c ****         if( xTCB->pxTaskTag != NULL )
2995:Middlewares/FreeRTOS/tasks.c ****         {
2996:Middlewares/FreeRTOS/tasks.c ****             xReturn = xTCB->pxTaskTag( pvParameter );
2997:Middlewares/FreeRTOS/tasks.c ****         }
2998:Middlewares/FreeRTOS/tasks.c ****         else
2999:Middlewares/FreeRTOS/tasks.c ****         {
3000:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdFAIL;
3001:Middlewares/FreeRTOS/tasks.c ****         }
3002:Middlewares/FreeRTOS/tasks.c **** 
3003:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
3004:Middlewares/FreeRTOS/tasks.c ****     }
3005:Middlewares/FreeRTOS/tasks.c **** 
3006:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
3007:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3008:Middlewares/FreeRTOS/tasks.c **** 
3009:Middlewares/FreeRTOS/tasks.c **** void vTaskSwitchContext( void )
3010:Middlewares/FreeRTOS/tasks.c **** {
3011:Middlewares/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
3012:Middlewares/FreeRTOS/tasks.c ****     {
3013:Middlewares/FreeRTOS/tasks.c ****         /* The scheduler is currently suspended - do not allow a context
3014:Middlewares/FreeRTOS/tasks.c ****          * switch. */
3015:Middlewares/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3016:Middlewares/FreeRTOS/tasks.c ****     }
3017:Middlewares/FreeRTOS/tasks.c ****     else
3018:Middlewares/FreeRTOS/tasks.c ****     {
3019:Middlewares/FreeRTOS/tasks.c ****         xYieldPending = pdFALSE;
3020:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
3021:Middlewares/FreeRTOS/tasks.c **** 
3022:Middlewares/FreeRTOS/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3023:Middlewares/FreeRTOS/tasks.c ****         {
3024:Middlewares/FreeRTOS/tasks.c ****             #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3025:Middlewares/FreeRTOS/tasks.c ****                 portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3026:Middlewares/FreeRTOS/tasks.c ****             #else
3027:Middlewares/FreeRTOS/tasks.c ****                 ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3028:Middlewares/FreeRTOS/tasks.c ****             #endif
3029:Middlewares/FreeRTOS/tasks.c **** 
3030:Middlewares/FreeRTOS/tasks.c ****             /* Add the amount of time the task has been running to the
3031:Middlewares/FreeRTOS/tasks.c ****              * accumulated time so far.  The time the task started running was
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 60


3032:Middlewares/FreeRTOS/tasks.c ****              * stored in ulTaskSwitchedInTime.  Note that there is no overflow
3033:Middlewares/FreeRTOS/tasks.c ****              * protection here so count values are only valid until the timer
3034:Middlewares/FreeRTOS/tasks.c ****              * overflows.  The guard against negative values is to protect
3035:Middlewares/FreeRTOS/tasks.c ****              * against suspect run time stat counter implementations - which
3036:Middlewares/FreeRTOS/tasks.c ****              * are provided by the application, not the kernel. */
3037:Middlewares/FreeRTOS/tasks.c ****             if( ulTotalRunTime > ulTaskSwitchedInTime )
3038:Middlewares/FreeRTOS/tasks.c ****             {
3039:Middlewares/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3040:Middlewares/FreeRTOS/tasks.c ****             }
3041:Middlewares/FreeRTOS/tasks.c ****             else
3042:Middlewares/FreeRTOS/tasks.c ****             {
3043:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3044:Middlewares/FreeRTOS/tasks.c ****             }
3045:Middlewares/FreeRTOS/tasks.c **** 
3046:Middlewares/FreeRTOS/tasks.c ****             ulTaskSwitchedInTime = ulTotalRunTime;
3047:Middlewares/FreeRTOS/tasks.c ****         }
3048:Middlewares/FreeRTOS/tasks.c ****         #endif /* configGENERATE_RUN_TIME_STATS */
3049:Middlewares/FreeRTOS/tasks.c **** 
3050:Middlewares/FreeRTOS/tasks.c ****         /* Check for stack overflow, if configured. */
3051:Middlewares/FreeRTOS/tasks.c ****         taskCHECK_FOR_STACK_OVERFLOW();
3052:Middlewares/FreeRTOS/tasks.c **** 
3053:Middlewares/FreeRTOS/tasks.c ****         /* Before the currently running task is switched out, save its errno. */
3054:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3055:Middlewares/FreeRTOS/tasks.c ****         {
3056:Middlewares/FreeRTOS/tasks.c ****             pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3057:Middlewares/FreeRTOS/tasks.c ****         }
3058:Middlewares/FreeRTOS/tasks.c ****         #endif
3059:Middlewares/FreeRTOS/tasks.c **** 
3060:Middlewares/FreeRTOS/tasks.c ****         /* Select a new task to run using either the generic C or port
3061:Middlewares/FreeRTOS/tasks.c ****          * optimised asm code. */
3062:Middlewares/FreeRTOS/tasks.c ****         taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with
3063:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
3064:Middlewares/FreeRTOS/tasks.c **** 
3065:Middlewares/FreeRTOS/tasks.c ****         /* After the new task is switched in, update the global errno. */
3066:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3067:Middlewares/FreeRTOS/tasks.c ****         {
3068:Middlewares/FreeRTOS/tasks.c ****             FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3069:Middlewares/FreeRTOS/tasks.c ****         }
3070:Middlewares/FreeRTOS/tasks.c ****         #endif
3071:Middlewares/FreeRTOS/tasks.c **** 
3072:Middlewares/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
3073:Middlewares/FreeRTOS/tasks.c ****         {
3074:Middlewares/FreeRTOS/tasks.c ****             /* Switch C-Runtime's TLS Block to point to the TLS
3075:Middlewares/FreeRTOS/tasks.c ****              * Block specific to this task. */
3076:Middlewares/FreeRTOS/tasks.c ****             configSET_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
3077:Middlewares/FreeRTOS/tasks.c ****         }
3078:Middlewares/FreeRTOS/tasks.c ****         #endif
3079:Middlewares/FreeRTOS/tasks.c ****     }
3080:Middlewares/FreeRTOS/tasks.c **** }
3081:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3082:Middlewares/FreeRTOS/tasks.c **** 
3083:Middlewares/FreeRTOS/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList,
3084:Middlewares/FreeRTOS/tasks.c ****                             const TickType_t xTicksToWait )
3085:Middlewares/FreeRTOS/tasks.c **** {
3086:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
3087:Middlewares/FreeRTOS/tasks.c **** 
3088:Middlewares/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 61


3089:Middlewares/FreeRTOS/tasks.c ****      * SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3090:Middlewares/FreeRTOS/tasks.c **** 
3091:Middlewares/FreeRTOS/tasks.c ****     /* Place the event list item of the TCB in the appropriate event list.
3092:Middlewares/FreeRTOS/tasks.c ****      * This is placed in the list in priority order so the highest priority task
3093:Middlewares/FreeRTOS/tasks.c ****      * is the first to be woken by the event.
3094:Middlewares/FreeRTOS/tasks.c ****      *
3095:Middlewares/FreeRTOS/tasks.c ****      * Note: Lists are sorted in ascending order by ListItem_t.xItemValue.
3096:Middlewares/FreeRTOS/tasks.c ****      * Normally, the xItemValue of a TCB's ListItem_t members is:
3097:Middlewares/FreeRTOS/tasks.c ****      *      xItemValue = ( configMAX_PRIORITIES - uxPriority )
3098:Middlewares/FreeRTOS/tasks.c ****      * Therefore, the event list is sorted in descending priority order.
3099:Middlewares/FreeRTOS/tasks.c ****      *
3100:Middlewares/FreeRTOS/tasks.c ****      * The queue that contains the event list is locked, preventing
3101:Middlewares/FreeRTOS/tasks.c ****      * simultaneous access from interrupts. */
3102:Middlewares/FreeRTOS/tasks.c ****     vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3103:Middlewares/FreeRTOS/tasks.c **** 
3104:Middlewares/FreeRTOS/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3105:Middlewares/FreeRTOS/tasks.c **** }
3106:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3107:Middlewares/FreeRTOS/tasks.c **** 
3108:Middlewares/FreeRTOS/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList,
3109:Middlewares/FreeRTOS/tasks.c ****                                      const TickType_t xItemValue,
3110:Middlewares/FreeRTOS/tasks.c ****                                      const TickType_t xTicksToWait )
3111:Middlewares/FreeRTOS/tasks.c **** {
3112:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
3113:Middlewares/FreeRTOS/tasks.c **** 
3114:Middlewares/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3115:Middlewares/FreeRTOS/tasks.c ****      * the event groups implementation. */
3116:Middlewares/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended != 0 );
3117:Middlewares/FreeRTOS/tasks.c **** 
3118:Middlewares/FreeRTOS/tasks.c ****     /* Store the item value in the event list item.  It is safe to access the
3119:Middlewares/FreeRTOS/tasks.c ****      * event list item here as interrupts won't access the event list item of a
3120:Middlewares/FreeRTOS/tasks.c ****      * task that is not in the Blocked state. */
3121:Middlewares/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VA
3122:Middlewares/FreeRTOS/tasks.c **** 
3123:Middlewares/FreeRTOS/tasks.c ****     /* Place the event list item of the TCB at the end of the appropriate event
3124:Middlewares/FreeRTOS/tasks.c ****      * list.  It is safe to access the event list here because it is part of an
3125:Middlewares/FreeRTOS/tasks.c ****      * event group implementation - and interrupts don't access event groups
3126:Middlewares/FreeRTOS/tasks.c ****      * directly (instead they access them indirectly by pending function calls to
3127:Middlewares/FreeRTOS/tasks.c ****      * the task level). */
3128:Middlewares/FreeRTOS/tasks.c ****     listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3129:Middlewares/FreeRTOS/tasks.c **** 
3130:Middlewares/FreeRTOS/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3131:Middlewares/FreeRTOS/tasks.c **** }
3132:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3133:Middlewares/FreeRTOS/tasks.c **** 
3134:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TIMERS == 1 )
3135:Middlewares/FreeRTOS/tasks.c **** 
3136:Middlewares/FreeRTOS/tasks.c ****     void vTaskPlaceOnEventListRestricted( List_t * const pxEventList,
3137:Middlewares/FreeRTOS/tasks.c ****                                           TickType_t xTicksToWait,
3138:Middlewares/FreeRTOS/tasks.c ****                                           const BaseType_t xWaitIndefinitely )
3139:Middlewares/FreeRTOS/tasks.c ****     {
3140:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxEventList );
3141:Middlewares/FreeRTOS/tasks.c **** 
3142:Middlewares/FreeRTOS/tasks.c ****         /* This function should not be called by application code hence the
3143:Middlewares/FreeRTOS/tasks.c ****          * 'Restricted' in its name.  It is not part of the public API.  It is
3144:Middlewares/FreeRTOS/tasks.c ****          * designed for use by kernel code, and has special calling requirements -
3145:Middlewares/FreeRTOS/tasks.c ****          * it should be called with the scheduler suspended. */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 62


3146:Middlewares/FreeRTOS/tasks.c **** 
3147:Middlewares/FreeRTOS/tasks.c **** 
3148:Middlewares/FreeRTOS/tasks.c ****         /* Place the event list item of the TCB in the appropriate event list.
3149:Middlewares/FreeRTOS/tasks.c ****          * In this case it is assume that this is the only task that is going to
3150:Middlewares/FreeRTOS/tasks.c ****          * be waiting on this event list, so the faster vListInsertEnd() function
3151:Middlewares/FreeRTOS/tasks.c ****          * can be used in place of vListInsert. */
3152:Middlewares/FreeRTOS/tasks.c ****         listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3153:Middlewares/FreeRTOS/tasks.c **** 
3154:Middlewares/FreeRTOS/tasks.c ****         /* If the task should block indefinitely then set the block time to a
3155:Middlewares/FreeRTOS/tasks.c ****          * value that will be recognised as an indefinite delay inside the
3156:Middlewares/FreeRTOS/tasks.c ****          * prvAddCurrentTaskToDelayedList() function. */
3157:Middlewares/FreeRTOS/tasks.c ****         if( xWaitIndefinitely != pdFALSE )
3158:Middlewares/FreeRTOS/tasks.c ****         {
3159:Middlewares/FreeRTOS/tasks.c ****             xTicksToWait = portMAX_DELAY;
3160:Middlewares/FreeRTOS/tasks.c ****         }
3161:Middlewares/FreeRTOS/tasks.c **** 
3162:Middlewares/FreeRTOS/tasks.c ****         traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3163:Middlewares/FreeRTOS/tasks.c ****         prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3164:Middlewares/FreeRTOS/tasks.c ****     }
3165:Middlewares/FreeRTOS/tasks.c **** 
3166:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TIMERS */
3167:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3168:Middlewares/FreeRTOS/tasks.c **** 
3169:Middlewares/FreeRTOS/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3170:Middlewares/FreeRTOS/tasks.c **** {
3171:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
3172:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xReturn;
3173:Middlewares/FreeRTOS/tasks.c **** 
3174:Middlewares/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3175:Middlewares/FreeRTOS/tasks.c ****      * called from a critical section within an ISR. */
3176:Middlewares/FreeRTOS/tasks.c **** 
3177:Middlewares/FreeRTOS/tasks.c ****     /* The event list is sorted in priority order, so the first in the list can
3178:Middlewares/FreeRTOS/tasks.c ****      * be removed as it is known to be the highest priority.  Remove the TCB from
3179:Middlewares/FreeRTOS/tasks.c ****      * the delayed list, and add it to the ready list.
3180:Middlewares/FreeRTOS/tasks.c ****      *
3181:Middlewares/FreeRTOS/tasks.c ****      * If an event is for a queue that is locked then this function will never
3182:Middlewares/FreeRTOS/tasks.c ****      * get called - the lock count on the queue will get modified instead.  This
3183:Middlewares/FreeRTOS/tasks.c ****      * means exclusive access to the event list is guaranteed here.
3184:Middlewares/FreeRTOS/tasks.c ****      *
3185:Middlewares/FreeRTOS/tasks.c ****      * This function assumes that a check has already been made to ensure that
3186:Middlewares/FreeRTOS/tasks.c ****      * pxEventList is not empty. */
3187:Middlewares/FreeRTOS/tasks.c ****     pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as th
3188:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
3189:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
3190:Middlewares/FreeRTOS/tasks.c **** 
3191:Middlewares/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3192:Middlewares/FreeRTOS/tasks.c ****     {
3193:Middlewares/FreeRTOS/tasks.c ****         listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
3194:Middlewares/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
3195:Middlewares/FreeRTOS/tasks.c **** 
3196:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3197:Middlewares/FreeRTOS/tasks.c ****         {
3198:Middlewares/FreeRTOS/tasks.c ****             /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3199:Middlewares/FreeRTOS/tasks.c ****              * might be set to the blocked task's time out time.  If the task is
3200:Middlewares/FreeRTOS/tasks.c ****              * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3201:Middlewares/FreeRTOS/tasks.c ****              * normally left unchanged, because it is automatically reset to a new
3202:Middlewares/FreeRTOS/tasks.c ****              * value when the tick count equals xNextTaskUnblockTime.  However if
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 63


3203:Middlewares/FreeRTOS/tasks.c ****              * tickless idling is used it might be more important to enter sleep mode
3204:Middlewares/FreeRTOS/tasks.c ****              * at the earliest possible time - so reset xNextTaskUnblockTime here to
3205:Middlewares/FreeRTOS/tasks.c ****              * ensure it is updated at the earliest possible time. */
3206:Middlewares/FreeRTOS/tasks.c ****             prvResetNextTaskUnblockTime();
3207:Middlewares/FreeRTOS/tasks.c ****         }
3208:Middlewares/FreeRTOS/tasks.c ****         #endif
3209:Middlewares/FreeRTOS/tasks.c ****     }
3210:Middlewares/FreeRTOS/tasks.c ****     else
3211:Middlewares/FreeRTOS/tasks.c ****     {
3212:Middlewares/FreeRTOS/tasks.c ****         /* The delayed and ready lists cannot be accessed, so hold this task
3213:Middlewares/FreeRTOS/tasks.c ****          * pending until the scheduler is resumed. */
3214:Middlewares/FreeRTOS/tasks.c ****         listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3215:Middlewares/FreeRTOS/tasks.c ****     }
3216:Middlewares/FreeRTOS/tasks.c **** 
3217:Middlewares/FreeRTOS/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3218:Middlewares/FreeRTOS/tasks.c ****     {
3219:Middlewares/FreeRTOS/tasks.c ****         /* Return true if the task removed from the event list has a higher
3220:Middlewares/FreeRTOS/tasks.c ****          * priority than the calling task.  This allows the calling task to know if
3221:Middlewares/FreeRTOS/tasks.c ****          * it should force a context switch now. */
3222:Middlewares/FreeRTOS/tasks.c ****         xReturn = pdTRUE;
3223:Middlewares/FreeRTOS/tasks.c **** 
3224:Middlewares/FreeRTOS/tasks.c ****         /* Mark that a yield is pending in case the user is not using the
3225:Middlewares/FreeRTOS/tasks.c ****          * "xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3226:Middlewares/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3227:Middlewares/FreeRTOS/tasks.c ****     }
3228:Middlewares/FreeRTOS/tasks.c ****     else
3229:Middlewares/FreeRTOS/tasks.c ****     {
3230:Middlewares/FreeRTOS/tasks.c ****         xReturn = pdFALSE;
3231:Middlewares/FreeRTOS/tasks.c ****     }
3232:Middlewares/FreeRTOS/tasks.c **** 
3233:Middlewares/FreeRTOS/tasks.c ****     return xReturn;
3234:Middlewares/FreeRTOS/tasks.c **** }
3235:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3236:Middlewares/FreeRTOS/tasks.c **** 
3237:Middlewares/FreeRTOS/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
3238:Middlewares/FreeRTOS/tasks.c ****                                         const TickType_t xItemValue )
3239:Middlewares/FreeRTOS/tasks.c **** {
3240:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
3241:Middlewares/FreeRTOS/tasks.c **** 
3242:Middlewares/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3243:Middlewares/FreeRTOS/tasks.c ****      * the event flags implementation. */
3244:Middlewares/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended != pdFALSE );
3245:Middlewares/FreeRTOS/tasks.c **** 
3246:Middlewares/FreeRTOS/tasks.c ****     /* Store the new item value in the event list. */
3247:Middlewares/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3248:Middlewares/FreeRTOS/tasks.c **** 
3249:Middlewares/FreeRTOS/tasks.c ****     /* Remove the event list form the event flag.  Interrupts do not access
3250:Middlewares/FreeRTOS/tasks.c ****      * event flags. */
3251:Middlewares/FreeRTOS/tasks.c ****     pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as th
3252:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
3253:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
3254:Middlewares/FreeRTOS/tasks.c **** 
3255:Middlewares/FreeRTOS/tasks.c ****     #if ( configUSE_TICKLESS_IDLE != 0 )
3256:Middlewares/FreeRTOS/tasks.c ****     {
3257:Middlewares/FreeRTOS/tasks.c ****         /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3258:Middlewares/FreeRTOS/tasks.c ****          * might be set to the blocked task's time out time.  If the task is
3259:Middlewares/FreeRTOS/tasks.c ****          * unblocked for a reason other than a timeout xNextTaskUnblockTime is
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 64


3260:Middlewares/FreeRTOS/tasks.c ****          * normally left unchanged, because it is automatically reset to a new
3261:Middlewares/FreeRTOS/tasks.c ****          * value when the tick count equals xNextTaskUnblockTime.  However if
3262:Middlewares/FreeRTOS/tasks.c ****          * tickless idling is used it might be more important to enter sleep mode
3263:Middlewares/FreeRTOS/tasks.c ****          * at the earliest possible time - so reset xNextTaskUnblockTime here to
3264:Middlewares/FreeRTOS/tasks.c ****          * ensure it is updated at the earliest possible time. */
3265:Middlewares/FreeRTOS/tasks.c ****         prvResetNextTaskUnblockTime();
3266:Middlewares/FreeRTOS/tasks.c ****     }
3267:Middlewares/FreeRTOS/tasks.c ****     #endif
3268:Middlewares/FreeRTOS/tasks.c **** 
3269:Middlewares/FreeRTOS/tasks.c ****     /* Remove the task from the delayed list and add it to the ready list.  The
3270:Middlewares/FreeRTOS/tasks.c ****      * scheduler is suspended so interrupts will not be accessing the ready
3271:Middlewares/FreeRTOS/tasks.c ****      * lists. */
3272:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
3273:Middlewares/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
3274:Middlewares/FreeRTOS/tasks.c **** 
3275:Middlewares/FreeRTOS/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3276:Middlewares/FreeRTOS/tasks.c ****     {
3277:Middlewares/FreeRTOS/tasks.c ****         /* The unblocked task has a priority above that of the calling task, so
3278:Middlewares/FreeRTOS/tasks.c ****          * a context switch is required.  This function is called with the
3279:Middlewares/FreeRTOS/tasks.c ****          * scheduler suspended so xYieldPending is set so the context switch
3280:Middlewares/FreeRTOS/tasks.c ****          * occurs immediately that the scheduler is resumed (unsuspended). */
3281:Middlewares/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3282:Middlewares/FreeRTOS/tasks.c ****     }
3283:Middlewares/FreeRTOS/tasks.c **** }
3284:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3285:Middlewares/FreeRTOS/tasks.c **** 
3286:Middlewares/FreeRTOS/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3287:Middlewares/FreeRTOS/tasks.c **** {
3288:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
3289:Middlewares/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
3290:Middlewares/FreeRTOS/tasks.c ****     {
3291:Middlewares/FreeRTOS/tasks.c ****         pxTimeOut->xOverflowCount = xNumOfOverflows;
3292:Middlewares/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
3293:Middlewares/FreeRTOS/tasks.c ****     }
3294:Middlewares/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
3295:Middlewares/FreeRTOS/tasks.c **** }
3296:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3297:Middlewares/FreeRTOS/tasks.c **** 
3298:Middlewares/FreeRTOS/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3299:Middlewares/FreeRTOS/tasks.c **** {
3300:Middlewares/FreeRTOS/tasks.c ****     /* For internal use only as it does not use a critical section. */
3301:Middlewares/FreeRTOS/tasks.c ****     pxTimeOut->xOverflowCount = xNumOfOverflows;
3302:Middlewares/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
3303:Middlewares/FreeRTOS/tasks.c **** }
3304:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3305:Middlewares/FreeRTOS/tasks.c **** 
3306:Middlewares/FreeRTOS/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
3307:Middlewares/FreeRTOS/tasks.c ****                                  TickType_t * const pxTicksToWait )
3308:Middlewares/FreeRTOS/tasks.c **** {
3309:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xReturn;
3310:Middlewares/FreeRTOS/tasks.c **** 
3311:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
3312:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
3313:Middlewares/FreeRTOS/tasks.c **** 
3314:Middlewares/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
3315:Middlewares/FreeRTOS/tasks.c ****     {
3316:Middlewares/FreeRTOS/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this block. */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 65


3317:Middlewares/FreeRTOS/tasks.c ****         const TickType_t xConstTickCount = xTickCount;
3318:Middlewares/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3319:Middlewares/FreeRTOS/tasks.c **** 
3320:Middlewares/FreeRTOS/tasks.c ****         #if ( INCLUDE_xTaskAbortDelay == 1 )
3321:Middlewares/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3322:Middlewares/FreeRTOS/tasks.c ****             {
3323:Middlewares/FreeRTOS/tasks.c ****                 /* The delay was aborted, which is not the same as a time out,
3324:Middlewares/FreeRTOS/tasks.c ****                  * but has the same result. */
3325:Middlewares/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucDelayAborted = pdFALSE;
3326:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
3327:Middlewares/FreeRTOS/tasks.c ****             }
3328:Middlewares/FreeRTOS/tasks.c ****             else
3329:Middlewares/FreeRTOS/tasks.c ****         #endif
3330:Middlewares/FreeRTOS/tasks.c **** 
3331:Middlewares/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3332:Middlewares/FreeRTOS/tasks.c ****             if( *pxTicksToWait == portMAX_DELAY )
3333:Middlewares/FreeRTOS/tasks.c ****             {
3334:Middlewares/FreeRTOS/tasks.c ****                 /* If INCLUDE_vTaskSuspend is set to 1 and the block time
3335:Middlewares/FreeRTOS/tasks.c ****                  * specified is the maximum block time then the task should block
3336:Middlewares/FreeRTOS/tasks.c ****                  * indefinitely, and therefore never time out. */
3337:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdFALSE;
3338:Middlewares/FreeRTOS/tasks.c ****             }
3339:Middlewares/FreeRTOS/tasks.c ****             else
3340:Middlewares/FreeRTOS/tasks.c ****         #endif
3341:Middlewares/FreeRTOS/tasks.c **** 
3342:Middlewares/FreeRTOS/tasks.c ****         if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTi
3343:Middlewares/FreeRTOS/tasks.c ****         {
3344:Middlewares/FreeRTOS/tasks.c ****             /* The tick count is greater than the time at which
3345:Middlewares/FreeRTOS/tasks.c ****              * vTaskSetTimeout() was called, but has also overflowed since
3346:Middlewares/FreeRTOS/tasks.c ****              * vTaskSetTimeOut() was called.  It must have wrapped all the way
3347:Middlewares/FreeRTOS/tasks.c ****              * around and gone past again. This passed since vTaskSetTimeout()
3348:Middlewares/FreeRTOS/tasks.c ****              * was called. */
3349:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
3350:Middlewares/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3351:Middlewares/FreeRTOS/tasks.c ****         }
3352:Middlewares/FreeRTOS/tasks.c ****         else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant wi
3353:Middlewares/FreeRTOS/tasks.c ****         {
3354:Middlewares/FreeRTOS/tasks.c ****             /* Not a genuine timeout. Adjust parameters for time remaining. */
3355:Middlewares/FreeRTOS/tasks.c ****             *pxTicksToWait -= xElapsedTime;
3356:Middlewares/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
3357:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdFALSE;
3358:Middlewares/FreeRTOS/tasks.c ****         }
3359:Middlewares/FreeRTOS/tasks.c ****         else
3360:Middlewares/FreeRTOS/tasks.c ****         {
3361:Middlewares/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3362:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
3363:Middlewares/FreeRTOS/tasks.c ****         }
3364:Middlewares/FreeRTOS/tasks.c ****     }
3365:Middlewares/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
3366:Middlewares/FreeRTOS/tasks.c **** 
3367:Middlewares/FreeRTOS/tasks.c ****     return xReturn;
3368:Middlewares/FreeRTOS/tasks.c **** }
3369:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3370:Middlewares/FreeRTOS/tasks.c **** 
3371:Middlewares/FreeRTOS/tasks.c **** void vTaskMissedYield( void )
3372:Middlewares/FreeRTOS/tasks.c **** {
3373:Middlewares/FreeRTOS/tasks.c ****     xYieldPending = pdTRUE;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 66


3374:Middlewares/FreeRTOS/tasks.c **** }
3375:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3376:Middlewares/FreeRTOS/tasks.c **** 
3377:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3378:Middlewares/FreeRTOS/tasks.c **** 
3379:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3380:Middlewares/FreeRTOS/tasks.c ****     {
3381:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
3382:Middlewares/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
3383:Middlewares/FreeRTOS/tasks.c **** 
3384:Middlewares/FreeRTOS/tasks.c ****         if( xTask != NULL )
3385:Middlewares/FreeRTOS/tasks.c ****         {
3386:Middlewares/FreeRTOS/tasks.c ****             pxTCB = xTask;
3387:Middlewares/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxTaskNumber;
3388:Middlewares/FreeRTOS/tasks.c ****         }
3389:Middlewares/FreeRTOS/tasks.c ****         else
3390:Middlewares/FreeRTOS/tasks.c ****         {
3391:Middlewares/FreeRTOS/tasks.c ****             uxReturn = 0U;
3392:Middlewares/FreeRTOS/tasks.c ****         }
3393:Middlewares/FreeRTOS/tasks.c **** 
3394:Middlewares/FreeRTOS/tasks.c ****         return uxReturn;
3395:Middlewares/FreeRTOS/tasks.c ****     }
3396:Middlewares/FreeRTOS/tasks.c **** 
3397:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3398:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3399:Middlewares/FreeRTOS/tasks.c **** 
3400:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3401:Middlewares/FreeRTOS/tasks.c **** 
3402:Middlewares/FreeRTOS/tasks.c ****     void vTaskSetTaskNumber( TaskHandle_t xTask,
3403:Middlewares/FreeRTOS/tasks.c ****                              const UBaseType_t uxHandle )
3404:Middlewares/FreeRTOS/tasks.c ****     {
3405:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3406:Middlewares/FreeRTOS/tasks.c **** 
3407:Middlewares/FreeRTOS/tasks.c ****         if( xTask != NULL )
3408:Middlewares/FreeRTOS/tasks.c ****         {
3409:Middlewares/FreeRTOS/tasks.c ****             pxTCB = xTask;
3410:Middlewares/FreeRTOS/tasks.c ****             pxTCB->uxTaskNumber = uxHandle;
3411:Middlewares/FreeRTOS/tasks.c ****         }
3412:Middlewares/FreeRTOS/tasks.c ****     }
3413:Middlewares/FreeRTOS/tasks.c **** 
3414:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3415:Middlewares/FreeRTOS/tasks.c **** 
3416:Middlewares/FreeRTOS/tasks.c **** /*
3417:Middlewares/FreeRTOS/tasks.c ****  * -----------------------------------------------------------
3418:Middlewares/FreeRTOS/tasks.c ****  * The Idle task.
3419:Middlewares/FreeRTOS/tasks.c ****  * ----------------------------------------------------------
3420:Middlewares/FreeRTOS/tasks.c ****  *
3421:Middlewares/FreeRTOS/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3422:Middlewares/FreeRTOS/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3423:Middlewares/FreeRTOS/tasks.c ****  *
3424:Middlewares/FreeRTOS/tasks.c ****  * void prvIdleTask( void *pvParameters );
3425:Middlewares/FreeRTOS/tasks.c ****  *
3426:Middlewares/FreeRTOS/tasks.c ****  */
3427:Middlewares/FreeRTOS/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3428:Middlewares/FreeRTOS/tasks.c **** {
3429:Middlewares/FreeRTOS/tasks.c ****     /* Stop warnings. */
3430:Middlewares/FreeRTOS/tasks.c ****     ( void ) pvParameters;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 67


3431:Middlewares/FreeRTOS/tasks.c **** 
3432:Middlewares/FreeRTOS/tasks.c ****     /** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3433:Middlewares/FreeRTOS/tasks.c ****      * SCHEDULER IS STARTED. **/
3434:Middlewares/FreeRTOS/tasks.c **** 
3435:Middlewares/FreeRTOS/tasks.c ****     /* In case a task that has a secure context deletes itself, in which case
3436:Middlewares/FreeRTOS/tasks.c ****      * the idle task is responsible for deleting the task's secure context, if
3437:Middlewares/FreeRTOS/tasks.c ****      * any. */
3438:Middlewares/FreeRTOS/tasks.c ****     portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3439:Middlewares/FreeRTOS/tasks.c **** 
3440:Middlewares/FreeRTOS/tasks.c ****     for( ; ; )
3441:Middlewares/FreeRTOS/tasks.c ****     {
3442:Middlewares/FreeRTOS/tasks.c ****         /* See if any tasks have deleted themselves - if so then the idle task
3443:Middlewares/FreeRTOS/tasks.c ****          * is responsible for freeing the deleted task's TCB and stack. */
3444:Middlewares/FreeRTOS/tasks.c ****         prvCheckTasksWaitingTermination();
3445:Middlewares/FreeRTOS/tasks.c **** 
3446:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_PREEMPTION == 0 )
3447:Middlewares/FreeRTOS/tasks.c ****         {
3448:Middlewares/FreeRTOS/tasks.c ****             /* If we are not using preemption we keep forcing a task switch to
3449:Middlewares/FreeRTOS/tasks.c ****              * see if any other task has become available.  If we are using
3450:Middlewares/FreeRTOS/tasks.c ****              * preemption we don't need to do this as any task becoming available
3451:Middlewares/FreeRTOS/tasks.c ****              * will automatically get the processor anyway. */
3452:Middlewares/FreeRTOS/tasks.c ****             taskYIELD();
3453:Middlewares/FreeRTOS/tasks.c ****         }
3454:Middlewares/FreeRTOS/tasks.c ****         #endif /* configUSE_PREEMPTION */
3455:Middlewares/FreeRTOS/tasks.c **** 
3456:Middlewares/FreeRTOS/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3457:Middlewares/FreeRTOS/tasks.c ****         {
3458:Middlewares/FreeRTOS/tasks.c ****             /* When using preemption tasks of equal priority will be
3459:Middlewares/FreeRTOS/tasks.c ****              * timesliced.  If a task that is sharing the idle priority is ready
3460:Middlewares/FreeRTOS/tasks.c ****              * to run then the idle task should yield before the end of the
3461:Middlewares/FreeRTOS/tasks.c ****              * timeslice.
3462:Middlewares/FreeRTOS/tasks.c ****              *
3463:Middlewares/FreeRTOS/tasks.c ****              * A critical region is not required here as we are just reading from
3464:Middlewares/FreeRTOS/tasks.c ****              * the list, and an occasional incorrect value will not matter.  If
3465:Middlewares/FreeRTOS/tasks.c ****              * the ready list at the idle priority contains more than one task
3466:Middlewares/FreeRTOS/tasks.c ****              * then a task other than the idle task is ready to execute. */
3467:Middlewares/FreeRTOS/tasks.c ****             if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType
3468:Middlewares/FreeRTOS/tasks.c ****             {
3469:Middlewares/FreeRTOS/tasks.c ****                 taskYIELD();
3470:Middlewares/FreeRTOS/tasks.c ****             }
3471:Middlewares/FreeRTOS/tasks.c ****             else
3472:Middlewares/FreeRTOS/tasks.c ****             {
3473:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3474:Middlewares/FreeRTOS/tasks.c ****             }
3475:Middlewares/FreeRTOS/tasks.c ****         }
3476:Middlewares/FreeRTOS/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3477:Middlewares/FreeRTOS/tasks.c **** 
3478:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_IDLE_HOOK == 1 )
3479:Middlewares/FreeRTOS/tasks.c ****         {
3480:Middlewares/FreeRTOS/tasks.c ****             extern void vApplicationIdleHook( void );
3481:Middlewares/FreeRTOS/tasks.c **** 
3482:Middlewares/FreeRTOS/tasks.c ****             /* Call the user defined function from within the idle task.  This
3483:Middlewares/FreeRTOS/tasks.c ****              * allows the application designer to add background functionality
3484:Middlewares/FreeRTOS/tasks.c ****              * without the overhead of a separate task.
3485:Middlewares/FreeRTOS/tasks.c ****              * NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3486:Middlewares/FreeRTOS/tasks.c ****              * CALL A FUNCTION THAT MIGHT BLOCK. */
3487:Middlewares/FreeRTOS/tasks.c ****             vApplicationIdleHook();
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 68


3488:Middlewares/FreeRTOS/tasks.c ****         }
3489:Middlewares/FreeRTOS/tasks.c ****         #endif /* configUSE_IDLE_HOOK */
3490:Middlewares/FreeRTOS/tasks.c **** 
3491:Middlewares/FreeRTOS/tasks.c ****         /* This conditional compilation should use inequality to 0, not equality
3492:Middlewares/FreeRTOS/tasks.c ****          * to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3493:Middlewares/FreeRTOS/tasks.c ****          * user defined low power mode  implementations require
3494:Middlewares/FreeRTOS/tasks.c ****          * configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3495:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3496:Middlewares/FreeRTOS/tasks.c ****         {
3497:Middlewares/FreeRTOS/tasks.c ****             TickType_t xExpectedIdleTime;
3498:Middlewares/FreeRTOS/tasks.c **** 
3499:Middlewares/FreeRTOS/tasks.c ****             /* It is not desirable to suspend then resume the scheduler on
3500:Middlewares/FreeRTOS/tasks.c ****              * each iteration of the idle task.  Therefore, a preliminary
3501:Middlewares/FreeRTOS/tasks.c ****              * test of the expected idle time is performed without the
3502:Middlewares/FreeRTOS/tasks.c ****              * scheduler suspended.  The result here is not necessarily
3503:Middlewares/FreeRTOS/tasks.c ****              * valid. */
3504:Middlewares/FreeRTOS/tasks.c ****             xExpectedIdleTime = prvGetExpectedIdleTime();
3505:Middlewares/FreeRTOS/tasks.c **** 
3506:Middlewares/FreeRTOS/tasks.c ****             if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3507:Middlewares/FreeRTOS/tasks.c ****             {
3508:Middlewares/FreeRTOS/tasks.c ****                 vTaskSuspendAll();
3509:Middlewares/FreeRTOS/tasks.c ****                 {
3510:Middlewares/FreeRTOS/tasks.c ****                     /* Now the scheduler is suspended, the expected idle
3511:Middlewares/FreeRTOS/tasks.c ****                      * time can be sampled again, and this time its value can
3512:Middlewares/FreeRTOS/tasks.c ****                      * be used. */
3513:Middlewares/FreeRTOS/tasks.c ****                     configASSERT( xNextTaskUnblockTime >= xTickCount );
3514:Middlewares/FreeRTOS/tasks.c ****                     xExpectedIdleTime = prvGetExpectedIdleTime();
3515:Middlewares/FreeRTOS/tasks.c **** 
3516:Middlewares/FreeRTOS/tasks.c ****                     /* Define the following macro to set xExpectedIdleTime to 0
3517:Middlewares/FreeRTOS/tasks.c ****                      * if the application does not want
3518:Middlewares/FreeRTOS/tasks.c ****                      * portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3519:Middlewares/FreeRTOS/tasks.c ****                     configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3520:Middlewares/FreeRTOS/tasks.c **** 
3521:Middlewares/FreeRTOS/tasks.c ****                     if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3522:Middlewares/FreeRTOS/tasks.c ****                     {
3523:Middlewares/FreeRTOS/tasks.c ****                         traceLOW_POWER_IDLE_BEGIN();
3524:Middlewares/FreeRTOS/tasks.c ****                         portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3525:Middlewares/FreeRTOS/tasks.c ****                         traceLOW_POWER_IDLE_END();
3526:Middlewares/FreeRTOS/tasks.c ****                     }
3527:Middlewares/FreeRTOS/tasks.c ****                     else
3528:Middlewares/FreeRTOS/tasks.c ****                     {
3529:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
3530:Middlewares/FreeRTOS/tasks.c ****                     }
3531:Middlewares/FreeRTOS/tasks.c ****                 }
3532:Middlewares/FreeRTOS/tasks.c ****                 ( void ) xTaskResumeAll();
3533:Middlewares/FreeRTOS/tasks.c ****             }
3534:Middlewares/FreeRTOS/tasks.c ****             else
3535:Middlewares/FreeRTOS/tasks.c ****             {
3536:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3537:Middlewares/FreeRTOS/tasks.c ****             }
3538:Middlewares/FreeRTOS/tasks.c ****         }
3539:Middlewares/FreeRTOS/tasks.c ****         #endif /* configUSE_TICKLESS_IDLE */
3540:Middlewares/FreeRTOS/tasks.c ****     }
3541:Middlewares/FreeRTOS/tasks.c **** }
3542:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3543:Middlewares/FreeRTOS/tasks.c **** 
3544:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 69


3545:Middlewares/FreeRTOS/tasks.c **** 
3546:Middlewares/FreeRTOS/tasks.c ****     eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3547:Middlewares/FreeRTOS/tasks.c ****     {
3548:Middlewares/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3549:Middlewares/FreeRTOS/tasks.c ****             /* The idle task exists in addition to the application tasks. */
3550:Middlewares/FreeRTOS/tasks.c ****             const UBaseType_t uxNonApplicationTasks = 1;
3551:Middlewares/FreeRTOS/tasks.c ****         #endif /* INCLUDE_vTaskSuspend */
3552:Middlewares/FreeRTOS/tasks.c **** 
3553:Middlewares/FreeRTOS/tasks.c ****         eSleepModeStatus eReturn = eStandardSleep;
3554:Middlewares/FreeRTOS/tasks.c **** 
3555:Middlewares/FreeRTOS/tasks.c ****         /* This function must be called from a critical section. */
3556:Middlewares/FreeRTOS/tasks.c **** 
3557:Middlewares/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3558:Middlewares/FreeRTOS/tasks.c ****         {
3559:Middlewares/FreeRTOS/tasks.c ****             /* A task was made ready while the scheduler was suspended. */
3560:Middlewares/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3561:Middlewares/FreeRTOS/tasks.c ****         }
3562:Middlewares/FreeRTOS/tasks.c ****         else if( xYieldPending != pdFALSE )
3563:Middlewares/FreeRTOS/tasks.c ****         {
3564:Middlewares/FreeRTOS/tasks.c ****             /* A yield was pended while the scheduler was suspended. */
3565:Middlewares/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3566:Middlewares/FreeRTOS/tasks.c ****         }
3567:Middlewares/FreeRTOS/tasks.c ****         else if( xPendedTicks != 0 )
3568:Middlewares/FreeRTOS/tasks.c ****         {
3569:Middlewares/FreeRTOS/tasks.c ****             /* A tick interrupt has already occurred but was held pending
3570:Middlewares/FreeRTOS/tasks.c ****              * because the scheduler is suspended. */
3571:Middlewares/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3572:Middlewares/FreeRTOS/tasks.c ****         }
3573:Middlewares/FreeRTOS/tasks.c **** 
3574:Middlewares/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3575:Middlewares/FreeRTOS/tasks.c ****             else if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - u
3576:Middlewares/FreeRTOS/tasks.c ****             {
3577:Middlewares/FreeRTOS/tasks.c ****                 /* If all the tasks are in the suspended list (which might mean they
3578:Middlewares/FreeRTOS/tasks.c ****                  * have an infinite block time rather than actually being suspended)
3579:Middlewares/FreeRTOS/tasks.c ****                  * then it is safe to turn all clocks off and just wait for external
3580:Middlewares/FreeRTOS/tasks.c ****                  * interrupts. */
3581:Middlewares/FreeRTOS/tasks.c ****                 eReturn = eNoTasksWaitingTimeout;
3582:Middlewares/FreeRTOS/tasks.c ****             }
3583:Middlewares/FreeRTOS/tasks.c ****         #endif /* INCLUDE_vTaskSuspend */
3584:Middlewares/FreeRTOS/tasks.c ****         else
3585:Middlewares/FreeRTOS/tasks.c ****         {
3586:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
3587:Middlewares/FreeRTOS/tasks.c ****         }
3588:Middlewares/FreeRTOS/tasks.c **** 
3589:Middlewares/FreeRTOS/tasks.c ****         return eReturn;
3590:Middlewares/FreeRTOS/tasks.c ****     }
3591:Middlewares/FreeRTOS/tasks.c **** 
3592:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3593:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3594:Middlewares/FreeRTOS/tasks.c **** 
3595:Middlewares/FreeRTOS/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3596:Middlewares/FreeRTOS/tasks.c **** 
3597:Middlewares/FreeRTOS/tasks.c ****     void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet,
3598:Middlewares/FreeRTOS/tasks.c ****                                             BaseType_t xIndex,
3599:Middlewares/FreeRTOS/tasks.c ****                                             void * pvValue )
3600:Middlewares/FreeRTOS/tasks.c ****     {
3601:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 70


3602:Middlewares/FreeRTOS/tasks.c **** 
3603:Middlewares/FreeRTOS/tasks.c ****         if( ( xIndex >= 0 ) &&
3604:Middlewares/FreeRTOS/tasks.c ****             ( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS ) )
3605:Middlewares/FreeRTOS/tasks.c ****         {
3606:Middlewares/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSet );
3607:Middlewares/FreeRTOS/tasks.c ****             configASSERT( pxTCB != NULL );
3608:Middlewares/FreeRTOS/tasks.c ****             pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3609:Middlewares/FreeRTOS/tasks.c ****         }
3610:Middlewares/FreeRTOS/tasks.c ****     }
3611:Middlewares/FreeRTOS/tasks.c **** 
3612:Middlewares/FreeRTOS/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3613:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3614:Middlewares/FreeRTOS/tasks.c **** 
3615:Middlewares/FreeRTOS/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3616:Middlewares/FreeRTOS/tasks.c **** 
3617:Middlewares/FreeRTOS/tasks.c ****     void * pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery,
3618:Middlewares/FreeRTOS/tasks.c ****                                                BaseType_t xIndex )
3619:Middlewares/FreeRTOS/tasks.c ****     {
3620:Middlewares/FreeRTOS/tasks.c ****         void * pvReturn = NULL;
3621:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3622:Middlewares/FreeRTOS/tasks.c **** 
3623:Middlewares/FreeRTOS/tasks.c ****         if( ( xIndex >= 0 ) &&
3624:Middlewares/FreeRTOS/tasks.c ****             ( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS ) )
3625:Middlewares/FreeRTOS/tasks.c ****         {
3626:Middlewares/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3627:Middlewares/FreeRTOS/tasks.c ****             pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3628:Middlewares/FreeRTOS/tasks.c ****         }
3629:Middlewares/FreeRTOS/tasks.c ****         else
3630:Middlewares/FreeRTOS/tasks.c ****         {
3631:Middlewares/FreeRTOS/tasks.c ****             pvReturn = NULL;
3632:Middlewares/FreeRTOS/tasks.c ****         }
3633:Middlewares/FreeRTOS/tasks.c **** 
3634:Middlewares/FreeRTOS/tasks.c ****         return pvReturn;
3635:Middlewares/FreeRTOS/tasks.c ****     }
3636:Middlewares/FreeRTOS/tasks.c **** 
3637:Middlewares/FreeRTOS/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3638:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3639:Middlewares/FreeRTOS/tasks.c **** 
3640:Middlewares/FreeRTOS/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3641:Middlewares/FreeRTOS/tasks.c **** 
3642:Middlewares/FreeRTOS/tasks.c ****     void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify,
3643:Middlewares/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions )
3644:Middlewares/FreeRTOS/tasks.c ****     {
3645:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3646:Middlewares/FreeRTOS/tasks.c **** 
3647:Middlewares/FreeRTOS/tasks.c ****         /* If null is passed in here then we are modifying the MPU settings of
3648:Middlewares/FreeRTOS/tasks.c ****          * the calling task. */
3649:Middlewares/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTaskToModify );
3650:Middlewares/FreeRTOS/tasks.c **** 
3651:Middlewares/FreeRTOS/tasks.c ****         vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3652:Middlewares/FreeRTOS/tasks.c ****     }
3653:Middlewares/FreeRTOS/tasks.c **** 
3654:Middlewares/FreeRTOS/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3655:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3656:Middlewares/FreeRTOS/tasks.c **** 
3657:Middlewares/FreeRTOS/tasks.c **** static void prvInitialiseTaskLists( void )
3658:Middlewares/FreeRTOS/tasks.c **** {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 71


3659:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;
3660:Middlewares/FreeRTOS/tasks.c **** 
3661:Middlewares/FreeRTOS/tasks.c ****     for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPrio
3662:Middlewares/FreeRTOS/tasks.c ****     {
3663:Middlewares/FreeRTOS/tasks.c ****         vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3664:Middlewares/FreeRTOS/tasks.c ****     }
3665:Middlewares/FreeRTOS/tasks.c **** 
3666:Middlewares/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList1 );
3667:Middlewares/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList2 );
3668:Middlewares/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
3669:Middlewares/FreeRTOS/tasks.c **** 
3670:Middlewares/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3671:Middlewares/FreeRTOS/tasks.c ****     {
3672:Middlewares/FreeRTOS/tasks.c ****         vListInitialise( &xTasksWaitingTermination );
3673:Middlewares/FreeRTOS/tasks.c ****     }
3674:Middlewares/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3675:Middlewares/FreeRTOS/tasks.c **** 
3676:Middlewares/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
3677:Middlewares/FreeRTOS/tasks.c ****     {
3678:Middlewares/FreeRTOS/tasks.c ****         vListInitialise( &xSuspendedTaskList );
3679:Middlewares/FreeRTOS/tasks.c ****     }
3680:Middlewares/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
3681:Middlewares/FreeRTOS/tasks.c **** 
3682:Middlewares/FreeRTOS/tasks.c ****     /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3683:Middlewares/FreeRTOS/tasks.c ****      * using list2. */
3684:Middlewares/FreeRTOS/tasks.c ****     pxDelayedTaskList = &xDelayedTaskList1;
3685:Middlewares/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
3686:Middlewares/FreeRTOS/tasks.c **** }
3687:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3688:Middlewares/FreeRTOS/tasks.c **** 
3689:Middlewares/FreeRTOS/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3690:Middlewares/FreeRTOS/tasks.c **** {
3691:Middlewares/FreeRTOS/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3692:Middlewares/FreeRTOS/tasks.c **** 
3693:Middlewares/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3694:Middlewares/FreeRTOS/tasks.c ****     {
3695:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3696:Middlewares/FreeRTOS/tasks.c **** 
3697:Middlewares/FreeRTOS/tasks.c ****         /* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3698:Middlewares/FreeRTOS/tasks.c ****          * being called too often in the idle task. */
3699:Middlewares/FreeRTOS/tasks.c ****         while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3700:Middlewares/FreeRTOS/tasks.c ****         {
3701:Middlewares/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
3702:Middlewares/FreeRTOS/tasks.c ****             {
3703:Middlewares/FreeRTOS/tasks.c ****                 pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079
3704:Middlewares/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3705:Middlewares/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
3706:Middlewares/FreeRTOS/tasks.c ****                 --uxDeletedTasksWaitingCleanUp;
3707:Middlewares/FreeRTOS/tasks.c ****             }
3708:Middlewares/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
3709:Middlewares/FreeRTOS/tasks.c **** 
3710:Middlewares/FreeRTOS/tasks.c ****             prvDeleteTCB( pxTCB );
3711:Middlewares/FreeRTOS/tasks.c ****         }
3712:Middlewares/FreeRTOS/tasks.c ****     }
3713:Middlewares/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3714:Middlewares/FreeRTOS/tasks.c **** }
3715:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 72


3716:Middlewares/FreeRTOS/tasks.c **** 
3717:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3718:Middlewares/FreeRTOS/tasks.c **** 
3719:Middlewares/FreeRTOS/tasks.c ****     void vTaskGetInfo( TaskHandle_t xTask,
3720:Middlewares/FreeRTOS/tasks.c ****                        TaskStatus_t * pxTaskStatus,
3721:Middlewares/FreeRTOS/tasks.c ****                        BaseType_t xGetFreeStackSpace,
3722:Middlewares/FreeRTOS/tasks.c ****                        eTaskState eState )
3723:Middlewares/FreeRTOS/tasks.c ****     {
3724:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3725:Middlewares/FreeRTOS/tasks.c **** 
3726:Middlewares/FreeRTOS/tasks.c ****         /* xTask is NULL then get the state of the calling task. */
3727:Middlewares/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3728:Middlewares/FreeRTOS/tasks.c **** 
3729:Middlewares/FreeRTOS/tasks.c ****         pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3730:Middlewares/FreeRTOS/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
3731:Middlewares/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3732:Middlewares/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
3733:Middlewares/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
3734:Middlewares/FreeRTOS/tasks.c ****             pxTaskStatus->pxTopOfStack = pxTCB->pxTopOfStack;
3735:Middlewares/FreeRTOS/tasks.c ****             pxTaskStatus->pxEndOfStack = pxTCB->pxEndOfStack;
3736:Middlewares/FreeRTOS/tasks.c ****         #endif
3737:Middlewares/FreeRTOS/tasks.c ****         pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3738:Middlewares/FreeRTOS/tasks.c **** 
3739:Middlewares/FreeRTOS/tasks.c ****         #if ( configUSE_MUTEXES == 1 )
3740:Middlewares/FreeRTOS/tasks.c ****         {
3741:Middlewares/FreeRTOS/tasks.c ****             pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3742:Middlewares/FreeRTOS/tasks.c ****         }
3743:Middlewares/FreeRTOS/tasks.c ****         #else
3744:Middlewares/FreeRTOS/tasks.c ****         {
3745:Middlewares/FreeRTOS/tasks.c ****             pxTaskStatus->uxBasePriority = 0;
3746:Middlewares/FreeRTOS/tasks.c ****         }
3747:Middlewares/FreeRTOS/tasks.c ****         #endif
3748:Middlewares/FreeRTOS/tasks.c **** 
3749:Middlewares/FreeRTOS/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3750:Middlewares/FreeRTOS/tasks.c ****         {
3751:Middlewares/FreeRTOS/tasks.c ****             pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3752:Middlewares/FreeRTOS/tasks.c ****         }
3753:Middlewares/FreeRTOS/tasks.c ****         #else
3754:Middlewares/FreeRTOS/tasks.c ****         {
3755:Middlewares/FreeRTOS/tasks.c ****             pxTaskStatus->ulRunTimeCounter = ( configRUN_TIME_COUNTER_TYPE ) 0;
3756:Middlewares/FreeRTOS/tasks.c ****         }
3757:Middlewares/FreeRTOS/tasks.c ****         #endif
3758:Middlewares/FreeRTOS/tasks.c **** 
3759:Middlewares/FreeRTOS/tasks.c ****         /* Obtaining the task state is a little fiddly, so is only done if the
3760:Middlewares/FreeRTOS/tasks.c ****          * value of eState passed into this function is eInvalid - otherwise the
3761:Middlewares/FreeRTOS/tasks.c ****          * state is just set to whatever is passed in. */
3762:Middlewares/FreeRTOS/tasks.c ****         if( eState != eInvalid )
3763:Middlewares/FreeRTOS/tasks.c ****         {
3764:Middlewares/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
3765:Middlewares/FreeRTOS/tasks.c ****             {
3766:Middlewares/FreeRTOS/tasks.c ****                 pxTaskStatus->eCurrentState = eRunning;
3767:Middlewares/FreeRTOS/tasks.c ****             }
3768:Middlewares/FreeRTOS/tasks.c ****             else
3769:Middlewares/FreeRTOS/tasks.c ****             {
3770:Middlewares/FreeRTOS/tasks.c ****                 pxTaskStatus->eCurrentState = eState;
3771:Middlewares/FreeRTOS/tasks.c **** 
3772:Middlewares/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 73


3773:Middlewares/FreeRTOS/tasks.c ****                 {
3774:Middlewares/FreeRTOS/tasks.c ****                     /* If the task is in the suspended list then there is a
3775:Middlewares/FreeRTOS/tasks.c ****                      *  chance it is actually just blocked indefinitely - so really
3776:Middlewares/FreeRTOS/tasks.c ****                      *  it should be reported as being in the Blocked state. */
3777:Middlewares/FreeRTOS/tasks.c ****                     if( eState == eSuspended )
3778:Middlewares/FreeRTOS/tasks.c ****                     {
3779:Middlewares/FreeRTOS/tasks.c ****                         vTaskSuspendAll();
3780:Middlewares/FreeRTOS/tasks.c ****                         {
3781:Middlewares/FreeRTOS/tasks.c ****                             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3782:Middlewares/FreeRTOS/tasks.c ****                             {
3783:Middlewares/FreeRTOS/tasks.c ****                                 pxTaskStatus->eCurrentState = eBlocked;
3784:Middlewares/FreeRTOS/tasks.c ****                             }
3785:Middlewares/FreeRTOS/tasks.c ****                         }
3786:Middlewares/FreeRTOS/tasks.c ****                         ( void ) xTaskResumeAll();
3787:Middlewares/FreeRTOS/tasks.c ****                     }
3788:Middlewares/FreeRTOS/tasks.c ****                 }
3789:Middlewares/FreeRTOS/tasks.c ****                 #endif /* INCLUDE_vTaskSuspend */
3790:Middlewares/FreeRTOS/tasks.c ****             }
3791:Middlewares/FreeRTOS/tasks.c ****         }
3792:Middlewares/FreeRTOS/tasks.c ****         else
3793:Middlewares/FreeRTOS/tasks.c ****         {
3794:Middlewares/FreeRTOS/tasks.c ****             pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3795:Middlewares/FreeRTOS/tasks.c ****         }
3796:Middlewares/FreeRTOS/tasks.c **** 
3797:Middlewares/FreeRTOS/tasks.c ****         /* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3798:Middlewares/FreeRTOS/tasks.c ****          * parameter is provided to allow it to be skipped. */
3799:Middlewares/FreeRTOS/tasks.c ****         if( xGetFreeStackSpace != pdFALSE )
3800:Middlewares/FreeRTOS/tasks.c ****         {
3801:Middlewares/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH > 0 )
3802:Middlewares/FreeRTOS/tasks.c ****             {
3803:Middlewares/FreeRTOS/tasks.c ****                 pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTC
3804:Middlewares/FreeRTOS/tasks.c ****             }
3805:Middlewares/FreeRTOS/tasks.c ****             #else
3806:Middlewares/FreeRTOS/tasks.c ****             {
3807:Middlewares/FreeRTOS/tasks.c ****                 pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTC
3808:Middlewares/FreeRTOS/tasks.c ****             }
3809:Middlewares/FreeRTOS/tasks.c ****             #endif
3810:Middlewares/FreeRTOS/tasks.c ****         }
3811:Middlewares/FreeRTOS/tasks.c ****         else
3812:Middlewares/FreeRTOS/tasks.c ****         {
3813:Middlewares/FreeRTOS/tasks.c ****             pxTaskStatus->usStackHighWaterMark = 0;
3814:Middlewares/FreeRTOS/tasks.c ****         }
3815:Middlewares/FreeRTOS/tasks.c ****     }
3816:Middlewares/FreeRTOS/tasks.c **** 
3817:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3818:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3819:Middlewares/FreeRTOS/tasks.c **** 
3820:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3821:Middlewares/FreeRTOS/tasks.c **** 
3822:Middlewares/FreeRTOS/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
3823:Middlewares/FreeRTOS/tasks.c ****                                                      List_t * pxList,
3824:Middlewares/FreeRTOS/tasks.c ****                                                      eTaskState eState )
3825:Middlewares/FreeRTOS/tasks.c ****     {
3826:Middlewares/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB;
3827:Middlewares/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxFirstTCB;
3828:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0;
3829:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 74


3830:Middlewares/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3831:Middlewares/FreeRTOS/tasks.c ****         {
3832:Middlewares/FreeRTOS/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
3833:Middlewares/FreeRTOS/tasks.c **** 
3834:Middlewares/FreeRTOS/tasks.c ****             /* Populate an TaskStatus_t structure within the
3835:Middlewares/FreeRTOS/tasks.c ****              * pxTaskStatusArray array for each task that is referenced from
3836:Middlewares/FreeRTOS/tasks.c ****              * pxList.  See the definition of TaskStatus_t in task.h for the
3837:Middlewares/FreeRTOS/tasks.c ****              * meaning of each TaskStatus_t structure member. */
3838:Middlewares/FreeRTOS/tasks.c ****             do
3839:Middlewares/FreeRTOS/tasks.c ****             {
3840:Middlewares/FreeRTOS/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
3841:Middlewares/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
3842:Middlewares/FreeRTOS/tasks.c ****                 uxTask++;
3843:Middlewares/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
3844:Middlewares/FreeRTOS/tasks.c ****         }
3845:Middlewares/FreeRTOS/tasks.c ****         else
3846:Middlewares/FreeRTOS/tasks.c ****         {
3847:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
3848:Middlewares/FreeRTOS/tasks.c ****         }
3849:Middlewares/FreeRTOS/tasks.c **** 
3850:Middlewares/FreeRTOS/tasks.c ****         return uxTask;
3851:Middlewares/FreeRTOS/tasks.c ****     }
3852:Middlewares/FreeRTOS/tasks.c **** 
3853:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3854:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3855:Middlewares/FreeRTOS/tasks.c **** 
3856:Middlewares/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3857:Middlewares/FreeRTOS/tasks.c **** 
3858:Middlewares/FreeRTOS/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3859:Middlewares/FreeRTOS/tasks.c ****     {
3860:Middlewares/FreeRTOS/tasks.c ****         uint32_t ulCount = 0U;
3861:Middlewares/FreeRTOS/tasks.c **** 
3862:Middlewares/FreeRTOS/tasks.c ****         while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3863:Middlewares/FreeRTOS/tasks.c ****         {
3864:Middlewares/FreeRTOS/tasks.c ****             pucStackByte -= portSTACK_GROWTH;
3865:Middlewares/FreeRTOS/tasks.c ****             ulCount++;
3866:Middlewares/FreeRTOS/tasks.c ****         }
3867:Middlewares/FreeRTOS/tasks.c **** 
3868:Middlewares/FreeRTOS/tasks.c ****         ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on sma
3869:Middlewares/FreeRTOS/tasks.c **** 
3870:Middlewares/FreeRTOS/tasks.c ****         return ( configSTACK_DEPTH_TYPE ) ulCount;
3871:Middlewares/FreeRTOS/tasks.c ****     }
3872:Middlewares/FreeRTOS/tasks.c **** 
3873:Middlewares/FreeRTOS/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3874:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3875:Middlewares/FreeRTOS/tasks.c **** 
3876:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3877:Middlewares/FreeRTOS/tasks.c **** 
3878:Middlewares/FreeRTOS/tasks.c **** /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3879:Middlewares/FreeRTOS/tasks.c ****  * same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3880:Middlewares/FreeRTOS/tasks.c ****  * user to determine the return type.  It gets around the problem of the value
3881:Middlewares/FreeRTOS/tasks.c ****  * overflowing on 8-bit types without breaking backward compatibility for
3882:Middlewares/FreeRTOS/tasks.c ****  * applications that expect an 8-bit return type. */
3883:Middlewares/FreeRTOS/tasks.c ****     configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3884:Middlewares/FreeRTOS/tasks.c ****     {
3885:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3886:Middlewares/FreeRTOS/tasks.c ****         uint8_t * pucEndOfStack;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 75


3887:Middlewares/FreeRTOS/tasks.c ****         configSTACK_DEPTH_TYPE uxReturn;
3888:Middlewares/FreeRTOS/tasks.c **** 
3889:Middlewares/FreeRTOS/tasks.c ****         /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3890:Middlewares/FreeRTOS/tasks.c ****          * the same except for their return type.  Using configSTACK_DEPTH_TYPE
3891:Middlewares/FreeRTOS/tasks.c ****          * allows the user to determine the return type.  It gets around the
3892:Middlewares/FreeRTOS/tasks.c ****          * problem of the value overflowing on 8-bit types without breaking
3893:Middlewares/FreeRTOS/tasks.c ****          * backward compatibility for applications that expect an 8-bit return
3894:Middlewares/FreeRTOS/tasks.c ****          * type. */
3895:Middlewares/FreeRTOS/tasks.c **** 
3896:Middlewares/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3897:Middlewares/FreeRTOS/tasks.c **** 
3898:Middlewares/FreeRTOS/tasks.c ****         #if portSTACK_GROWTH < 0
3899:Middlewares/FreeRTOS/tasks.c ****         {
3900:Middlewares/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3901:Middlewares/FreeRTOS/tasks.c ****         }
3902:Middlewares/FreeRTOS/tasks.c ****         #else
3903:Middlewares/FreeRTOS/tasks.c ****         {
3904:Middlewares/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3905:Middlewares/FreeRTOS/tasks.c ****         }
3906:Middlewares/FreeRTOS/tasks.c ****         #endif
3907:Middlewares/FreeRTOS/tasks.c **** 
3908:Middlewares/FreeRTOS/tasks.c ****         uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3909:Middlewares/FreeRTOS/tasks.c **** 
3910:Middlewares/FreeRTOS/tasks.c ****         return uxReturn;
3911:Middlewares/FreeRTOS/tasks.c ****     }
3912:Middlewares/FreeRTOS/tasks.c **** 
3913:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3914:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3915:Middlewares/FreeRTOS/tasks.c **** 
3916:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3917:Middlewares/FreeRTOS/tasks.c **** 
3918:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3919:Middlewares/FreeRTOS/tasks.c ****     {
3920:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3921:Middlewares/FreeRTOS/tasks.c ****         uint8_t * pucEndOfStack;
3922:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
3923:Middlewares/FreeRTOS/tasks.c **** 
3924:Middlewares/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3925:Middlewares/FreeRTOS/tasks.c **** 
3926:Middlewares/FreeRTOS/tasks.c ****         #if portSTACK_GROWTH < 0
3927:Middlewares/FreeRTOS/tasks.c ****         {
3928:Middlewares/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3929:Middlewares/FreeRTOS/tasks.c ****         }
3930:Middlewares/FreeRTOS/tasks.c ****         #else
3931:Middlewares/FreeRTOS/tasks.c ****         {
3932:Middlewares/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3933:Middlewares/FreeRTOS/tasks.c ****         }
3934:Middlewares/FreeRTOS/tasks.c ****         #endif
3935:Middlewares/FreeRTOS/tasks.c **** 
3936:Middlewares/FreeRTOS/tasks.c ****         uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3937:Middlewares/FreeRTOS/tasks.c **** 
3938:Middlewares/FreeRTOS/tasks.c ****         return uxReturn;
3939:Middlewares/FreeRTOS/tasks.c ****     }
3940:Middlewares/FreeRTOS/tasks.c **** 
3941:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3942:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3943:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 76


3944:Middlewares/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3945:Middlewares/FreeRTOS/tasks.c **** 
3946:Middlewares/FreeRTOS/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB )
3947:Middlewares/FreeRTOS/tasks.c ****     {
3948:Middlewares/FreeRTOS/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
3949:Middlewares/FreeRTOS/tasks.c ****          * above the vPortFree() calls.  The call is also used by ports/demos that
3950:Middlewares/FreeRTOS/tasks.c ****          * want to allocate and clean RAM statically. */
3951:Middlewares/FreeRTOS/tasks.c ****         portCLEAN_UP_TCB( pxTCB );
3952:Middlewares/FreeRTOS/tasks.c **** 
3953:Middlewares/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
3954:Middlewares/FreeRTOS/tasks.c ****         {
3955:Middlewares/FreeRTOS/tasks.c ****             /* Free up the memory allocated for the task's TLS Block. */
3956:Middlewares/FreeRTOS/tasks.c ****             configDEINIT_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
3957:Middlewares/FreeRTOS/tasks.c ****         }
3958:Middlewares/FreeRTOS/tasks.c ****         #endif
3959:Middlewares/FreeRTOS/tasks.c **** 
3960:Middlewares/FreeRTOS/tasks.c ****         #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 )
3961:Middlewares/FreeRTOS/tasks.c ****         {
3962:Middlewares/FreeRTOS/tasks.c ****             /* The task can only have been allocated dynamically - free both
3963:Middlewares/FreeRTOS/tasks.c ****              * the stack and TCB. */
3964:Middlewares/FreeRTOS/tasks.c ****             vPortFreeStack( pxTCB->pxStack );
3965:Middlewares/FreeRTOS/tasks.c ****             vPortFree( pxTCB );
3966:Middlewares/FreeRTOS/tasks.c ****         }
3967:Middlewares/FreeRTOS/tasks.c ****         #elif ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been
3968:Middlewares/FreeRTOS/tasks.c ****         {
3969:Middlewares/FreeRTOS/tasks.c ****             /* The task could have been allocated statically or dynamically, so
3970:Middlewares/FreeRTOS/tasks.c ****              * check what was statically allocated before trying to free the
3971:Middlewares/FreeRTOS/tasks.c ****              * memory. */
3972:Middlewares/FreeRTOS/tasks.c ****             if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3973:Middlewares/FreeRTOS/tasks.c ****             {
3974:Middlewares/FreeRTOS/tasks.c ****                 /* Both the stack and TCB were allocated dynamically, so both
3975:Middlewares/FreeRTOS/tasks.c ****                  * must be freed. */
3976:Middlewares/FreeRTOS/tasks.c ****                 vPortFreeStack( pxTCB->pxStack );
3977:Middlewares/FreeRTOS/tasks.c ****                 vPortFree( pxTCB );
3978:Middlewares/FreeRTOS/tasks.c ****             }
3979:Middlewares/FreeRTOS/tasks.c ****             else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3980:Middlewares/FreeRTOS/tasks.c ****             {
3981:Middlewares/FreeRTOS/tasks.c ****                 /* Only the stack was statically allocated, so the TCB is the
3982:Middlewares/FreeRTOS/tasks.c ****                  * only memory that must be freed. */
3983:Middlewares/FreeRTOS/tasks.c ****                 vPortFree( pxTCB );
3984:Middlewares/FreeRTOS/tasks.c ****             }
3985:Middlewares/FreeRTOS/tasks.c ****             else
3986:Middlewares/FreeRTOS/tasks.c ****             {
3987:Middlewares/FreeRTOS/tasks.c ****                 /* Neither the stack nor the TCB were allocated dynamically, so
3988:Middlewares/FreeRTOS/tasks.c ****                  * nothing needs to be freed. */
3989:Middlewares/FreeRTOS/tasks.c ****                 configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB
3990:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3991:Middlewares/FreeRTOS/tasks.c ****             }
3992:Middlewares/FreeRTOS/tasks.c ****         }
3993:Middlewares/FreeRTOS/tasks.c ****         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3994:Middlewares/FreeRTOS/tasks.c ****     }
3995:Middlewares/FreeRTOS/tasks.c **** 
3996:Middlewares/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3997:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3998:Middlewares/FreeRTOS/tasks.c **** 
3999:Middlewares/FreeRTOS/tasks.c **** static void prvResetNextTaskUnblockTime( void )
4000:Middlewares/FreeRTOS/tasks.c **** {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 77


 127              		.loc 1 4000 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
4001:Middlewares/FreeRTOS/tasks.c ****     if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 132              		.loc 1 4001 5 view .LVU31
 133              		.loc 1 4001 9 is_stmt 0 view .LVU32
 134 0000 074B     		ldr	r3, .L15
 135 0002 1B68     		ldr	r3, [r3]
 136 0004 1B68     		ldr	r3, [r3]
 137              		.loc 1 4001 7 view .LVU33
 138 0006 23B9     		cbnz	r3, .L13
4002:Middlewares/FreeRTOS/tasks.c ****     {
4003:Middlewares/FreeRTOS/tasks.c ****         /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
4004:Middlewares/FreeRTOS/tasks.c ****          * the maximum possible value so it is  extremely unlikely that the
4005:Middlewares/FreeRTOS/tasks.c ****          * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
4006:Middlewares/FreeRTOS/tasks.c ****          * there is an item in the delayed list. */
4007:Middlewares/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
 139              		.loc 1 4007 9 is_stmt 1 view .LVU34
 140              		.loc 1 4007 30 is_stmt 0 view .LVU35
 141 0008 064B     		ldr	r3, .L15+4
 142 000a 4FF0FF32 		mov	r2, #-1
 143 000e 1A60     		str	r2, [r3]
 144 0010 7047     		bx	lr
 145              	.L13:
4008:Middlewares/FreeRTOS/tasks.c ****     }
4009:Middlewares/FreeRTOS/tasks.c ****     else
4010:Middlewares/FreeRTOS/tasks.c ****     {
4011:Middlewares/FreeRTOS/tasks.c ****         /* The new current delayed list is not empty, get the value of
4012:Middlewares/FreeRTOS/tasks.c ****          * the item at the head of the delayed list.  This is the time at
4013:Middlewares/FreeRTOS/tasks.c ****          * which the task at the head of the delayed list should be removed
4014:Middlewares/FreeRTOS/tasks.c ****          * from the Blocked state. */
4015:Middlewares/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 146              		.loc 1 4015 9 is_stmt 1 view .LVU36
 147              		.loc 1 4015 32 is_stmt 0 view .LVU37
 148 0012 034B     		ldr	r3, .L15
 149 0014 1B68     		ldr	r3, [r3]
 150 0016 DB68     		ldr	r3, [r3, #12]
 151 0018 1A68     		ldr	r2, [r3]
 152              		.loc 1 4015 30 view .LVU38
 153 001a 024B     		ldr	r3, .L15+4
 154 001c 1A60     		str	r2, [r3]
4016:Middlewares/FreeRTOS/tasks.c ****     }
4017:Middlewares/FreeRTOS/tasks.c **** }
 155              		.loc 1 4017 1 view .LVU39
 156 001e 7047     		bx	lr
 157              	.L16:
 158              		.align	2
 159              	.L15:
 160 0020 00000000 		.word	pxDelayedTaskList
 161 0024 00000000 		.word	xNextTaskUnblockTime
 162              		.cfi_endproc
 163              	.LFE42:
 165              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 166              		.align	1
 167              		.syntax unified
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 78


 168              		.thumb
 169              		.thumb_func
 171              	prvInitialiseNewTask:
 172              	.LVL9:
 173              	.LFB7:
 824:Middlewares/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 174              		.loc 1 824 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 16, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 824:Middlewares/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 178              		.loc 1 824 1 is_stmt 0 view .LVU41
 179 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 180              	.LCFI0:
 181              		.cfi_def_cfa_offset 24
 182              		.cfi_offset 4, -24
 183              		.cfi_offset 5, -20
 184              		.cfi_offset 6, -16
 185              		.cfi_offset 7, -12
 186              		.cfi_offset 8, -8
 187              		.cfi_offset 14, -4
 188 0004 0746     		mov	r7, r0
 189 0006 9846     		mov	r8, r3
 190 0008 069E     		ldr	r6, [sp, #24]
 191 000a 089C     		ldr	r4, [sp, #32]
 825:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t x;
 192              		.loc 1 825 5 is_stmt 1 view .LVU42
 826:Middlewares/FreeRTOS/tasks.c **** 
 193              		.loc 1 826 5 view .LVU43
 857:Middlewares/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 194              		.loc 1 857 9 view .LVU44
 857:Middlewares/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 195              		.loc 1 857 35 is_stmt 0 view .LVU45
 196 000c 206B     		ldr	r0, [r4, #48]
 197              	.LVL10:
 857:Middlewares/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 198              		.loc 1 857 44 view .LVU46
 199 000e 02F18043 		add	r3, r2, #1073741824
 200              	.LVL11:
 857:Middlewares/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 201              		.loc 1 857 44 view .LVU47
 202 0012 013B     		subs	r3, r3, #1
 857:Middlewares/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 203              		.loc 1 857 22 view .LVU48
 204 0014 00EB8300 		add	r0, r0, r3, lsl #2
 205              	.LVL12:
 858:Middlewares/FreeRTOS/tasks.c **** 
 206              		.loc 1 858 9 is_stmt 1 view .LVU49
 858:Middlewares/FreeRTOS/tasks.c **** 
 207              		.loc 1 858 87 is_stmt 0 view .LVU50
 208 0018 20F00705 		bic	r5, r0, #7
 209              	.LVL13:
 861:Middlewares/FreeRTOS/tasks.c **** 
 210              		.loc 1 861 9 is_stmt 1 view .LVU51
 861:Middlewares/FreeRTOS/tasks.c **** 
 211              		.loc 1 861 130 view .LVU52
 885:Middlewares/FreeRTOS/tasks.c ****     {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 79


 212              		.loc 1 885 5 view .LVU53
 885:Middlewares/FreeRTOS/tasks.c ****     {
 213              		.loc 1 885 7 is_stmt 0 view .LVU54
 214 001c 71B1     		cbz	r1, .L19
 215 001e 0B46     		mov	r3, r1
 887:Middlewares/FreeRTOS/tasks.c ****         {
 216              		.loc 1 887 16 view .LVU55
 217 0020 0022     		movs	r2, #0
 218              	.LVL14:
 219              	.L18:
 887:Middlewares/FreeRTOS/tasks.c ****         {
 220              		.loc 1 887 39 is_stmt 1 discriminator 1 view .LVU56
 221 0022 0F2A     		cmp	r2, #15
 222 0024 07D8     		bhi	.L20
 889:Middlewares/FreeRTOS/tasks.c **** 
 223              		.loc 1 889 13 view .LVU57
 889:Middlewares/FreeRTOS/tasks.c **** 
 224              		.loc 1 889 47 is_stmt 0 view .LVU58
 225 0026 995C     		ldrb	r1, [r3, r2]	@ zero_extendqisi2
 889:Middlewares/FreeRTOS/tasks.c **** 
 226              		.loc 1 889 39 view .LVU59
 227 0028 04EB020C 		add	ip, r4, r2
 228 002c 8CF83410 		strb	r1, [ip, #52]
 894:Middlewares/FreeRTOS/tasks.c ****             {
 229              		.loc 1 894 13 is_stmt 1 view .LVU60
 894:Middlewares/FreeRTOS/tasks.c ****             {
 230              		.loc 1 894 15 is_stmt 0 view .LVU61
 231 0030 09B1     		cbz	r1, .L20
 900:Middlewares/FreeRTOS/tasks.c ****             }
 232              		.loc 1 900 41 is_stmt 1 discriminator 2 view .LVU62
 887:Middlewares/FreeRTOS/tasks.c ****         {
 233              		.loc 1 887 83 discriminator 2 view .LVU63
 234 0032 0132     		adds	r2, r2, #1
 235              	.LVL15:
 887:Middlewares/FreeRTOS/tasks.c ****         {
 236              		.loc 1 887 83 is_stmt 0 discriminator 2 view .LVU64
 237 0034 F5E7     		b	.L18
 238              	.L20:
 906:Middlewares/FreeRTOS/tasks.c ****     }
 239              		.loc 1 906 9 is_stmt 1 view .LVU65
 906:Middlewares/FreeRTOS/tasks.c ****     }
 240              		.loc 1 906 61 is_stmt 0 view .LVU66
 241 0036 0023     		movs	r3, #0
 242              	.LVL16:
 906:Middlewares/FreeRTOS/tasks.c ****     }
 243              		.loc 1 906 61 view .LVU67
 244 0038 84F84330 		strb	r3, [r4, #67]
 245              	.LVL17:
 246              	.L19:
 910:Middlewares/FreeRTOS/tasks.c ****     }
 247              		.loc 1 910 33 is_stmt 1 view .LVU68
 914:Middlewares/FreeRTOS/tasks.c **** 
 248              		.loc 1 914 5 view .LVU69
 249 003c 062E     		cmp	r6, #6
 250 003e 08D9     		bls	.L22
 914:Middlewares/FreeRTOS/tasks.c **** 
 251              		.loc 1 914 5 view .LVU70
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 80


 252              	.LBB161:
 253              	.LBI161:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 254              		.loc 2 196 34 view .LVU71
 255              	.LBB162:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 256              		.loc 2 198 9 view .LVU72
 257              		.loc 2 200 9 view .LVU73
 258              		.syntax unified
 259              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 260 0040 4FF01003 			mov r3, #16												
 261 0044 83F31188 		msr basepri, r3											
 262 0048 BFF36F8F 		isb														
 263 004c BFF34F8F 		dsb														
 264              	
 265              	@ 0 "" 2
 266              	.LVL18:
 267              		.thumb
 268              		.syntax unified
 269              	.L23:
 270              		.loc 2 200 9 is_stmt 0 view .LVU74
 271              	.LBE162:
 272              	.LBE161:
 914:Middlewares/FreeRTOS/tasks.c **** 
 273              		.loc 1 914 5 is_stmt 1 discriminator 2 view .LVU75
 914:Middlewares/FreeRTOS/tasks.c **** 
 274              		.loc 1 914 5 discriminator 2 view .LVU76
 275 0050 FEE7     		b	.L23
 276              	.L22:
 914:Middlewares/FreeRTOS/tasks.c **** 
 277              		.loc 1 914 54 view .LVU77
 916:Middlewares/FreeRTOS/tasks.c ****     {
 278              		.loc 1 916 5 view .LVU78
 279              	.LVL19:
 922:Middlewares/FreeRTOS/tasks.c ****     }
 280              		.loc 1 922 33 view .LVU79
 925:Middlewares/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 281              		.loc 1 925 5 view .LVU80
 925:Middlewares/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 282              		.loc 1 925 26 is_stmt 0 view .LVU81
 283 0052 E662     		str	r6, [r4, #44]
 928:Middlewares/FreeRTOS/tasks.c ****     }
 284              		.loc 1 928 9 is_stmt 1 view .LVU82
 928:Middlewares/FreeRTOS/tasks.c ****     }
 285              		.loc 1 928 34 is_stmt 0 view .LVU83
 286 0054 6664     		str	r6, [r4, #68]
 932:Middlewares/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 287              		.loc 1 932 5 is_stmt 1 view .LVU84
 288 0056 201D     		adds	r0, r4, #4
 289 0058 FFF7FEFF 		bl	vListInitialiseItem
 290              	.LVL20:
 933:Middlewares/FreeRTOS/tasks.c **** 
 291              		.loc 1 933 5 view .LVU85
 292 005c 04F11800 		add	r0, r4, #24
 293 0060 FFF7FEFF 		bl	vListInitialiseItem
 294              	.LVL21:
 937:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 81


 295              		.loc 1 937 5 view .LVU86
 296 0064 2461     		str	r4, [r4, #16]
 940:Middlewares/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 297              		.loc 1 940 5 view .LVU87
 298 0066 C6F10706 		rsb	r6, r6, #7
 299              	.LVL22:
 940:Middlewares/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 300              		.loc 1 940 5 is_stmt 0 view .LVU88
 301 006a A661     		str	r6, [r4, #24]
 941:Middlewares/FreeRTOS/tasks.c **** 
 302              		.loc 1 941 5 is_stmt 1 view .LVU89
 303 006c 6462     		str	r4, [r4, #36]
 950:Middlewares/FreeRTOS/tasks.c ****     }
 304              		.loc 1 950 9 view .LVU90
1007:Middlewares/FreeRTOS/tasks.c ****         }
 305              		.loc 1 1007 13 view .LVU91
1007:Middlewares/FreeRTOS/tasks.c ****         }
 306              		.loc 1 1007 38 is_stmt 0 view .LVU92
 307 006e 4246     		mov	r2, r8
 308 0070 3946     		mov	r1, r7
 309 0072 2846     		mov	r0, r5
 310 0074 FFF7FEFF 		bl	pxPortInitialiseStack
 311              	.LVL23:
1007:Middlewares/FreeRTOS/tasks.c ****         }
 312              		.loc 1 1007 36 view .LVU93
 313 0078 2060     		str	r0, [r4]
1013:Middlewares/FreeRTOS/tasks.c ****     {
 314              		.loc 1 1013 5 is_stmt 1 view .LVU94
1013:Middlewares/FreeRTOS/tasks.c ****     {
 315              		.loc 1 1013 7 is_stmt 0 view .LVU95
 316 007a 079B     		ldr	r3, [sp, #28]
 317 007c 03B1     		cbz	r3, .L17
1017:Middlewares/FreeRTOS/tasks.c ****     }
 318              		.loc 1 1017 9 is_stmt 1 view .LVU96
1017:Middlewares/FreeRTOS/tasks.c ****     }
 319              		.loc 1 1017 24 is_stmt 0 view .LVU97
 320 007e 1C60     		str	r4, [r3]
1021:Middlewares/FreeRTOS/tasks.c ****     }
 321              		.loc 1 1021 33 is_stmt 1 view .LVU98
 322              	.L17:
1023:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 323              		.loc 1 1023 1 is_stmt 0 view .LVU99
 324 0080 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
1023:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 325              		.loc 1 1023 1 view .LVU100
 326              		.cfi_endproc
 327              	.LFE7:
 329              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 330              		.align	1
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 335              	prvInitialiseTaskLists:
 336              	.LFB39:
3658:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;
 337              		.loc 1 3658 1 is_stmt 1 view -0
 338              		.cfi_startproc
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 82


 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341 0000 38B5     		push	{r3, r4, r5, lr}
 342              	.LCFI1:
 343              		.cfi_def_cfa_offset 16
 344              		.cfi_offset 3, -16
 345              		.cfi_offset 4, -12
 346              		.cfi_offset 5, -8
 347              		.cfi_offset 14, -4
3659:Middlewares/FreeRTOS/tasks.c **** 
 348              		.loc 1 3659 5 view .LVU102
3661:Middlewares/FreeRTOS/tasks.c ****     {
 349              		.loc 1 3661 5 view .LVU103
 350              	.LVL24:
3661:Middlewares/FreeRTOS/tasks.c ****     {
 351              		.loc 1 3661 21 is_stmt 0 view .LVU104
 352 0002 0024     		movs	r4, #0
3661:Middlewares/FreeRTOS/tasks.c ****     {
 353              		.loc 1 3661 5 view .LVU105
 354 0004 07E0     		b	.L28
 355              	.LVL25:
 356              	.L29:
3663:Middlewares/FreeRTOS/tasks.c ****     }
 357              		.loc 1 3663 9 is_stmt 1 discriminator 3 view .LVU106
 358 0006 04EB8402 		add	r2, r4, r4, lsl #2
 359 000a 9300     		lsls	r3, r2, #2
 360 000c 0E48     		ldr	r0, .L31
 361 000e 1844     		add	r0, r0, r3
 362 0010 FFF7FEFF 		bl	vListInitialise
 363              	.LVL26:
3661:Middlewares/FreeRTOS/tasks.c ****     {
 364              		.loc 1 3661 104 discriminator 3 view .LVU107
 365 0014 0134     		adds	r4, r4, #1
 366              	.LVL27:
 367              	.L28:
3661:Middlewares/FreeRTOS/tasks.c ****     {
 368              		.loc 1 3661 54 discriminator 1 view .LVU108
 369 0016 062C     		cmp	r4, #6
 370 0018 F5D9     		bls	.L29
3666:Middlewares/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList2 );
 371              		.loc 1 3666 5 view .LVU109
 372 001a 0C4D     		ldr	r5, .L31+4
 373 001c 2846     		mov	r0, r5
 374 001e FFF7FEFF 		bl	vListInitialise
 375              	.LVL28:
3667:Middlewares/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
 376              		.loc 1 3667 5 view .LVU110
 377 0022 0B4C     		ldr	r4, .L31+8
 378              	.LVL29:
3667:Middlewares/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
 379              		.loc 1 3667 5 is_stmt 0 view .LVU111
 380 0024 2046     		mov	r0, r4
 381 0026 FFF7FEFF 		bl	vListInitialise
 382              	.LVL30:
3668:Middlewares/FreeRTOS/tasks.c **** 
 383              		.loc 1 3668 5 is_stmt 1 view .LVU112
 384 002a 0A48     		ldr	r0, .L31+12
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 83


 385 002c FFF7FEFF 		bl	vListInitialise
 386              	.LVL31:
3672:Middlewares/FreeRTOS/tasks.c ****     }
 387              		.loc 1 3672 9 view .LVU113
 388 0030 0948     		ldr	r0, .L31+16
 389 0032 FFF7FEFF 		bl	vListInitialise
 390              	.LVL32:
3678:Middlewares/FreeRTOS/tasks.c ****     }
 391              		.loc 1 3678 9 view .LVU114
 392 0036 0948     		ldr	r0, .L31+20
 393 0038 FFF7FEFF 		bl	vListInitialise
 394              	.LVL33:
3684:Middlewares/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
 395              		.loc 1 3684 5 view .LVU115
3684:Middlewares/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
 396              		.loc 1 3684 23 is_stmt 0 view .LVU116
 397 003c 084B     		ldr	r3, .L31+24
 398 003e 1D60     		str	r5, [r3]
3685:Middlewares/FreeRTOS/tasks.c **** }
 399              		.loc 1 3685 5 is_stmt 1 view .LVU117
3685:Middlewares/FreeRTOS/tasks.c **** }
 400              		.loc 1 3685 31 is_stmt 0 view .LVU118
 401 0040 084B     		ldr	r3, .L31+28
 402 0042 1C60     		str	r4, [r3]
3686:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 403              		.loc 1 3686 1 view .LVU119
 404 0044 38BD     		pop	{r3, r4, r5, pc}
 405              	.L32:
 406 0046 00BF     		.align	2
 407              	.L31:
 408 0048 00000000 		.word	pxReadyTasksLists
 409 004c 00000000 		.word	xDelayedTaskList1
 410 0050 00000000 		.word	xDelayedTaskList2
 411 0054 00000000 		.word	xPendingReadyList
 412 0058 00000000 		.word	xTasksWaitingTermination
 413 005c 00000000 		.word	xSuspendedTaskList
 414 0060 00000000 		.word	pxDelayedTaskList
 415 0064 00000000 		.word	pxOverflowDelayedTaskList
 416              		.cfi_endproc
 417              	.LFE39:
 419              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 420              		.align	1
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	prvAddNewTaskToReadyList:
 426              	.LVL34:
 427              	.LFB8:
1027:Middlewares/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
 428              		.loc 1 1027 1 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
1027:Middlewares/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
 432              		.loc 1 1027 1 is_stmt 0 view .LVU121
 433 0000 10B5     		push	{r4, lr}
 434              	.LCFI2:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 84


 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 4, -8
 437              		.cfi_offset 14, -4
 438 0002 0446     		mov	r4, r0
1030:Middlewares/FreeRTOS/tasks.c ****     {
 439              		.loc 1 1030 5 is_stmt 1 view .LVU122
 440 0004 FFF7FEFF 		bl	vPortEnterCritical
 441              	.LVL35:
1032:Middlewares/FreeRTOS/tasks.c **** 
 442              		.loc 1 1032 9 view .LVU123
1032:Middlewares/FreeRTOS/tasks.c **** 
 443              		.loc 1 1032 31 is_stmt 0 view .LVU124
 444 0008 284A     		ldr	r2, .L40
 445 000a 1368     		ldr	r3, [r2]
 446 000c 0133     		adds	r3, r3, #1
 447 000e 1360     		str	r3, [r2]
1034:Middlewares/FreeRTOS/tasks.c ****         {
 448              		.loc 1 1034 9 is_stmt 1 view .LVU125
1034:Middlewares/FreeRTOS/tasks.c ****         {
 449              		.loc 1 1034 26 is_stmt 0 view .LVU126
 450 0010 274B     		ldr	r3, .L40+4
 451 0012 1B68     		ldr	r3, [r3]
1034:Middlewares/FreeRTOS/tasks.c ****         {
 452              		.loc 1 1034 11 view .LVU127
 453 0014 5BB1     		cbz	r3, .L38
1057:Middlewares/FreeRTOS/tasks.c ****             {
 454              		.loc 1 1057 13 is_stmt 1 view .LVU128
1057:Middlewares/FreeRTOS/tasks.c ****             {
 455              		.loc 1 1057 35 is_stmt 0 view .LVU129
 456 0016 274B     		ldr	r3, .L40+8
 457 0018 1B68     		ldr	r3, [r3]
1057:Middlewares/FreeRTOS/tasks.c ****             {
 458              		.loc 1 1057 15 view .LVU130
 459 001a 6BB9     		cbnz	r3, .L35
1059:Middlewares/FreeRTOS/tasks.c ****                 {
 460              		.loc 1 1059 17 is_stmt 1 view .LVU131
1059:Middlewares/FreeRTOS/tasks.c ****                 {
 461              		.loc 1 1059 33 is_stmt 0 view .LVU132
 462 001c 244B     		ldr	r3, .L40+4
 463 001e 1B68     		ldr	r3, [r3]
 464 0020 DA6A     		ldr	r2, [r3, #44]
1059:Middlewares/FreeRTOS/tasks.c ****                 {
 465              		.loc 1 1059 57 view .LVU133
 466 0022 E36A     		ldr	r3, [r4, #44]
1059:Middlewares/FreeRTOS/tasks.c ****                 {
 467              		.loc 1 1059 19 view .LVU134
 468 0024 9A42     		cmp	r2, r3
 469 0026 07D8     		bhi	.L35
1061:Middlewares/FreeRTOS/tasks.c ****                 }
 470              		.loc 1 1061 21 is_stmt 1 view .LVU135
1061:Middlewares/FreeRTOS/tasks.c ****                 }
 471              		.loc 1 1061 34 is_stmt 0 view .LVU136
 472 0028 214B     		ldr	r3, .L40+4
 473 002a 1C60     		str	r4, [r3]
 474 002c 04E0     		b	.L35
 475              	.L38:
1038:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 85


 476              		.loc 1 1038 13 is_stmt 1 view .LVU137
1038:Middlewares/FreeRTOS/tasks.c **** 
 477              		.loc 1 1038 26 is_stmt 0 view .LVU138
 478 002e 204B     		ldr	r3, .L40+4
 479 0030 1C60     		str	r4, [r3]
1040:Middlewares/FreeRTOS/tasks.c ****             {
 480              		.loc 1 1040 13 is_stmt 1 view .LVU139
1040:Middlewares/FreeRTOS/tasks.c ****             {
 481              		.loc 1 1040 40 is_stmt 0 view .LVU140
 482 0032 1368     		ldr	r3, [r2]
1040:Middlewares/FreeRTOS/tasks.c ****             {
 483              		.loc 1 1040 15 view .LVU141
 484 0034 012B     		cmp	r3, #1
 485 0036 36D0     		beq	.L39
 486              	.L35:
1070:Middlewares/FreeRTOS/tasks.c ****             }
 487              		.loc 1 1070 41 is_stmt 1 view .LVU142
1074:Middlewares/FreeRTOS/tasks.c **** 
 488              		.loc 1 1074 9 view .LVU143
1074:Middlewares/FreeRTOS/tasks.c **** 
 489              		.loc 1 1074 21 is_stmt 0 view .LVU144
 490 0038 1F4A     		ldr	r2, .L40+12
 491 003a 1368     		ldr	r3, [r2]
 492 003c 0133     		adds	r3, r3, #1
 493 003e 1360     		str	r3, [r2]
1082:Middlewares/FreeRTOS/tasks.c **** 
 494              		.loc 1 1082 37 is_stmt 1 view .LVU145
1084:Middlewares/FreeRTOS/tasks.c **** 
 495              		.loc 1 1084 9 view .LVU146
1084:Middlewares/FreeRTOS/tasks.c **** 
 496              		.loc 1 1084 9 view .LVU147
 497 0040 E36A     		ldr	r3, [r4, #44]
 498 0042 0122     		movs	r2, #1
 499 0044 9A40     		lsls	r2, r2, r3
 500 0046 1D49     		ldr	r1, .L40+16
 501 0048 0868     		ldr	r0, [r1]
 502 004a 0243     		orrs	r2, r2, r0
 503 004c 0A60     		str	r2, [r1]
 504              	.LBB163:
1084:Middlewares/FreeRTOS/tasks.c **** 
 505              		.loc 1 1084 9 view .LVU148
 506 004e 1C4A     		ldr	r2, .L40+20
 507 0050 03EB8303 		add	r3, r3, r3, lsl #2
 508 0054 02EB8303 		add	r3, r2, r3, lsl #2
 509 0058 5B68     		ldr	r3, [r3, #4]
 510              	.LVL36:
1084:Middlewares/FreeRTOS/tasks.c **** 
 511              		.loc 1 1084 9 view .LVU149
1084:Middlewares/FreeRTOS/tasks.c **** 
 512              		.loc 1 1084 9 view .LVU150
1084:Middlewares/FreeRTOS/tasks.c **** 
 513              		.loc 1 1084 9 view .LVU151
 514 005a A360     		str	r3, [r4, #8]
1084:Middlewares/FreeRTOS/tasks.c **** 
 515              		.loc 1 1084 9 view .LVU152
 516 005c 9868     		ldr	r0, [r3, #8]
 517 005e E060     		str	r0, [r4, #12]
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 86


1084:Middlewares/FreeRTOS/tasks.c **** 
 518              		.loc 1 1084 9 view .LVU153
 519 0060 211D     		adds	r1, r4, #4
 520 0062 4160     		str	r1, [r0, #4]
1084:Middlewares/FreeRTOS/tasks.c **** 
 521              		.loc 1 1084 9 view .LVU154
 522 0064 9960     		str	r1, [r3, #8]
1084:Middlewares/FreeRTOS/tasks.c **** 
 523              		.loc 1 1084 9 view .LVU155
 524 0066 E36A     		ldr	r3, [r4, #44]
 525              	.LVL37:
1084:Middlewares/FreeRTOS/tasks.c **** 
 526              		.loc 1 1084 9 is_stmt 0 view .LVU156
 527 0068 03EB8301 		add	r1, r3, r3, lsl #2
 528 006c 8800     		lsls	r0, r1, #2
 529 006e 02EB8101 		add	r1, r2, r1, lsl #2
 530 0072 6161     		str	r1, [r4, #20]
1084:Middlewares/FreeRTOS/tasks.c **** 
 531              		.loc 1 1084 9 is_stmt 1 view .LVU157
 532 0074 1158     		ldr	r1, [r2, r0]
 533 0076 0131     		adds	r1, r1, #1
 534 0078 1150     		str	r1, [r2, r0]
 535              	.LBE163:
1084:Middlewares/FreeRTOS/tasks.c **** 
 536              		.loc 1 1084 9 view .LVU158
1084:Middlewares/FreeRTOS/tasks.c **** 
 537              		.loc 1 1084 42 view .LVU159
1086:Middlewares/FreeRTOS/tasks.c ****     }
 538              		.loc 1 1086 9 view .LVU160
1088:Middlewares/FreeRTOS/tasks.c **** 
 539              		.loc 1 1088 5 view .LVU161
 540 007a FFF7FEFF 		bl	vPortExitCritical
 541              	.LVL38:
1090:Middlewares/FreeRTOS/tasks.c ****     {
 542              		.loc 1 1090 5 view .LVU162
1090:Middlewares/FreeRTOS/tasks.c ****     {
 543              		.loc 1 1090 27 is_stmt 0 view .LVU163
 544 007e 0D4B     		ldr	r3, .L40+8
 545 0080 1B68     		ldr	r3, [r3]
1090:Middlewares/FreeRTOS/tasks.c ****     {
 546              		.loc 1 1090 7 view .LVU164
 547 0082 7BB1     		cbz	r3, .L33
1094:Middlewares/FreeRTOS/tasks.c ****         {
 548              		.loc 1 1094 9 is_stmt 1 view .LVU165
1094:Middlewares/FreeRTOS/tasks.c ****         {
 549              		.loc 1 1094 25 is_stmt 0 view .LVU166
 550 0084 0A4B     		ldr	r3, .L40+4
 551 0086 1B68     		ldr	r3, [r3]
 552 0088 DA6A     		ldr	r2, [r3, #44]
1094:Middlewares/FreeRTOS/tasks.c ****         {
 553              		.loc 1 1094 48 view .LVU167
 554 008a E36A     		ldr	r3, [r4, #44]
1094:Middlewares/FreeRTOS/tasks.c ****         {
 555              		.loc 1 1094 11 view .LVU168
 556 008c 9A42     		cmp	r2, r3
 557 008e 09D2     		bcs	.L33
1096:Middlewares/FreeRTOS/tasks.c ****         }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 87


 558              		.loc 1 1096 13 is_stmt 1 view .LVU169
 559 0090 4FF0E023 		mov	r3, #-536813568
 560 0094 4FF08052 		mov	r2, #268435456
 561 0098 C3F8042D 		str	r2, [r3, #3332]
1096:Middlewares/FreeRTOS/tasks.c ****         }
 562              		.loc 1 1096 13 view .LVU170
 563              		.syntax unified
 564              	@ 1096 "Middlewares/FreeRTOS/tasks.c" 1
 565 009c BFF34F8F 		dsb
 566              	@ 0 "" 2
1096:Middlewares/FreeRTOS/tasks.c ****         }
 567              		.loc 1 1096 13 view .LVU171
 568              	@ 1096 "Middlewares/FreeRTOS/tasks.c" 1
 569 00a0 BFF36F8F 		isb
 570              	@ 0 "" 2
1096:Middlewares/FreeRTOS/tasks.c ****         }
 571              		.loc 1 1096 44 view .LVU172
1105:Middlewares/FreeRTOS/tasks.c ****     }
 572              		.loc 1 1105 33 view .LVU173
 573              		.thumb
 574              		.syntax unified
 575              	.L33:
1107:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 576              		.loc 1 1107 1 is_stmt 0 view .LVU174
 577 00a4 10BD     		pop	{r4, pc}
 578              	.LVL39:
 579              	.L39:
1045:Middlewares/FreeRTOS/tasks.c ****             }
 580              		.loc 1 1045 17 is_stmt 1 view .LVU175
 581 00a6 FFF7FEFF 		bl	prvInitialiseTaskLists
 582              	.LVL40:
 583 00aa C5E7     		b	.L35
 584              	.L41:
 585              		.align	2
 586              	.L40:
 587 00ac 00000000 		.word	uxCurrentNumberOfTasks
 588 00b0 00000000 		.word	pxCurrentTCB
 589 00b4 00000000 		.word	xSchedulerRunning
 590 00b8 00000000 		.word	uxTaskNumber
 591 00bc 00000000 		.word	uxTopReadyPriority
 592 00c0 00000000 		.word	pxReadyTasksLists
 593              		.cfi_endproc
 594              	.LFE8:
 596              		.section	.text.prvDeleteTCB,"ax",%progbits
 597              		.align	1
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 602              	prvDeleteTCB:
 603              	.LVL41:
 604              	.LFB41:
3947:Middlewares/FreeRTOS/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
 605              		.loc 1 3947 5 view -0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
3947:Middlewares/FreeRTOS/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 88


 609              		.loc 1 3947 5 is_stmt 0 view .LVU177
 610 0000 10B5     		push	{r4, lr}
 611              	.LCFI3:
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 4, -8
 614              		.cfi_offset 14, -4
 615 0002 0446     		mov	r4, r0
3951:Middlewares/FreeRTOS/tasks.c **** 
 616              		.loc 1 3951 9 is_stmt 1 view .LVU178
3972:Middlewares/FreeRTOS/tasks.c ****             {
 617              		.loc 1 3972 13 view .LVU179
3972:Middlewares/FreeRTOS/tasks.c ****             {
 618              		.loc 1 3972 22 is_stmt 0 view .LVU180
 619 0004 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
3972:Middlewares/FreeRTOS/tasks.c ****             {
 620              		.loc 1 3972 15 view .LVU181
 621 0008 63B1     		cbz	r3, .L48
3979:Middlewares/FreeRTOS/tasks.c ****             {
 622              		.loc 1 3979 18 is_stmt 1 view .LVU182
3979:Middlewares/FreeRTOS/tasks.c ****             {
 623              		.loc 1 3979 20 is_stmt 0 view .LVU183
 624 000a 012B     		cmp	r3, #1
 625 000c 11D0     		beq	.L49
3989:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
 626              		.loc 1 3989 17 is_stmt 1 view .LVU184
 627 000e 022B     		cmp	r3, #2
 628 0010 0ED0     		beq	.L42
3989:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
 629              		.loc 1 3989 17 view .LVU185
 630              	.LBB164:
 631              	.LBI164:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 632              		.loc 2 196 34 view .LVU186
 633              	.LBB165:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 634              		.loc 2 198 9 view .LVU187
 635              		.loc 2 200 9 view .LVU188
 636              		.syntax unified
 637              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 638 0012 4FF01003 			mov r3, #16												
 639 0016 83F31188 		msr basepri, r3											
 640 001a BFF36F8F 		isb														
 641 001e BFF34F8F 		dsb														
 642              	
 643              	@ 0 "" 2
 644              	.LVL42:
 645              		.thumb
 646              		.syntax unified
 647              	.L46:
 648              		.loc 2 200 9 is_stmt 0 view .LVU189
 649              	.LBE165:
 650              	.LBE164:
3989:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
 651              		.loc 1 3989 17 is_stmt 1 discriminator 1 view .LVU190
3989:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
 652              		.loc 1 3989 17 discriminator 1 view .LVU191
 653 0022 FEE7     		b	.L46
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 89


 654              	.L48:
3976:Middlewares/FreeRTOS/tasks.c ****                 vPortFree( pxTCB );
 655              		.loc 1 3976 17 view .LVU192
 656 0024 006B     		ldr	r0, [r0, #48]
 657              	.LVL43:
3976:Middlewares/FreeRTOS/tasks.c ****                 vPortFree( pxTCB );
 658              		.loc 1 3976 17 is_stmt 0 view .LVU193
 659 0026 FFF7FEFF 		bl	vPortFree
 660              	.LVL44:
3977:Middlewares/FreeRTOS/tasks.c ****             }
 661              		.loc 1 3977 17 is_stmt 1 view .LVU194
 662 002a 2046     		mov	r0, r4
 663 002c FFF7FEFF 		bl	vPortFree
 664              	.LVL45:
 665              	.L42:
3994:Middlewares/FreeRTOS/tasks.c **** 
 666              		.loc 1 3994 5 is_stmt 0 view .LVU195
 667 0030 10BD     		pop	{r4, pc}
 668              	.LVL46:
 669              	.L49:
3983:Middlewares/FreeRTOS/tasks.c ****             }
 670              		.loc 1 3983 17 is_stmt 1 view .LVU196
 671 0032 FFF7FEFF 		bl	vPortFree
 672              	.LVL47:
3983:Middlewares/FreeRTOS/tasks.c ****             }
 673              		.loc 1 3983 17 is_stmt 0 view .LVU197
 674 0036 FBE7     		b	.L42
 675              		.cfi_endproc
 676              	.LFE41:
 678              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 679              		.align	1
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 684              	prvCheckTasksWaitingTermination:
 685              	.LFB40:
3690:Middlewares/FreeRTOS/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
 686              		.loc 1 3690 1 is_stmt 1 view -0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              	.LBB166:
3695:Middlewares/FreeRTOS/tasks.c **** 
 691              		.loc 1 3695 9 view .LVU199
3699:Middlewares/FreeRTOS/tasks.c ****         {
 692              		.loc 1 3699 9 view .LVU200
3699:Middlewares/FreeRTOS/tasks.c ****         {
 693              		.loc 1 3699 45 view .LVU201
 694 0000 0F4B     		ldr	r3, .L57
 695 0002 1B68     		ldr	r3, [r3]
 696 0004 D3B1     		cbz	r3, .L56
 697              	.LBE166:
3690:Middlewares/FreeRTOS/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
 698              		.loc 1 3690 1 is_stmt 0 view .LVU202
 699 0006 10B5     		push	{r4, lr}
 700              	.LCFI4:
 701              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 90


 702              		.cfi_offset 4, -8
 703              		.cfi_offset 14, -4
 704              	.L52:
 705              	.LBB167:
3701:Middlewares/FreeRTOS/tasks.c ****             {
 706              		.loc 1 3701 13 is_stmt 1 view .LVU203
 707 0008 FFF7FEFF 		bl	vPortEnterCritical
 708              	.LVL48:
3703:Middlewares/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 709              		.loc 1 3703 17 view .LVU204
3703:Middlewares/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 710              		.loc 1 3703 25 is_stmt 0 view .LVU205
 711 000c 0D4B     		ldr	r3, .L57+4
 712 000e DB68     		ldr	r3, [r3, #12]
3703:Middlewares/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 713              		.loc 1 3703 23 view .LVU206
 714 0010 DC68     		ldr	r4, [r3, #12]
 715              	.LVL49:
3704:Middlewares/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
 716              		.loc 1 3704 17 is_stmt 1 view .LVU207
3704:Middlewares/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
 717              		.loc 1 3704 26 is_stmt 0 view .LVU208
 718 0012 201D     		adds	r0, r4, #4
 719 0014 FFF7FEFF 		bl	uxListRemove
 720              	.LVL50:
3705:Middlewares/FreeRTOS/tasks.c ****                 --uxDeletedTasksWaitingCleanUp;
 721              		.loc 1 3705 17 is_stmt 1 view .LVU209
 722 0018 0B4A     		ldr	r2, .L57+8
 723 001a 1368     		ldr	r3, [r2]
 724 001c 013B     		subs	r3, r3, #1
 725 001e 1360     		str	r3, [r2]
3706:Middlewares/FreeRTOS/tasks.c ****             }
 726              		.loc 1 3706 17 view .LVU210
 727 0020 074A     		ldr	r2, .L57
 728 0022 1368     		ldr	r3, [r2]
 729 0024 013B     		subs	r3, r3, #1
 730 0026 1360     		str	r3, [r2]
3708:Middlewares/FreeRTOS/tasks.c **** 
 731              		.loc 1 3708 13 view .LVU211
 732 0028 FFF7FEFF 		bl	vPortExitCritical
 733              	.LVL51:
3710:Middlewares/FreeRTOS/tasks.c ****         }
 734              		.loc 1 3710 13 view .LVU212
 735 002c 2046     		mov	r0, r4
 736 002e FFF7FEFF 		bl	prvDeleteTCB
 737              	.LVL52:
3699:Middlewares/FreeRTOS/tasks.c ****         {
 738              		.loc 1 3699 45 view .LVU213
 739 0032 034B     		ldr	r3, .L57
 740 0034 1B68     		ldr	r3, [r3]
 741 0036 002B     		cmp	r3, #0
 742 0038 E6D1     		bne	.L52
 743              	.LBE167:
3714:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 744              		.loc 1 3714 1 is_stmt 0 view .LVU214
 745 003a 10BD     		pop	{r4, pc}
 746              	.LVL53:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 91


 747              	.L56:
 748              	.LCFI5:
 749              		.cfi_def_cfa_offset 0
 750              		.cfi_restore 4
 751              		.cfi_restore 14
3714:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 752              		.loc 1 3714 1 view .LVU215
 753 003c 7047     		bx	lr
 754              	.L58:
 755 003e 00BF     		.align	2
 756              	.L57:
 757 0040 00000000 		.word	uxDeletedTasksWaitingCleanUp
 758 0044 00000000 		.word	xTasksWaitingTermination
 759 0048 00000000 		.word	uxCurrentNumberOfTasks
 760              		.cfi_endproc
 761              	.LFE40:
 763              		.section	.text.prvIdleTask,"ax",%progbits
 764              		.align	1
 765              		.syntax unified
 766              		.thumb
 767              		.thumb_func
 769              	prvIdleTask:
 770              	.LFB38:
3428:Middlewares/FreeRTOS/tasks.c ****     /* Stop warnings. */
 771              		.loc 1 3428 1 is_stmt 1 view -0
 772              		.cfi_startproc
 773              		@ Volatile: function does not return.
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              	.LVL54:
3428:Middlewares/FreeRTOS/tasks.c ****     /* Stop warnings. */
 777              		.loc 1 3428 1 is_stmt 0 view .LVU217
 778 0000 08B5     		push	{r3, lr}
 779              	.LCFI6:
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 3, -8
 782              		.cfi_offset 14, -4
 783              	.LVL55:
 784              	.L60:
3430:Middlewares/FreeRTOS/tasks.c **** 
 785              		.loc 1 3430 5 is_stmt 1 view .LVU218
3438:Middlewares/FreeRTOS/tasks.c **** 
 786              		.loc 1 3438 67 view .LVU219
3440:Middlewares/FreeRTOS/tasks.c ****     {
 787              		.loc 1 3440 5 view .LVU220
3444:Middlewares/FreeRTOS/tasks.c **** 
 788              		.loc 1 3444 9 view .LVU221
 789 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 790              	.LVL56:
3467:Middlewares/FreeRTOS/tasks.c ****             {
 791              		.loc 1 3467 13 view .LVU222
3467:Middlewares/FreeRTOS/tasks.c ****             {
 792              		.loc 1 3467 17 is_stmt 0 view .LVU223
 793 0006 074B     		ldr	r3, .L63
 794 0008 1B68     		ldr	r3, [r3]
3467:Middlewares/FreeRTOS/tasks.c ****             {
 795              		.loc 1 3467 15 view .LVU224
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 92


 796 000a 012B     		cmp	r3, #1
 797 000c F9D9     		bls	.L60
3469:Middlewares/FreeRTOS/tasks.c ****             }
 798              		.loc 1 3469 17 is_stmt 1 view .LVU225
 799 000e 4FF0E023 		mov	r3, #-536813568
 800 0012 4FF08052 		mov	r2, #268435456
 801 0016 C3F8042D 		str	r2, [r3, #3332]
3469:Middlewares/FreeRTOS/tasks.c ****             }
 802              		.loc 1 3469 17 view .LVU226
 803              		.syntax unified
 804              	@ 3469 "Middlewares/FreeRTOS/tasks.c" 1
 805 001a BFF34F8F 		dsb
 806              	@ 0 "" 2
3469:Middlewares/FreeRTOS/tasks.c ****             }
 807              		.loc 1 3469 17 view .LVU227
 808              	@ 3469 "Middlewares/FreeRTOS/tasks.c" 1
 809 001e BFF36F8F 		isb
 810              	@ 0 "" 2
3469:Middlewares/FreeRTOS/tasks.c ****             }
 811              		.loc 1 3469 28 view .LVU228
 812              		.thumb
 813              		.syntax unified
 814 0022 EEE7     		b	.L60
 815              	.L64:
 816              		.align	2
 817              	.L63:
 818 0024 00000000 		.word	pxReadyTasksLists
 819              		.cfi_endproc
 820              	.LFE38:
 822              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 823              		.align	1
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 828              	prvAddCurrentTaskToDelayedList:
 829              	.LVL57:
 830              	.LFB57:
4018:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4019:Middlewares/FreeRTOS/tasks.c **** 
4020:Middlewares/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
4021:Middlewares/FreeRTOS/tasks.c **** 
4022:Middlewares/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetCurrentTaskHandle( void )
4023:Middlewares/FreeRTOS/tasks.c ****     {
4024:Middlewares/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
4025:Middlewares/FreeRTOS/tasks.c **** 
4026:Middlewares/FreeRTOS/tasks.c ****         /* A critical section is not required as this is not called from
4027:Middlewares/FreeRTOS/tasks.c ****          * an interrupt and the current TCB will always be the same for any
4028:Middlewares/FreeRTOS/tasks.c ****          * individual execution thread. */
4029:Middlewares/FreeRTOS/tasks.c ****         xReturn = pxCurrentTCB;
4030:Middlewares/FreeRTOS/tasks.c **** 
4031:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
4032:Middlewares/FreeRTOS/tasks.c ****     }
4033:Middlewares/FreeRTOS/tasks.c **** 
4034:Middlewares/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
4035:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4036:Middlewares/FreeRTOS/tasks.c **** 
4037:Middlewares/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 93


4038:Middlewares/FreeRTOS/tasks.c **** 
4039:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskGetSchedulerState( void )
4040:Middlewares/FreeRTOS/tasks.c ****     {
4041:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn;
4042:Middlewares/FreeRTOS/tasks.c **** 
4043:Middlewares/FreeRTOS/tasks.c ****         if( xSchedulerRunning == pdFALSE )
4044:Middlewares/FreeRTOS/tasks.c ****         {
4045:Middlewares/FreeRTOS/tasks.c ****             xReturn = taskSCHEDULER_NOT_STARTED;
4046:Middlewares/FreeRTOS/tasks.c ****         }
4047:Middlewares/FreeRTOS/tasks.c ****         else
4048:Middlewares/FreeRTOS/tasks.c ****         {
4049:Middlewares/FreeRTOS/tasks.c ****             if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4050:Middlewares/FreeRTOS/tasks.c ****             {
4051:Middlewares/FreeRTOS/tasks.c ****                 xReturn = taskSCHEDULER_RUNNING;
4052:Middlewares/FreeRTOS/tasks.c ****             }
4053:Middlewares/FreeRTOS/tasks.c ****             else
4054:Middlewares/FreeRTOS/tasks.c ****             {
4055:Middlewares/FreeRTOS/tasks.c ****                 xReturn = taskSCHEDULER_SUSPENDED;
4056:Middlewares/FreeRTOS/tasks.c ****             }
4057:Middlewares/FreeRTOS/tasks.c ****         }
4058:Middlewares/FreeRTOS/tasks.c **** 
4059:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
4060:Middlewares/FreeRTOS/tasks.c ****     }
4061:Middlewares/FreeRTOS/tasks.c **** 
4062:Middlewares/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4063:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4064:Middlewares/FreeRTOS/tasks.c **** 
4065:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4066:Middlewares/FreeRTOS/tasks.c **** 
4067:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4068:Middlewares/FreeRTOS/tasks.c ****     {
4069:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4070:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
4071:Middlewares/FreeRTOS/tasks.c **** 
4072:Middlewares/FreeRTOS/tasks.c ****         /* If the mutex was given back by an interrupt while the queue was
4073:Middlewares/FreeRTOS/tasks.c ****          * locked then the mutex holder might now be NULL.  _RB_ Is this still
4074:Middlewares/FreeRTOS/tasks.c ****          * needed as interrupts can no longer use mutexes? */
4075:Middlewares/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
4076:Middlewares/FreeRTOS/tasks.c ****         {
4077:Middlewares/FreeRTOS/tasks.c ****             /* If the holder of the mutex has a priority below the priority of
4078:Middlewares/FreeRTOS/tasks.c ****              * the task attempting to obtain the mutex then it will temporarily
4079:Middlewares/FreeRTOS/tasks.c ****              * inherit the priority of the task attempting to obtain the mutex. */
4080:Middlewares/FreeRTOS/tasks.c ****             if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4081:Middlewares/FreeRTOS/tasks.c ****             {
4082:Middlewares/FreeRTOS/tasks.c ****                 /* Adjust the mutex holder state to account for its new
4083:Middlewares/FreeRTOS/tasks.c ****                  * priority.  Only reset the event list item value if the value is
4084:Middlewares/FreeRTOS/tasks.c ****                  * not being used for anything else. */
4085:Middlewares/FreeRTOS/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_
4086:Middlewares/FreeRTOS/tasks.c ****                 {
4087:Middlewares/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) 
4088:Middlewares/FreeRTOS/tasks.c ****                 }
4089:Middlewares/FreeRTOS/tasks.c ****                 else
4090:Middlewares/FreeRTOS/tasks.c ****                 {
4091:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4092:Middlewares/FreeRTOS/tasks.c ****                 }
4093:Middlewares/FreeRTOS/tasks.c **** 
4094:Middlewares/FreeRTOS/tasks.c ****                 /* If the task being modified is in the ready state it will need
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 94


4095:Middlewares/FreeRTOS/tasks.c ****                  * to be moved into a new list. */
4096:Middlewares/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] )
4097:Middlewares/FreeRTOS/tasks.c ****                 {
4098:Middlewares/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 
4099:Middlewares/FreeRTOS/tasks.c ****                     {
4100:Middlewares/FreeRTOS/tasks.c ****                         /* It is known that the task is in its ready list so
4101:Middlewares/FreeRTOS/tasks.c ****                          * there is no need to check again and the port level
4102:Middlewares/FreeRTOS/tasks.c ****                          * reset macro can be called directly. */
4103:Middlewares/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority 
4104:Middlewares/FreeRTOS/tasks.c ****                     }
4105:Middlewares/FreeRTOS/tasks.c ****                     else
4106:Middlewares/FreeRTOS/tasks.c ****                     {
4107:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4108:Middlewares/FreeRTOS/tasks.c ****                     }
4109:Middlewares/FreeRTOS/tasks.c **** 
4110:Middlewares/FreeRTOS/tasks.c ****                     /* Inherit the priority before being moved into the new list. */
4111:Middlewares/FreeRTOS/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4112:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
4113:Middlewares/FreeRTOS/tasks.c ****                 }
4114:Middlewares/FreeRTOS/tasks.c ****                 else
4115:Middlewares/FreeRTOS/tasks.c ****                 {
4116:Middlewares/FreeRTOS/tasks.c ****                     /* Just inherit the priority. */
4117:Middlewares/FreeRTOS/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4118:Middlewares/FreeRTOS/tasks.c ****                 }
4119:Middlewares/FreeRTOS/tasks.c **** 
4120:Middlewares/FreeRTOS/tasks.c ****                 traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4121:Middlewares/FreeRTOS/tasks.c **** 
4122:Middlewares/FreeRTOS/tasks.c ****                 /* Inheritance occurred. */
4123:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
4124:Middlewares/FreeRTOS/tasks.c ****             }
4125:Middlewares/FreeRTOS/tasks.c ****             else
4126:Middlewares/FreeRTOS/tasks.c ****             {
4127:Middlewares/FreeRTOS/tasks.c ****                 if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4128:Middlewares/FreeRTOS/tasks.c ****                 {
4129:Middlewares/FreeRTOS/tasks.c ****                     /* The base priority of the mutex holder is lower than the
4130:Middlewares/FreeRTOS/tasks.c ****                      * priority of the task attempting to take the mutex, but the
4131:Middlewares/FreeRTOS/tasks.c ****                      * current priority of the mutex holder is not lower than the
4132:Middlewares/FreeRTOS/tasks.c ****                      * priority of the task attempting to take the mutex.
4133:Middlewares/FreeRTOS/tasks.c ****                      * Therefore the mutex holder must have already inherited a
4134:Middlewares/FreeRTOS/tasks.c ****                      * priority, but inheritance would have occurred if that had
4135:Middlewares/FreeRTOS/tasks.c ****                      * not been the case. */
4136:Middlewares/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
4137:Middlewares/FreeRTOS/tasks.c ****                 }
4138:Middlewares/FreeRTOS/tasks.c ****                 else
4139:Middlewares/FreeRTOS/tasks.c ****                 {
4140:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4141:Middlewares/FreeRTOS/tasks.c ****                 }
4142:Middlewares/FreeRTOS/tasks.c ****             }
4143:Middlewares/FreeRTOS/tasks.c ****         }
4144:Middlewares/FreeRTOS/tasks.c ****         else
4145:Middlewares/FreeRTOS/tasks.c ****         {
4146:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4147:Middlewares/FreeRTOS/tasks.c ****         }
4148:Middlewares/FreeRTOS/tasks.c **** 
4149:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
4150:Middlewares/FreeRTOS/tasks.c ****     }
4151:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 95


4152:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4153:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4154:Middlewares/FreeRTOS/tasks.c **** 
4155:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4156:Middlewares/FreeRTOS/tasks.c **** 
4157:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4158:Middlewares/FreeRTOS/tasks.c ****     {
4159:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4160:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
4161:Middlewares/FreeRTOS/tasks.c **** 
4162:Middlewares/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
4163:Middlewares/FreeRTOS/tasks.c ****         {
4164:Middlewares/FreeRTOS/tasks.c ****             /* A task can only have an inherited priority if it holds the mutex.
4165:Middlewares/FreeRTOS/tasks.c ****              * If the mutex is held by a task then it cannot be given from an
4166:Middlewares/FreeRTOS/tasks.c ****              * interrupt, and if a mutex is given by the holding task then it must
4167:Middlewares/FreeRTOS/tasks.c ****              * be the running state task. */
4168:Middlewares/FreeRTOS/tasks.c ****             configASSERT( pxTCB == pxCurrentTCB );
4169:Middlewares/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4170:Middlewares/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
4171:Middlewares/FreeRTOS/tasks.c **** 
4172:Middlewares/FreeRTOS/tasks.c ****             /* Has the holder of the mutex inherited the priority of another
4173:Middlewares/FreeRTOS/tasks.c ****              * task? */
4174:Middlewares/FreeRTOS/tasks.c ****             if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4175:Middlewares/FreeRTOS/tasks.c ****             {
4176:Middlewares/FreeRTOS/tasks.c ****                 /* Only disinherit if no other mutexes are held. */
4177:Middlewares/FreeRTOS/tasks.c ****                 if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4178:Middlewares/FreeRTOS/tasks.c ****                 {
4179:Middlewares/FreeRTOS/tasks.c ****                     /* A task can only have an inherited priority if it holds
4180:Middlewares/FreeRTOS/tasks.c ****                      * the mutex.  If the mutex is held by a task then it cannot be
4181:Middlewares/FreeRTOS/tasks.c ****                      * given from an interrupt, and if a mutex is given by the
4182:Middlewares/FreeRTOS/tasks.c ****                      * holding task then it must be the running state task.  Remove
4183:Middlewares/FreeRTOS/tasks.c ****                      * the holding task from the ready list. */
4184:Middlewares/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4185:Middlewares/FreeRTOS/tasks.c ****                     {
4186:Middlewares/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4187:Middlewares/FreeRTOS/tasks.c ****                     }
4188:Middlewares/FreeRTOS/tasks.c ****                     else
4189:Middlewares/FreeRTOS/tasks.c ****                     {
4190:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4191:Middlewares/FreeRTOS/tasks.c ****                     }
4192:Middlewares/FreeRTOS/tasks.c **** 
4193:Middlewares/FreeRTOS/tasks.c ****                     /* Disinherit the priority before adding the task into the
4194:Middlewares/FreeRTOS/tasks.c ****                      * new  ready list. */
4195:Middlewares/FreeRTOS/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4196:Middlewares/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = pxTCB->uxBasePriority;
4197:Middlewares/FreeRTOS/tasks.c **** 
4198:Middlewares/FreeRTOS/tasks.c ****                     /* Reset the event list item value.  It cannot be in use for
4199:Middlewares/FreeRTOS/tasks.c ****                      * any other purpose if this task is running, and it must be
4200:Middlewares/FreeRTOS/tasks.c ****                      * running to give back the mutex. */
4201:Middlewares/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_P
4202:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
4203:Middlewares/FreeRTOS/tasks.c **** 
4204:Middlewares/FreeRTOS/tasks.c ****                     /* Return true to indicate that a context switch is required.
4205:Middlewares/FreeRTOS/tasks.c ****                      * This is only actually required in the corner case whereby
4206:Middlewares/FreeRTOS/tasks.c ****                      * multiple mutexes were held and the mutexes were given back
4207:Middlewares/FreeRTOS/tasks.c ****                      * in an order different to that in which they were taken.
4208:Middlewares/FreeRTOS/tasks.c ****                      * If a context switch did not occur when the first mutex was
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 96


4209:Middlewares/FreeRTOS/tasks.c ****                      * returned, even if a task was waiting on it, then a context
4210:Middlewares/FreeRTOS/tasks.c ****                      * switch should occur when the last mutex is returned whether
4211:Middlewares/FreeRTOS/tasks.c ****                      * a task is waiting on it or not. */
4212:Middlewares/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
4213:Middlewares/FreeRTOS/tasks.c ****                 }
4214:Middlewares/FreeRTOS/tasks.c ****                 else
4215:Middlewares/FreeRTOS/tasks.c ****                 {
4216:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4217:Middlewares/FreeRTOS/tasks.c ****                 }
4218:Middlewares/FreeRTOS/tasks.c ****             }
4219:Middlewares/FreeRTOS/tasks.c ****             else
4220:Middlewares/FreeRTOS/tasks.c ****             {
4221:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4222:Middlewares/FreeRTOS/tasks.c ****             }
4223:Middlewares/FreeRTOS/tasks.c ****         }
4224:Middlewares/FreeRTOS/tasks.c ****         else
4225:Middlewares/FreeRTOS/tasks.c ****         {
4226:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4227:Middlewares/FreeRTOS/tasks.c ****         }
4228:Middlewares/FreeRTOS/tasks.c **** 
4229:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
4230:Middlewares/FreeRTOS/tasks.c ****     }
4231:Middlewares/FreeRTOS/tasks.c **** 
4232:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4233:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4234:Middlewares/FreeRTOS/tasks.c **** 
4235:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4236:Middlewares/FreeRTOS/tasks.c **** 
4237:Middlewares/FreeRTOS/tasks.c ****     void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder,
4238:Middlewares/FreeRTOS/tasks.c ****                                               UBaseType_t uxHighestPriorityWaitingTask )
4239:Middlewares/FreeRTOS/tasks.c ****     {
4240:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4241:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4242:Middlewares/FreeRTOS/tasks.c ****         const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4243:Middlewares/FreeRTOS/tasks.c **** 
4244:Middlewares/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
4245:Middlewares/FreeRTOS/tasks.c ****         {
4246:Middlewares/FreeRTOS/tasks.c ****             /* If pxMutexHolder is not NULL then the holder must hold at least
4247:Middlewares/FreeRTOS/tasks.c ****              * one mutex. */
4248:Middlewares/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4249:Middlewares/FreeRTOS/tasks.c **** 
4250:Middlewares/FreeRTOS/tasks.c ****             /* Determine the priority to which the priority of the task that
4251:Middlewares/FreeRTOS/tasks.c ****              * holds the mutex should be set.  This will be the greater of the
4252:Middlewares/FreeRTOS/tasks.c ****              * holding task's base priority and the priority of the highest
4253:Middlewares/FreeRTOS/tasks.c ****              * priority task that is waiting to obtain the mutex. */
4254:Middlewares/FreeRTOS/tasks.c ****             if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4255:Middlewares/FreeRTOS/tasks.c ****             {
4256:Middlewares/FreeRTOS/tasks.c ****                 uxPriorityToUse = uxHighestPriorityWaitingTask;
4257:Middlewares/FreeRTOS/tasks.c ****             }
4258:Middlewares/FreeRTOS/tasks.c ****             else
4259:Middlewares/FreeRTOS/tasks.c ****             {
4260:Middlewares/FreeRTOS/tasks.c ****                 uxPriorityToUse = pxTCB->uxBasePriority;
4261:Middlewares/FreeRTOS/tasks.c ****             }
4262:Middlewares/FreeRTOS/tasks.c **** 
4263:Middlewares/FreeRTOS/tasks.c ****             /* Does the priority need to change? */
4264:Middlewares/FreeRTOS/tasks.c ****             if( pxTCB->uxPriority != uxPriorityToUse )
4265:Middlewares/FreeRTOS/tasks.c ****             {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 97


4266:Middlewares/FreeRTOS/tasks.c ****                 /* Only disinherit if no other mutexes are held.  This is a
4267:Middlewares/FreeRTOS/tasks.c ****                  * simplification in the priority inheritance implementation.  If
4268:Middlewares/FreeRTOS/tasks.c ****                  * the task that holds the mutex is also holding other mutexes then
4269:Middlewares/FreeRTOS/tasks.c ****                  * the other mutexes may have caused the priority inheritance. */
4270:Middlewares/FreeRTOS/tasks.c ****                 if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4271:Middlewares/FreeRTOS/tasks.c ****                 {
4272:Middlewares/FreeRTOS/tasks.c ****                     /* If a task has timed out because it already holds the
4273:Middlewares/FreeRTOS/tasks.c ****                      * mutex it was trying to obtain then it cannot of inherited
4274:Middlewares/FreeRTOS/tasks.c ****                      * its own priority. */
4275:Middlewares/FreeRTOS/tasks.c ****                     configASSERT( pxTCB != pxCurrentTCB );
4276:Middlewares/FreeRTOS/tasks.c **** 
4277:Middlewares/FreeRTOS/tasks.c ****                     /* Disinherit the priority, remembering the previous
4278:Middlewares/FreeRTOS/tasks.c ****                      * priority to facilitate determining the subject task's
4279:Middlewares/FreeRTOS/tasks.c ****                      * state. */
4280:Middlewares/FreeRTOS/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, uxPriorityToUse );
4281:Middlewares/FreeRTOS/tasks.c ****                     uxPriorityUsedOnEntry = pxTCB->uxPriority;
4282:Middlewares/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxPriorityToUse;
4283:Middlewares/FreeRTOS/tasks.c **** 
4284:Middlewares/FreeRTOS/tasks.c ****                     /* Only reset the event list item value if the value is not
4285:Middlewares/FreeRTOS/tasks.c ****                      * being used for anything else. */
4286:Middlewares/FreeRTOS/tasks.c ****                     if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_IT
4287:Middlewares/FreeRTOS/tasks.c ****                     {
4288:Middlewares/FreeRTOS/tasks.c ****                         listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configM
4289:Middlewares/FreeRTOS/tasks.c ****                     }
4290:Middlewares/FreeRTOS/tasks.c ****                     else
4291:Middlewares/FreeRTOS/tasks.c ****                     {
4292:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4293:Middlewares/FreeRTOS/tasks.c ****                     }
4294:Middlewares/FreeRTOS/tasks.c **** 
4295:Middlewares/FreeRTOS/tasks.c ****                     /* If the running task is not the task that holds the mutex
4296:Middlewares/FreeRTOS/tasks.c ****                      * then the task that holds the mutex could be in either the
4297:Middlewares/FreeRTOS/tasks.c ****                      * Ready, Blocked or Suspended states.  Only remove the task
4298:Middlewares/FreeRTOS/tasks.c ****                      * from its current state list if it is in the Ready state as
4299:Middlewares/FreeRTOS/tasks.c ****                      * the task's priority is going to change and there is one
4300:Middlewares/FreeRTOS/tasks.c ****                      * Ready list per priority. */
4301:Middlewares/FreeRTOS/tasks.c ****                     if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &
4302:Middlewares/FreeRTOS/tasks.c ****                     {
4303:Middlewares/FreeRTOS/tasks.c ****                         if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4304:Middlewares/FreeRTOS/tasks.c ****                         {
4305:Middlewares/FreeRTOS/tasks.c ****                             /* It is known that the task is in its ready list so
4306:Middlewares/FreeRTOS/tasks.c ****                              * there is no need to check again and the port level
4307:Middlewares/FreeRTOS/tasks.c ****                              * reset macro can be called directly. */
4308:Middlewares/FreeRTOS/tasks.c ****                             portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4309:Middlewares/FreeRTOS/tasks.c ****                         }
4310:Middlewares/FreeRTOS/tasks.c ****                         else
4311:Middlewares/FreeRTOS/tasks.c ****                         {
4312:Middlewares/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
4313:Middlewares/FreeRTOS/tasks.c ****                         }
4314:Middlewares/FreeRTOS/tasks.c **** 
4315:Middlewares/FreeRTOS/tasks.c ****                         prvAddTaskToReadyList( pxTCB );
4316:Middlewares/FreeRTOS/tasks.c ****                     }
4317:Middlewares/FreeRTOS/tasks.c ****                     else
4318:Middlewares/FreeRTOS/tasks.c ****                     {
4319:Middlewares/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4320:Middlewares/FreeRTOS/tasks.c ****                     }
4321:Middlewares/FreeRTOS/tasks.c ****                 }
4322:Middlewares/FreeRTOS/tasks.c ****                 else
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 98


4323:Middlewares/FreeRTOS/tasks.c ****                 {
4324:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4325:Middlewares/FreeRTOS/tasks.c ****                 }
4326:Middlewares/FreeRTOS/tasks.c ****             }
4327:Middlewares/FreeRTOS/tasks.c ****             else
4328:Middlewares/FreeRTOS/tasks.c ****             {
4329:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4330:Middlewares/FreeRTOS/tasks.c ****             }
4331:Middlewares/FreeRTOS/tasks.c ****         }
4332:Middlewares/FreeRTOS/tasks.c ****         else
4333:Middlewares/FreeRTOS/tasks.c ****         {
4334:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4335:Middlewares/FreeRTOS/tasks.c ****         }
4336:Middlewares/FreeRTOS/tasks.c ****     }
4337:Middlewares/FreeRTOS/tasks.c **** 
4338:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4339:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4340:Middlewares/FreeRTOS/tasks.c **** 
4341:Middlewares/FreeRTOS/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4342:Middlewares/FreeRTOS/tasks.c **** 
4343:Middlewares/FreeRTOS/tasks.c ****     void vTaskEnterCritical( void )
4344:Middlewares/FreeRTOS/tasks.c ****     {
4345:Middlewares/FreeRTOS/tasks.c ****         portDISABLE_INTERRUPTS();
4346:Middlewares/FreeRTOS/tasks.c **** 
4347:Middlewares/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4348:Middlewares/FreeRTOS/tasks.c ****         {
4349:Middlewares/FreeRTOS/tasks.c ****             ( pxCurrentTCB->uxCriticalNesting )++;
4350:Middlewares/FreeRTOS/tasks.c **** 
4351:Middlewares/FreeRTOS/tasks.c ****             /* This is not the interrupt safe version of the enter critical
4352:Middlewares/FreeRTOS/tasks.c ****              * function so  assert() if it is being called from an interrupt
4353:Middlewares/FreeRTOS/tasks.c ****              * context.  Only API functions that end in "FromISR" can be used in an
4354:Middlewares/FreeRTOS/tasks.c ****              * interrupt.  Only assert if the critical nesting count is 1 to
4355:Middlewares/FreeRTOS/tasks.c ****              * protect against recursive calls if the assert function also uses a
4356:Middlewares/FreeRTOS/tasks.c ****              * critical section. */
4357:Middlewares/FreeRTOS/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting == 1 )
4358:Middlewares/FreeRTOS/tasks.c ****             {
4359:Middlewares/FreeRTOS/tasks.c ****                 portASSERT_IF_IN_ISR();
4360:Middlewares/FreeRTOS/tasks.c ****             }
4361:Middlewares/FreeRTOS/tasks.c ****         }
4362:Middlewares/FreeRTOS/tasks.c ****         else
4363:Middlewares/FreeRTOS/tasks.c ****         {
4364:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4365:Middlewares/FreeRTOS/tasks.c ****         }
4366:Middlewares/FreeRTOS/tasks.c ****     }
4367:Middlewares/FreeRTOS/tasks.c **** 
4368:Middlewares/FreeRTOS/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4369:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4370:Middlewares/FreeRTOS/tasks.c **** 
4371:Middlewares/FreeRTOS/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4372:Middlewares/FreeRTOS/tasks.c **** 
4373:Middlewares/FreeRTOS/tasks.c ****     void vTaskExitCritical( void )
4374:Middlewares/FreeRTOS/tasks.c ****     {
4375:Middlewares/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4376:Middlewares/FreeRTOS/tasks.c ****         {
4377:Middlewares/FreeRTOS/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting > 0U )
4378:Middlewares/FreeRTOS/tasks.c ****             {
4379:Middlewares/FreeRTOS/tasks.c ****                 ( pxCurrentTCB->uxCriticalNesting )--;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 99


4380:Middlewares/FreeRTOS/tasks.c **** 
4381:Middlewares/FreeRTOS/tasks.c ****                 if( pxCurrentTCB->uxCriticalNesting == 0U )
4382:Middlewares/FreeRTOS/tasks.c ****                 {
4383:Middlewares/FreeRTOS/tasks.c ****                     portENABLE_INTERRUPTS();
4384:Middlewares/FreeRTOS/tasks.c ****                 }
4385:Middlewares/FreeRTOS/tasks.c ****                 else
4386:Middlewares/FreeRTOS/tasks.c ****                 {
4387:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4388:Middlewares/FreeRTOS/tasks.c ****                 }
4389:Middlewares/FreeRTOS/tasks.c ****             }
4390:Middlewares/FreeRTOS/tasks.c ****             else
4391:Middlewares/FreeRTOS/tasks.c ****             {
4392:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4393:Middlewares/FreeRTOS/tasks.c ****             }
4394:Middlewares/FreeRTOS/tasks.c ****         }
4395:Middlewares/FreeRTOS/tasks.c ****         else
4396:Middlewares/FreeRTOS/tasks.c ****         {
4397:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4398:Middlewares/FreeRTOS/tasks.c ****         }
4399:Middlewares/FreeRTOS/tasks.c ****     }
4400:Middlewares/FreeRTOS/tasks.c **** 
4401:Middlewares/FreeRTOS/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4402:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4403:Middlewares/FreeRTOS/tasks.c **** 
4404:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 )
4405:Middlewares/FreeRTOS/tasks.c **** 
4406:Middlewares/FreeRTOS/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
4407:Middlewares/FreeRTOS/tasks.c ****                                         const char * pcTaskName )
4408:Middlewares/FreeRTOS/tasks.c ****     {
4409:Middlewares/FreeRTOS/tasks.c ****         size_t x;
4410:Middlewares/FreeRTOS/tasks.c **** 
4411:Middlewares/FreeRTOS/tasks.c ****         /* Start by copying the entire string. */
4412:Middlewares/FreeRTOS/tasks.c ****         strcpy( pcBuffer, pcTaskName );
4413:Middlewares/FreeRTOS/tasks.c **** 
4414:Middlewares/FreeRTOS/tasks.c ****         /* Pad the end of the string with spaces to ensure columns line up when
4415:Middlewares/FreeRTOS/tasks.c ****          * printed out. */
4416:Middlewares/FreeRTOS/tasks.c ****         for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4417:Middlewares/FreeRTOS/tasks.c ****         {
4418:Middlewares/FreeRTOS/tasks.c ****             pcBuffer[ x ] = ' ';
4419:Middlewares/FreeRTOS/tasks.c ****         }
4420:Middlewares/FreeRTOS/tasks.c **** 
4421:Middlewares/FreeRTOS/tasks.c ****         /* Terminate. */
4422:Middlewares/FreeRTOS/tasks.c ****         pcBuffer[ x ] = ( char ) 0x00;
4423:Middlewares/FreeRTOS/tasks.c **** 
4424:Middlewares/FreeRTOS/tasks.c ****         /* Return the new end of string. */
4425:Middlewares/FreeRTOS/tasks.c ****         return &( pcBuffer[ x ] );
4426:Middlewares/FreeRTOS/tasks.c ****     }
4427:Middlewares/FreeRTOS/tasks.c **** 
4428:Middlewares/FreeRTOS/tasks.c **** #endif /* ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4429:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4430:Middlewares/FreeRTOS/tasks.c **** 
4431:Middlewares/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4432:Middlewares/FreeRTOS/tasks.c **** 
4433:Middlewares/FreeRTOS/tasks.c ****     void vTaskList( char * pcWriteBuffer )
4434:Middlewares/FreeRTOS/tasks.c ****     {
4435:Middlewares/FreeRTOS/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4436:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxArraySize, x;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 100


4437:Middlewares/FreeRTOS/tasks.c ****         char cStatus;
4438:Middlewares/FreeRTOS/tasks.c **** 
4439:Middlewares/FreeRTOS/tasks.c ****         /*
4440:Middlewares/FreeRTOS/tasks.c ****          * PLEASE NOTE:
4441:Middlewares/FreeRTOS/tasks.c ****          *
4442:Middlewares/FreeRTOS/tasks.c ****          * This function is provided for convenience only, and is used by many
4443:Middlewares/FreeRTOS/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4444:Middlewares/FreeRTOS/tasks.c ****          * scheduler.
4445:Middlewares/FreeRTOS/tasks.c ****          *
4446:Middlewares/FreeRTOS/tasks.c ****          * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4447:Middlewares/FreeRTOS/tasks.c ****          * uxTaskGetSystemState() output into a human readable table that
4448:Middlewares/FreeRTOS/tasks.c ****          * displays task: names, states, priority, stack usage and task number.
4449:Middlewares/FreeRTOS/tasks.c ****          * Stack usage specified as the number of unused StackType_t words stack can hold
4450:Middlewares/FreeRTOS/tasks.c ****          * on top of stack - not the number of bytes.
4451:Middlewares/FreeRTOS/tasks.c ****          *
4452:Middlewares/FreeRTOS/tasks.c ****          * vTaskList() has a dependency on the sprintf() C library function that
4453:Middlewares/FreeRTOS/tasks.c ****          * might bloat the code size, use a lot of stack, and provide different
4454:Middlewares/FreeRTOS/tasks.c ****          * results on different platforms.  An alternative, tiny, third party,
4455:Middlewares/FreeRTOS/tasks.c ****          * and limited functionality implementation of sprintf() is provided in
4456:Middlewares/FreeRTOS/tasks.c ****          * many of the FreeRTOS/Demo sub-directories in a file called
4457:Middlewares/FreeRTOS/tasks.c ****          * printf-stdarg.c (note printf-stdarg.c does not provide a full
4458:Middlewares/FreeRTOS/tasks.c ****          * snprintf() implementation!).
4459:Middlewares/FreeRTOS/tasks.c ****          *
4460:Middlewares/FreeRTOS/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4461:Middlewares/FreeRTOS/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4462:Middlewares/FreeRTOS/tasks.c ****          * through a call to vTaskList().
4463:Middlewares/FreeRTOS/tasks.c ****          */
4464:Middlewares/FreeRTOS/tasks.c **** 
4465:Middlewares/FreeRTOS/tasks.c **** 
4466:Middlewares/FreeRTOS/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4467:Middlewares/FreeRTOS/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4468:Middlewares/FreeRTOS/tasks.c **** 
4469:Middlewares/FreeRTOS/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4470:Middlewares/FreeRTOS/tasks.c ****          * function is executing. */
4471:Middlewares/FreeRTOS/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4472:Middlewares/FreeRTOS/tasks.c **** 
4473:Middlewares/FreeRTOS/tasks.c ****         /* Allocate an array index for each task.  NOTE!  if
4474:Middlewares/FreeRTOS/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4475:Middlewares/FreeRTOS/tasks.c ****          * equate to NULL. */
4476:Middlewares/FreeRTOS/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4477:Middlewares/FreeRTOS/tasks.c **** 
4478:Middlewares/FreeRTOS/tasks.c ****         if( pxTaskStatusArray != NULL )
4479:Middlewares/FreeRTOS/tasks.c ****         {
4480:Middlewares/FreeRTOS/tasks.c ****             /* Generate the (binary) data. */
4481:Middlewares/FreeRTOS/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4482:Middlewares/FreeRTOS/tasks.c **** 
4483:Middlewares/FreeRTOS/tasks.c ****             /* Create a human readable table from the binary data. */
4484:Middlewares/FreeRTOS/tasks.c ****             for( x = 0; x < uxArraySize; x++ )
4485:Middlewares/FreeRTOS/tasks.c ****             {
4486:Middlewares/FreeRTOS/tasks.c ****                 switch( pxTaskStatusArray[ x ].eCurrentState )
4487:Middlewares/FreeRTOS/tasks.c ****                 {
4488:Middlewares/FreeRTOS/tasks.c ****                     case eRunning:
4489:Middlewares/FreeRTOS/tasks.c ****                         cStatus = tskRUNNING_CHAR;
4490:Middlewares/FreeRTOS/tasks.c ****                         break;
4491:Middlewares/FreeRTOS/tasks.c **** 
4492:Middlewares/FreeRTOS/tasks.c ****                     case eReady:
4493:Middlewares/FreeRTOS/tasks.c ****                         cStatus = tskREADY_CHAR;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 101


4494:Middlewares/FreeRTOS/tasks.c ****                         break;
4495:Middlewares/FreeRTOS/tasks.c **** 
4496:Middlewares/FreeRTOS/tasks.c ****                     case eBlocked:
4497:Middlewares/FreeRTOS/tasks.c ****                         cStatus = tskBLOCKED_CHAR;
4498:Middlewares/FreeRTOS/tasks.c ****                         break;
4499:Middlewares/FreeRTOS/tasks.c **** 
4500:Middlewares/FreeRTOS/tasks.c ****                     case eSuspended:
4501:Middlewares/FreeRTOS/tasks.c ****                         cStatus = tskSUSPENDED_CHAR;
4502:Middlewares/FreeRTOS/tasks.c ****                         break;
4503:Middlewares/FreeRTOS/tasks.c **** 
4504:Middlewares/FreeRTOS/tasks.c ****                     case eDeleted:
4505:Middlewares/FreeRTOS/tasks.c ****                         cStatus = tskDELETED_CHAR;
4506:Middlewares/FreeRTOS/tasks.c ****                         break;
4507:Middlewares/FreeRTOS/tasks.c **** 
4508:Middlewares/FreeRTOS/tasks.c ****                     case eInvalid: /* Fall through. */
4509:Middlewares/FreeRTOS/tasks.c ****                     default:       /* Should not get here, but it is included
4510:Middlewares/FreeRTOS/tasks.c ****                                     * to prevent static checking errors. */
4511:Middlewares/FreeRTOS/tasks.c ****                         cStatus = ( char ) 0x00;
4512:Middlewares/FreeRTOS/tasks.c ****                         break;
4513:Middlewares/FreeRTOS/tasks.c ****                 }
4514:Middlewares/FreeRTOS/tasks.c **** 
4515:Middlewares/FreeRTOS/tasks.c ****                 /* Write the task name to the string, padding with spaces so it
4516:Middlewares/FreeRTOS/tasks.c ****                  * can be printed in tabular form more easily. */
4517:Middlewares/FreeRTOS/tasks.c ****                 pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskN
4518:Middlewares/FreeRTOS/tasks.c **** 
4519:Middlewares/FreeRTOS/tasks.c ****                 /* Write the rest of the string. */
4520:Middlewares/FreeRTOS/tasks.c ****                 sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskSta
4521:Middlewares/FreeRTOS/tasks.c ****                 pcWriteBuffer += strlen( pcWriteBuffer );                                          
4522:Middlewares/FreeRTOS/tasks.c ****             }
4523:Middlewares/FreeRTOS/tasks.c **** 
4524:Middlewares/FreeRTOS/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4525:Middlewares/FreeRTOS/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4526:Middlewares/FreeRTOS/tasks.c ****             vPortFree( pxTaskStatusArray );
4527:Middlewares/FreeRTOS/tasks.c ****         }
4528:Middlewares/FreeRTOS/tasks.c ****         else
4529:Middlewares/FreeRTOS/tasks.c ****         {
4530:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4531:Middlewares/FreeRTOS/tasks.c ****         }
4532:Middlewares/FreeRTOS/tasks.c ****     }
4533:Middlewares/FreeRTOS/tasks.c **** 
4534:Middlewares/FreeRTOS/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4535:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
4536:Middlewares/FreeRTOS/tasks.c **** 
4537:Middlewares/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4538:Middlewares/FreeRTOS/tasks.c **** 
4539:Middlewares/FreeRTOS/tasks.c ****     void vTaskGetRunTimeStats( char * pcWriteBuffer )
4540:Middlewares/FreeRTOS/tasks.c ****     {
4541:Middlewares/FreeRTOS/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4542:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxArraySize, x;
4543:Middlewares/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulTotalTime, ulStatsAsPercentage;
4544:Middlewares/FreeRTOS/tasks.c **** 
4545:Middlewares/FreeRTOS/tasks.c ****         /*
4546:Middlewares/FreeRTOS/tasks.c ****          * PLEASE NOTE:
4547:Middlewares/FreeRTOS/tasks.c ****          *
4548:Middlewares/FreeRTOS/tasks.c ****          * This function is provided for convenience only, and is used by many
4549:Middlewares/FreeRTOS/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4550:Middlewares/FreeRTOS/tasks.c ****          * scheduler.
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 102


4551:Middlewares/FreeRTOS/tasks.c ****          *
4552:Middlewares/FreeRTOS/tasks.c ****          * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4553:Middlewares/FreeRTOS/tasks.c ****          * of the uxTaskGetSystemState() output into a human readable table that
4554:Middlewares/FreeRTOS/tasks.c ****          * displays the amount of time each task has spent in the Running state
4555:Middlewares/FreeRTOS/tasks.c ****          * in both absolute and percentage terms.
4556:Middlewares/FreeRTOS/tasks.c ****          *
4557:Middlewares/FreeRTOS/tasks.c ****          * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4558:Middlewares/FreeRTOS/tasks.c ****          * function that might bloat the code size, use a lot of stack, and
4559:Middlewares/FreeRTOS/tasks.c ****          * provide different results on different platforms.  An alternative,
4560:Middlewares/FreeRTOS/tasks.c ****          * tiny, third party, and limited functionality implementation of
4561:Middlewares/FreeRTOS/tasks.c ****          * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4562:Middlewares/FreeRTOS/tasks.c ****          * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4563:Middlewares/FreeRTOS/tasks.c ****          * a full snprintf() implementation!).
4564:Middlewares/FreeRTOS/tasks.c ****          *
4565:Middlewares/FreeRTOS/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4566:Middlewares/FreeRTOS/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4567:Middlewares/FreeRTOS/tasks.c ****          * through a call to vTaskGetRunTimeStats().
4568:Middlewares/FreeRTOS/tasks.c ****          */
4569:Middlewares/FreeRTOS/tasks.c **** 
4570:Middlewares/FreeRTOS/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4571:Middlewares/FreeRTOS/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4572:Middlewares/FreeRTOS/tasks.c **** 
4573:Middlewares/FreeRTOS/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4574:Middlewares/FreeRTOS/tasks.c ****          * function is executing. */
4575:Middlewares/FreeRTOS/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4576:Middlewares/FreeRTOS/tasks.c **** 
4577:Middlewares/FreeRTOS/tasks.c ****         /* Allocate an array index for each task.  NOTE!  If
4578:Middlewares/FreeRTOS/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4579:Middlewares/FreeRTOS/tasks.c ****          * equate to NULL. */
4580:Middlewares/FreeRTOS/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4581:Middlewares/FreeRTOS/tasks.c **** 
4582:Middlewares/FreeRTOS/tasks.c ****         if( pxTaskStatusArray != NULL )
4583:Middlewares/FreeRTOS/tasks.c ****         {
4584:Middlewares/FreeRTOS/tasks.c ****             /* Generate the (binary) data. */
4585:Middlewares/FreeRTOS/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4586:Middlewares/FreeRTOS/tasks.c **** 
4587:Middlewares/FreeRTOS/tasks.c ****             /* For percentage calculations. */
4588:Middlewares/FreeRTOS/tasks.c ****             ulTotalTime /= 100UL;
4589:Middlewares/FreeRTOS/tasks.c **** 
4590:Middlewares/FreeRTOS/tasks.c ****             /* Avoid divide by zero errors. */
4591:Middlewares/FreeRTOS/tasks.c ****             if( ulTotalTime > 0UL )
4592:Middlewares/FreeRTOS/tasks.c ****             {
4593:Middlewares/FreeRTOS/tasks.c ****                 /* Create a human readable table from the binary data. */
4594:Middlewares/FreeRTOS/tasks.c ****                 for( x = 0; x < uxArraySize; x++ )
4595:Middlewares/FreeRTOS/tasks.c ****                 {
4596:Middlewares/FreeRTOS/tasks.c ****                     /* What percentage of the total run time has the task used?
4597:Middlewares/FreeRTOS/tasks.c ****                      * This will always be rounded down to the nearest integer.
4598:Middlewares/FreeRTOS/tasks.c ****                      * ulTotalRunTime has already been divided by 100. */
4599:Middlewares/FreeRTOS/tasks.c ****                     ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4600:Middlewares/FreeRTOS/tasks.c **** 
4601:Middlewares/FreeRTOS/tasks.c ****                     /* Write the task name to the string, padding with
4602:Middlewares/FreeRTOS/tasks.c ****                      * spaces so it can be printed in tabular form more
4603:Middlewares/FreeRTOS/tasks.c ****                      * easily. */
4604:Middlewares/FreeRTOS/tasks.c ****                     pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcT
4605:Middlewares/FreeRTOS/tasks.c **** 
4606:Middlewares/FreeRTOS/tasks.c ****                     if( ulStatsAsPercentage > 0UL )
4607:Middlewares/FreeRTOS/tasks.c ****                     {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 103


4608:Middlewares/FreeRTOS/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4609:Middlewares/FreeRTOS/tasks.c ****                         {
4610:Middlewares/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ul
4611:Middlewares/FreeRTOS/tasks.c ****                         }
4612:Middlewares/FreeRTOS/tasks.c ****                         #else
4613:Middlewares/FreeRTOS/tasks.c ****                         {
4614:Middlewares/FreeRTOS/tasks.c ****                             /* sizeof( int ) == sizeof( long ) so a smaller
4615:Middlewares/FreeRTOS/tasks.c ****                              * printf() library can be used. */
4616:Middlewares/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStat
4617:Middlewares/FreeRTOS/tasks.c ****                         }
4618:Middlewares/FreeRTOS/tasks.c ****                         #endif
4619:Middlewares/FreeRTOS/tasks.c ****                     }
4620:Middlewares/FreeRTOS/tasks.c ****                     else
4621:Middlewares/FreeRTOS/tasks.c ****                     {
4622:Middlewares/FreeRTOS/tasks.c ****                         /* If the percentage is zero here then the task has
4623:Middlewares/FreeRTOS/tasks.c ****                          * consumed less than 1% of the total run time. */
4624:Middlewares/FreeRTOS/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4625:Middlewares/FreeRTOS/tasks.c ****                         {
4626:Middlewares/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulR
4627:Middlewares/FreeRTOS/tasks.c ****                         }
4628:Middlewares/FreeRTOS/tasks.c ****                         #else
4629:Middlewares/FreeRTOS/tasks.c ****                         {
4630:Middlewares/FreeRTOS/tasks.c ****                             /* sizeof( int ) == sizeof( long ) so a smaller
4631:Middlewares/FreeRTOS/tasks.c ****                              * printf() library can be used. */
4632:Middlewares/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStat
4633:Middlewares/FreeRTOS/tasks.c ****                         }
4634:Middlewares/FreeRTOS/tasks.c ****                         #endif
4635:Middlewares/FreeRTOS/tasks.c ****                     }
4636:Middlewares/FreeRTOS/tasks.c **** 
4637:Middlewares/FreeRTOS/tasks.c ****                     pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok o
4638:Middlewares/FreeRTOS/tasks.c ****                 }
4639:Middlewares/FreeRTOS/tasks.c ****             }
4640:Middlewares/FreeRTOS/tasks.c ****             else
4641:Middlewares/FreeRTOS/tasks.c ****             {
4642:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4643:Middlewares/FreeRTOS/tasks.c ****             }
4644:Middlewares/FreeRTOS/tasks.c **** 
4645:Middlewares/FreeRTOS/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4646:Middlewares/FreeRTOS/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4647:Middlewares/FreeRTOS/tasks.c ****             vPortFree( pxTaskStatusArray );
4648:Middlewares/FreeRTOS/tasks.c ****         }
4649:Middlewares/FreeRTOS/tasks.c ****         else
4650:Middlewares/FreeRTOS/tasks.c ****         {
4651:Middlewares/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4652:Middlewares/FreeRTOS/tasks.c ****         }
4653:Middlewares/FreeRTOS/tasks.c ****     }
4654:Middlewares/FreeRTOS/tasks.c **** 
4655:Middlewares/FreeRTOS/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4656:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4657:Middlewares/FreeRTOS/tasks.c **** 
4658:Middlewares/FreeRTOS/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4659:Middlewares/FreeRTOS/tasks.c **** {
4660:Middlewares/FreeRTOS/tasks.c ****     TickType_t uxReturn;
4661:Middlewares/FreeRTOS/tasks.c **** 
4662:Middlewares/FreeRTOS/tasks.c ****     uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4663:Middlewares/FreeRTOS/tasks.c **** 
4664:Middlewares/FreeRTOS/tasks.c ****     /* Reset the event list item to its normal value - so it can be used with
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 104


4665:Middlewares/FreeRTOS/tasks.c ****      * queues and semaphores. */
4666:Middlewares/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITI
4667:Middlewares/FreeRTOS/tasks.c **** 
4668:Middlewares/FreeRTOS/tasks.c ****     return uxReturn;
4669:Middlewares/FreeRTOS/tasks.c **** }
4670:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4671:Middlewares/FreeRTOS/tasks.c **** 
4672:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4673:Middlewares/FreeRTOS/tasks.c **** 
4674:Middlewares/FreeRTOS/tasks.c ****     TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4675:Middlewares/FreeRTOS/tasks.c ****     {
4676:Middlewares/FreeRTOS/tasks.c ****         /* If xSemaphoreCreateMutex() is called before any tasks have been created
4677:Middlewares/FreeRTOS/tasks.c ****          * then pxCurrentTCB will be NULL. */
4678:Middlewares/FreeRTOS/tasks.c ****         if( pxCurrentTCB != NULL )
4679:Middlewares/FreeRTOS/tasks.c ****         {
4680:Middlewares/FreeRTOS/tasks.c ****             ( pxCurrentTCB->uxMutexesHeld )++;
4681:Middlewares/FreeRTOS/tasks.c ****         }
4682:Middlewares/FreeRTOS/tasks.c **** 
4683:Middlewares/FreeRTOS/tasks.c ****         return pxCurrentTCB;
4684:Middlewares/FreeRTOS/tasks.c ****     }
4685:Middlewares/FreeRTOS/tasks.c **** 
4686:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4687:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4688:Middlewares/FreeRTOS/tasks.c **** 
4689:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4690:Middlewares/FreeRTOS/tasks.c **** 
4691:Middlewares/FreeRTOS/tasks.c ****     uint32_t ulTaskGenericNotifyTake( UBaseType_t uxIndexToWait,
4692:Middlewares/FreeRTOS/tasks.c ****                                       BaseType_t xClearCountOnExit,
4693:Middlewares/FreeRTOS/tasks.c ****                                       TickType_t xTicksToWait )
4694:Middlewares/FreeRTOS/tasks.c ****     {
4695:Middlewares/FreeRTOS/tasks.c ****         uint32_t ulReturn;
4696:Middlewares/FreeRTOS/tasks.c **** 
4697:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4698:Middlewares/FreeRTOS/tasks.c **** 
4699:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4700:Middlewares/FreeRTOS/tasks.c ****         {
4701:Middlewares/FreeRTOS/tasks.c ****             /* Only block if the notification count is not already non-zero. */
4702:Middlewares/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] == 0UL )
4703:Middlewares/FreeRTOS/tasks.c ****             {
4704:Middlewares/FreeRTOS/tasks.c ****                 /* Mark this task as waiting for a notification. */
4705:Middlewares/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4706:Middlewares/FreeRTOS/tasks.c **** 
4707:Middlewares/FreeRTOS/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
4708:Middlewares/FreeRTOS/tasks.c ****                 {
4709:Middlewares/FreeRTOS/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4710:Middlewares/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
4711:Middlewares/FreeRTOS/tasks.c **** 
4712:Middlewares/FreeRTOS/tasks.c ****                     /* All ports are written to allow a yield in a critical
4713:Middlewares/FreeRTOS/tasks.c ****                      * section (some will yield immediately, others wait until the
4714:Middlewares/FreeRTOS/tasks.c ****                      * critical section exits) - but it is not something that
4715:Middlewares/FreeRTOS/tasks.c ****                      * application code should ever do. */
4716:Middlewares/FreeRTOS/tasks.c ****                     portYIELD_WITHIN_API();
4717:Middlewares/FreeRTOS/tasks.c ****                 }
4718:Middlewares/FreeRTOS/tasks.c ****                 else
4719:Middlewares/FreeRTOS/tasks.c ****                 {
4720:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4721:Middlewares/FreeRTOS/tasks.c ****                 }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 105


4722:Middlewares/FreeRTOS/tasks.c ****             }
4723:Middlewares/FreeRTOS/tasks.c ****             else
4724:Middlewares/FreeRTOS/tasks.c ****             {
4725:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4726:Middlewares/FreeRTOS/tasks.c ****             }
4727:Middlewares/FreeRTOS/tasks.c ****         }
4728:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4729:Middlewares/FreeRTOS/tasks.c **** 
4730:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4731:Middlewares/FreeRTOS/tasks.c ****         {
4732:Middlewares/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_TAKE( uxIndexToWait );
4733:Middlewares/FreeRTOS/tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4734:Middlewares/FreeRTOS/tasks.c **** 
4735:Middlewares/FreeRTOS/tasks.c ****             if( ulReturn != 0UL )
4736:Middlewares/FreeRTOS/tasks.c ****             {
4737:Middlewares/FreeRTOS/tasks.c ****                 if( xClearCountOnExit != pdFALSE )
4738:Middlewares/FreeRTOS/tasks.c ****                 {
4739:Middlewares/FreeRTOS/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = 0UL;
4740:Middlewares/FreeRTOS/tasks.c ****                 }
4741:Middlewares/FreeRTOS/tasks.c ****                 else
4742:Middlewares/FreeRTOS/tasks.c ****                 {
4743:Middlewares/FreeRTOS/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = ulReturn - ( uint32_t ) 1;
4744:Middlewares/FreeRTOS/tasks.c ****                 }
4745:Middlewares/FreeRTOS/tasks.c ****             }
4746:Middlewares/FreeRTOS/tasks.c ****             else
4747:Middlewares/FreeRTOS/tasks.c ****             {
4748:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4749:Middlewares/FreeRTOS/tasks.c ****             }
4750:Middlewares/FreeRTOS/tasks.c **** 
4751:Middlewares/FreeRTOS/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4752:Middlewares/FreeRTOS/tasks.c ****         }
4753:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4754:Middlewares/FreeRTOS/tasks.c **** 
4755:Middlewares/FreeRTOS/tasks.c ****         return ulReturn;
4756:Middlewares/FreeRTOS/tasks.c ****     }
4757:Middlewares/FreeRTOS/tasks.c **** 
4758:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4759:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4760:Middlewares/FreeRTOS/tasks.c **** 
4761:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4762:Middlewares/FreeRTOS/tasks.c **** 
4763:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyWait( UBaseType_t uxIndexToWait,
4764:Middlewares/FreeRTOS/tasks.c ****                                        uint32_t ulBitsToClearOnEntry,
4765:Middlewares/FreeRTOS/tasks.c ****                                        uint32_t ulBitsToClearOnExit,
4766:Middlewares/FreeRTOS/tasks.c ****                                        uint32_t * pulNotificationValue,
4767:Middlewares/FreeRTOS/tasks.c ****                                        TickType_t xTicksToWait )
4768:Middlewares/FreeRTOS/tasks.c ****     {
4769:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn;
4770:Middlewares/FreeRTOS/tasks.c **** 
4771:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4772:Middlewares/FreeRTOS/tasks.c **** 
4773:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4774:Middlewares/FreeRTOS/tasks.c ****         {
4775:Middlewares/FreeRTOS/tasks.c ****             /* Only block if a notification is not already pending. */
4776:Middlewares/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4777:Middlewares/FreeRTOS/tasks.c ****             {
4778:Middlewares/FreeRTOS/tasks.c ****                 /* Clear bits in the task's notification value as bits may get
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 106


4779:Middlewares/FreeRTOS/tasks.c ****                  * set  by the notifying task or interrupt.  This can be used to
4780:Middlewares/FreeRTOS/tasks.c ****                  * clear the value to zero. */
4781:Middlewares/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnEntry;
4782:Middlewares/FreeRTOS/tasks.c **** 
4783:Middlewares/FreeRTOS/tasks.c ****                 /* Mark this task as waiting for a notification. */
4784:Middlewares/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4785:Middlewares/FreeRTOS/tasks.c **** 
4786:Middlewares/FreeRTOS/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
4787:Middlewares/FreeRTOS/tasks.c ****                 {
4788:Middlewares/FreeRTOS/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4789:Middlewares/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
4790:Middlewares/FreeRTOS/tasks.c **** 
4791:Middlewares/FreeRTOS/tasks.c ****                     /* All ports are written to allow a yield in a critical
4792:Middlewares/FreeRTOS/tasks.c ****                      * section (some will yield immediately, others wait until the
4793:Middlewares/FreeRTOS/tasks.c ****                      * critical section exits) - but it is not something that
4794:Middlewares/FreeRTOS/tasks.c ****                      * application code should ever do. */
4795:Middlewares/FreeRTOS/tasks.c ****                     portYIELD_WITHIN_API();
4796:Middlewares/FreeRTOS/tasks.c ****                 }
4797:Middlewares/FreeRTOS/tasks.c ****                 else
4798:Middlewares/FreeRTOS/tasks.c ****                 {
4799:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4800:Middlewares/FreeRTOS/tasks.c ****                 }
4801:Middlewares/FreeRTOS/tasks.c ****             }
4802:Middlewares/FreeRTOS/tasks.c ****             else
4803:Middlewares/FreeRTOS/tasks.c ****             {
4804:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4805:Middlewares/FreeRTOS/tasks.c ****             }
4806:Middlewares/FreeRTOS/tasks.c ****         }
4807:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4808:Middlewares/FreeRTOS/tasks.c **** 
4809:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4810:Middlewares/FreeRTOS/tasks.c ****         {
4811:Middlewares/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_WAIT( uxIndexToWait );
4812:Middlewares/FreeRTOS/tasks.c **** 
4813:Middlewares/FreeRTOS/tasks.c ****             if( pulNotificationValue != NULL )
4814:Middlewares/FreeRTOS/tasks.c ****             {
4815:Middlewares/FreeRTOS/tasks.c ****                 /* Output the current notification value, which may or may not
4816:Middlewares/FreeRTOS/tasks.c ****                  * have changed. */
4817:Middlewares/FreeRTOS/tasks.c ****                 *pulNotificationValue = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4818:Middlewares/FreeRTOS/tasks.c ****             }
4819:Middlewares/FreeRTOS/tasks.c **** 
4820:Middlewares/FreeRTOS/tasks.c ****             /* If ucNotifyValue is set then either the task never entered the
4821:Middlewares/FreeRTOS/tasks.c ****              * blocked state (because a notification was already pending) or the
4822:Middlewares/FreeRTOS/tasks.c ****              * task unblocked because of a notification.  Otherwise the task
4823:Middlewares/FreeRTOS/tasks.c ****              * unblocked because of a timeout. */
4824:Middlewares/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4825:Middlewares/FreeRTOS/tasks.c ****             {
4826:Middlewares/FreeRTOS/tasks.c ****                 /* A notification was not received. */
4827:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdFALSE;
4828:Middlewares/FreeRTOS/tasks.c ****             }
4829:Middlewares/FreeRTOS/tasks.c ****             else
4830:Middlewares/FreeRTOS/tasks.c ****             {
4831:Middlewares/FreeRTOS/tasks.c ****                 /* A notification was already pending or a notification was
4832:Middlewares/FreeRTOS/tasks.c ****                  * received while the task was waiting. */
4833:Middlewares/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnExit;
4834:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
4835:Middlewares/FreeRTOS/tasks.c ****             }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 107


4836:Middlewares/FreeRTOS/tasks.c **** 
4837:Middlewares/FreeRTOS/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4838:Middlewares/FreeRTOS/tasks.c ****         }
4839:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4840:Middlewares/FreeRTOS/tasks.c **** 
4841:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
4842:Middlewares/FreeRTOS/tasks.c ****     }
4843:Middlewares/FreeRTOS/tasks.c **** 
4844:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4845:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4846:Middlewares/FreeRTOS/tasks.c **** 
4847:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4848:Middlewares/FreeRTOS/tasks.c **** 
4849:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
4850:Middlewares/FreeRTOS/tasks.c ****                                    UBaseType_t uxIndexToNotify,
4851:Middlewares/FreeRTOS/tasks.c ****                                    uint32_t ulValue,
4852:Middlewares/FreeRTOS/tasks.c ****                                    eNotifyAction eAction,
4853:Middlewares/FreeRTOS/tasks.c ****                                    uint32_t * pulPreviousNotificationValue )
4854:Middlewares/FreeRTOS/tasks.c ****     {
4855:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
4856:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
4857:Middlewares/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
4858:Middlewares/FreeRTOS/tasks.c **** 
4859:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4860:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
4861:Middlewares/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
4862:Middlewares/FreeRTOS/tasks.c **** 
4863:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4864:Middlewares/FreeRTOS/tasks.c ****         {
4865:Middlewares/FreeRTOS/tasks.c ****             if( pulPreviousNotificationValue != NULL )
4866:Middlewares/FreeRTOS/tasks.c ****             {
4867:Middlewares/FreeRTOS/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
4868:Middlewares/FreeRTOS/tasks.c ****             }
4869:Middlewares/FreeRTOS/tasks.c **** 
4870:Middlewares/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
4871:Middlewares/FreeRTOS/tasks.c **** 
4872:Middlewares/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
4873:Middlewares/FreeRTOS/tasks.c **** 
4874:Middlewares/FreeRTOS/tasks.c ****             switch( eAction )
4875:Middlewares/FreeRTOS/tasks.c ****             {
4876:Middlewares/FreeRTOS/tasks.c ****                 case eSetBits:
4877:Middlewares/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
4878:Middlewares/FreeRTOS/tasks.c ****                     break;
4879:Middlewares/FreeRTOS/tasks.c **** 
4880:Middlewares/FreeRTOS/tasks.c ****                 case eIncrement:
4881:Middlewares/FreeRTOS/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
4882:Middlewares/FreeRTOS/tasks.c ****                     break;
4883:Middlewares/FreeRTOS/tasks.c **** 
4884:Middlewares/FreeRTOS/tasks.c ****                 case eSetValueWithOverwrite:
4885:Middlewares/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
4886:Middlewares/FreeRTOS/tasks.c ****                     break;
4887:Middlewares/FreeRTOS/tasks.c **** 
4888:Middlewares/FreeRTOS/tasks.c ****                 case eSetValueWithoutOverwrite:
4889:Middlewares/FreeRTOS/tasks.c **** 
4890:Middlewares/FreeRTOS/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4891:Middlewares/FreeRTOS/tasks.c ****                     {
4892:Middlewares/FreeRTOS/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 108


4893:Middlewares/FreeRTOS/tasks.c ****                     }
4894:Middlewares/FreeRTOS/tasks.c ****                     else
4895:Middlewares/FreeRTOS/tasks.c ****                     {
4896:Middlewares/FreeRTOS/tasks.c ****                         /* The value could not be written to the task. */
4897:Middlewares/FreeRTOS/tasks.c ****                         xReturn = pdFAIL;
4898:Middlewares/FreeRTOS/tasks.c ****                     }
4899:Middlewares/FreeRTOS/tasks.c **** 
4900:Middlewares/FreeRTOS/tasks.c ****                     break;
4901:Middlewares/FreeRTOS/tasks.c **** 
4902:Middlewares/FreeRTOS/tasks.c ****                 case eNoAction:
4903:Middlewares/FreeRTOS/tasks.c **** 
4904:Middlewares/FreeRTOS/tasks.c ****                     /* The task is being notified without its notify value being
4905:Middlewares/FreeRTOS/tasks.c ****                      * updated. */
4906:Middlewares/FreeRTOS/tasks.c ****                     break;
4907:Middlewares/FreeRTOS/tasks.c **** 
4908:Middlewares/FreeRTOS/tasks.c ****                 default:
4909:Middlewares/FreeRTOS/tasks.c **** 
4910:Middlewares/FreeRTOS/tasks.c ****                     /* Should not get here if all enums are handled.
4911:Middlewares/FreeRTOS/tasks.c ****                      * Artificially force an assert by testing a value the
4912:Middlewares/FreeRTOS/tasks.c ****                      * compiler can't assume is const. */
4913:Middlewares/FreeRTOS/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
4914:Middlewares/FreeRTOS/tasks.c **** 
4915:Middlewares/FreeRTOS/tasks.c ****                     break;
4916:Middlewares/FreeRTOS/tasks.c ****             }
4917:Middlewares/FreeRTOS/tasks.c **** 
4918:Middlewares/FreeRTOS/tasks.c ****             traceTASK_NOTIFY( uxIndexToNotify );
4919:Middlewares/FreeRTOS/tasks.c **** 
4920:Middlewares/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
4921:Middlewares/FreeRTOS/tasks.c ****              * notification then unblock it now. */
4922:Middlewares/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4923:Middlewares/FreeRTOS/tasks.c ****             {
4924:Middlewares/FreeRTOS/tasks.c ****                 listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
4925:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
4926:Middlewares/FreeRTOS/tasks.c **** 
4927:Middlewares/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
4928:Middlewares/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4929:Middlewares/FreeRTOS/tasks.c **** 
4930:Middlewares/FreeRTOS/tasks.c ****                 #if ( configUSE_TICKLESS_IDLE != 0 )
4931:Middlewares/FreeRTOS/tasks.c ****                 {
4932:Middlewares/FreeRTOS/tasks.c ****                     /* If a task is blocked waiting for a notification then
4933:Middlewares/FreeRTOS/tasks.c ****                      * xNextTaskUnblockTime might be set to the blocked task's time
4934:Middlewares/FreeRTOS/tasks.c ****                      * out time.  If the task is unblocked for a reason other than
4935:Middlewares/FreeRTOS/tasks.c ****                      * a timeout xNextTaskUnblockTime is normally left unchanged,
4936:Middlewares/FreeRTOS/tasks.c ****                      * because it will automatically get reset to a new value when
4937:Middlewares/FreeRTOS/tasks.c ****                      * the tick count equals xNextTaskUnblockTime.  However if
4938:Middlewares/FreeRTOS/tasks.c ****                      * tickless idling is used it might be more important to enter
4939:Middlewares/FreeRTOS/tasks.c ****                      * sleep mode at the earliest possible time - so reset
4940:Middlewares/FreeRTOS/tasks.c ****                      * xNextTaskUnblockTime here to ensure it is updated at the
4941:Middlewares/FreeRTOS/tasks.c ****                      * earliest possible time. */
4942:Middlewares/FreeRTOS/tasks.c ****                     prvResetNextTaskUnblockTime();
4943:Middlewares/FreeRTOS/tasks.c ****                 }
4944:Middlewares/FreeRTOS/tasks.c ****                 #endif
4945:Middlewares/FreeRTOS/tasks.c **** 
4946:Middlewares/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4947:Middlewares/FreeRTOS/tasks.c ****                 {
4948:Middlewares/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
4949:Middlewares/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 109


4950:Middlewares/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
4951:Middlewares/FreeRTOS/tasks.c ****                 }
4952:Middlewares/FreeRTOS/tasks.c ****                 else
4953:Middlewares/FreeRTOS/tasks.c ****                 {
4954:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4955:Middlewares/FreeRTOS/tasks.c ****                 }
4956:Middlewares/FreeRTOS/tasks.c ****             }
4957:Middlewares/FreeRTOS/tasks.c ****             else
4958:Middlewares/FreeRTOS/tasks.c ****             {
4959:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4960:Middlewares/FreeRTOS/tasks.c ****             }
4961:Middlewares/FreeRTOS/tasks.c ****         }
4962:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4963:Middlewares/FreeRTOS/tasks.c **** 
4964:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
4965:Middlewares/FreeRTOS/tasks.c ****     }
4966:Middlewares/FreeRTOS/tasks.c **** 
4967:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4968:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4969:Middlewares/FreeRTOS/tasks.c **** 
4970:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4971:Middlewares/FreeRTOS/tasks.c **** 
4972:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify,
4973:Middlewares/FreeRTOS/tasks.c ****                                           UBaseType_t uxIndexToNotify,
4974:Middlewares/FreeRTOS/tasks.c ****                                           uint32_t ulValue,
4975:Middlewares/FreeRTOS/tasks.c ****                                           eNotifyAction eAction,
4976:Middlewares/FreeRTOS/tasks.c ****                                           uint32_t * pulPreviousNotificationValue,
4977:Middlewares/FreeRTOS/tasks.c ****                                           BaseType_t * pxHigherPriorityTaskWoken )
4978:Middlewares/FreeRTOS/tasks.c ****     {
4979:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
4980:Middlewares/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
4981:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
4982:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
4983:Middlewares/FreeRTOS/tasks.c **** 
4984:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
4985:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4986:Middlewares/FreeRTOS/tasks.c **** 
4987:Middlewares/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
4988:Middlewares/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
4989:Middlewares/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
4990:Middlewares/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
4991:Middlewares/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4992:Middlewares/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
4993:Middlewares/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4994:Middlewares/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
4995:Middlewares/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
4996:Middlewares/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
4997:Middlewares/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
4998:Middlewares/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
4999:Middlewares/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
5000:Middlewares/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
5001:Middlewares/FreeRTOS/tasks.c ****          * provided on the following link:
5002:Middlewares/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
5003:Middlewares/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5004:Middlewares/FreeRTOS/tasks.c **** 
5005:Middlewares/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
5006:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 110


5007:Middlewares/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5008:Middlewares/FreeRTOS/tasks.c ****         {
5009:Middlewares/FreeRTOS/tasks.c ****             if( pulPreviousNotificationValue != NULL )
5010:Middlewares/FreeRTOS/tasks.c ****             {
5011:Middlewares/FreeRTOS/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
5012:Middlewares/FreeRTOS/tasks.c ****             }
5013:Middlewares/FreeRTOS/tasks.c **** 
5014:Middlewares/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
5015:Middlewares/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
5016:Middlewares/FreeRTOS/tasks.c **** 
5017:Middlewares/FreeRTOS/tasks.c ****             switch( eAction )
5018:Middlewares/FreeRTOS/tasks.c ****             {
5019:Middlewares/FreeRTOS/tasks.c ****                 case eSetBits:
5020:Middlewares/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
5021:Middlewares/FreeRTOS/tasks.c ****                     break;
5022:Middlewares/FreeRTOS/tasks.c **** 
5023:Middlewares/FreeRTOS/tasks.c ****                 case eIncrement:
5024:Middlewares/FreeRTOS/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5025:Middlewares/FreeRTOS/tasks.c ****                     break;
5026:Middlewares/FreeRTOS/tasks.c **** 
5027:Middlewares/FreeRTOS/tasks.c ****                 case eSetValueWithOverwrite:
5028:Middlewares/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5029:Middlewares/FreeRTOS/tasks.c ****                     break;
5030:Middlewares/FreeRTOS/tasks.c **** 
5031:Middlewares/FreeRTOS/tasks.c ****                 case eSetValueWithoutOverwrite:
5032:Middlewares/FreeRTOS/tasks.c **** 
5033:Middlewares/FreeRTOS/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
5034:Middlewares/FreeRTOS/tasks.c ****                     {
5035:Middlewares/FreeRTOS/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5036:Middlewares/FreeRTOS/tasks.c ****                     }
5037:Middlewares/FreeRTOS/tasks.c ****                     else
5038:Middlewares/FreeRTOS/tasks.c ****                     {
5039:Middlewares/FreeRTOS/tasks.c ****                         /* The value could not be written to the task. */
5040:Middlewares/FreeRTOS/tasks.c ****                         xReturn = pdFAIL;
5041:Middlewares/FreeRTOS/tasks.c ****                     }
5042:Middlewares/FreeRTOS/tasks.c **** 
5043:Middlewares/FreeRTOS/tasks.c ****                     break;
5044:Middlewares/FreeRTOS/tasks.c **** 
5045:Middlewares/FreeRTOS/tasks.c ****                 case eNoAction:
5046:Middlewares/FreeRTOS/tasks.c **** 
5047:Middlewares/FreeRTOS/tasks.c ****                     /* The task is being notified without its notify value being
5048:Middlewares/FreeRTOS/tasks.c ****                      * updated. */
5049:Middlewares/FreeRTOS/tasks.c ****                     break;
5050:Middlewares/FreeRTOS/tasks.c **** 
5051:Middlewares/FreeRTOS/tasks.c ****                 default:
5052:Middlewares/FreeRTOS/tasks.c **** 
5053:Middlewares/FreeRTOS/tasks.c ****                     /* Should not get here if all enums are handled.
5054:Middlewares/FreeRTOS/tasks.c ****                      * Artificially force an assert by testing a value the
5055:Middlewares/FreeRTOS/tasks.c ****                      * compiler can't assume is const. */
5056:Middlewares/FreeRTOS/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
5057:Middlewares/FreeRTOS/tasks.c ****                     break;
5058:Middlewares/FreeRTOS/tasks.c ****             }
5059:Middlewares/FreeRTOS/tasks.c **** 
5060:Middlewares/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_FROM_ISR( uxIndexToNotify );
5061:Middlewares/FreeRTOS/tasks.c **** 
5062:Middlewares/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5063:Middlewares/FreeRTOS/tasks.c ****              * notification then unblock it now. */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 111


5064:Middlewares/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5065:Middlewares/FreeRTOS/tasks.c ****             {
5066:Middlewares/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
5067:Middlewares/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5068:Middlewares/FreeRTOS/tasks.c **** 
5069:Middlewares/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5070:Middlewares/FreeRTOS/tasks.c ****                 {
5071:Middlewares/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
5072:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
5073:Middlewares/FreeRTOS/tasks.c ****                 }
5074:Middlewares/FreeRTOS/tasks.c ****                 else
5075:Middlewares/FreeRTOS/tasks.c ****                 {
5076:Middlewares/FreeRTOS/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5077:Middlewares/FreeRTOS/tasks.c ****                      * this task pending until the scheduler is resumed. */
5078:Middlewares/FreeRTOS/tasks.c ****                     listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5079:Middlewares/FreeRTOS/tasks.c ****                 }
5080:Middlewares/FreeRTOS/tasks.c **** 
5081:Middlewares/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5082:Middlewares/FreeRTOS/tasks.c ****                 {
5083:Middlewares/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
5084:Middlewares/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
5085:Middlewares/FreeRTOS/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5086:Middlewares/FreeRTOS/tasks.c ****                     {
5087:Middlewares/FreeRTOS/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5088:Middlewares/FreeRTOS/tasks.c ****                     }
5089:Middlewares/FreeRTOS/tasks.c **** 
5090:Middlewares/FreeRTOS/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5091:Middlewares/FreeRTOS/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter to an ISR
5092:Middlewares/FreeRTOS/tasks.c ****                      * safe FreeRTOS function. */
5093:Middlewares/FreeRTOS/tasks.c ****                     xYieldPending = pdTRUE;
5094:Middlewares/FreeRTOS/tasks.c ****                 }
5095:Middlewares/FreeRTOS/tasks.c ****                 else
5096:Middlewares/FreeRTOS/tasks.c ****                 {
5097:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5098:Middlewares/FreeRTOS/tasks.c ****                 }
5099:Middlewares/FreeRTOS/tasks.c ****             }
5100:Middlewares/FreeRTOS/tasks.c ****         }
5101:Middlewares/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5102:Middlewares/FreeRTOS/tasks.c **** 
5103:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
5104:Middlewares/FreeRTOS/tasks.c ****     }
5105:Middlewares/FreeRTOS/tasks.c **** 
5106:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5107:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5108:Middlewares/FreeRTOS/tasks.c **** 
5109:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5110:Middlewares/FreeRTOS/tasks.c **** 
5111:Middlewares/FreeRTOS/tasks.c ****     void vTaskGenericNotifyGiveFromISR( TaskHandle_t xTaskToNotify,
5112:Middlewares/FreeRTOS/tasks.c ****                                         UBaseType_t uxIndexToNotify,
5113:Middlewares/FreeRTOS/tasks.c ****                                         BaseType_t * pxHigherPriorityTaskWoken )
5114:Middlewares/FreeRTOS/tasks.c ****     {
5115:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5116:Middlewares/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
5117:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
5118:Middlewares/FreeRTOS/tasks.c **** 
5119:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
5120:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 112


5121:Middlewares/FreeRTOS/tasks.c **** 
5122:Middlewares/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
5123:Middlewares/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
5124:Middlewares/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
5125:Middlewares/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
5126:Middlewares/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5127:Middlewares/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
5128:Middlewares/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5129:Middlewares/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
5130:Middlewares/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
5131:Middlewares/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
5132:Middlewares/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
5133:Middlewares/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
5134:Middlewares/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
5135:Middlewares/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
5136:Middlewares/FreeRTOS/tasks.c ****          * provided on the following link:
5137:Middlewares/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
5138:Middlewares/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5139:Middlewares/FreeRTOS/tasks.c **** 
5140:Middlewares/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
5141:Middlewares/FreeRTOS/tasks.c **** 
5142:Middlewares/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5143:Middlewares/FreeRTOS/tasks.c ****         {
5144:Middlewares/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
5145:Middlewares/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
5146:Middlewares/FreeRTOS/tasks.c **** 
5147:Middlewares/FreeRTOS/tasks.c ****             /* 'Giving' is equivalent to incrementing a count in a counting
5148:Middlewares/FreeRTOS/tasks.c ****              * semaphore. */
5149:Middlewares/FreeRTOS/tasks.c ****             ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5150:Middlewares/FreeRTOS/tasks.c **** 
5151:Middlewares/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_GIVE_FROM_ISR( uxIndexToNotify );
5152:Middlewares/FreeRTOS/tasks.c **** 
5153:Middlewares/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5154:Middlewares/FreeRTOS/tasks.c ****              * notification then unblock it now. */
5155:Middlewares/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5156:Middlewares/FreeRTOS/tasks.c ****             {
5157:Middlewares/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
5158:Middlewares/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5159:Middlewares/FreeRTOS/tasks.c **** 
5160:Middlewares/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5161:Middlewares/FreeRTOS/tasks.c ****                 {
5162:Middlewares/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
5163:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
5164:Middlewares/FreeRTOS/tasks.c ****                 }
5165:Middlewares/FreeRTOS/tasks.c ****                 else
5166:Middlewares/FreeRTOS/tasks.c ****                 {
5167:Middlewares/FreeRTOS/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5168:Middlewares/FreeRTOS/tasks.c ****                      * this task pending until the scheduler is resumed. */
5169:Middlewares/FreeRTOS/tasks.c ****                     listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5170:Middlewares/FreeRTOS/tasks.c ****                 }
5171:Middlewares/FreeRTOS/tasks.c **** 
5172:Middlewares/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5173:Middlewares/FreeRTOS/tasks.c ****                 {
5174:Middlewares/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
5175:Middlewares/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
5176:Middlewares/FreeRTOS/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5177:Middlewares/FreeRTOS/tasks.c ****                     {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 113


5178:Middlewares/FreeRTOS/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5179:Middlewares/FreeRTOS/tasks.c ****                     }
5180:Middlewares/FreeRTOS/tasks.c **** 
5181:Middlewares/FreeRTOS/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5182:Middlewares/FreeRTOS/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter in an ISR
5183:Middlewares/FreeRTOS/tasks.c ****                      * safe FreeRTOS function. */
5184:Middlewares/FreeRTOS/tasks.c ****                     xYieldPending = pdTRUE;
5185:Middlewares/FreeRTOS/tasks.c ****                 }
5186:Middlewares/FreeRTOS/tasks.c ****                 else
5187:Middlewares/FreeRTOS/tasks.c ****                 {
5188:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5189:Middlewares/FreeRTOS/tasks.c ****                 }
5190:Middlewares/FreeRTOS/tasks.c ****             }
5191:Middlewares/FreeRTOS/tasks.c ****         }
5192:Middlewares/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5193:Middlewares/FreeRTOS/tasks.c ****     }
5194:Middlewares/FreeRTOS/tasks.c **** 
5195:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5196:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5197:Middlewares/FreeRTOS/tasks.c **** 
5198:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5199:Middlewares/FreeRTOS/tasks.c **** 
5200:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyStateClear( TaskHandle_t xTask,
5201:Middlewares/FreeRTOS/tasks.c ****                                              UBaseType_t uxIndexToClear )
5202:Middlewares/FreeRTOS/tasks.c ****     {
5203:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5204:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn;
5205:Middlewares/FreeRTOS/tasks.c **** 
5206:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToClear < configTASK_NOTIFICATION_ARRAY_ENTRIES );
5207:Middlewares/FreeRTOS/tasks.c **** 
5208:Middlewares/FreeRTOS/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5209:Middlewares/FreeRTOS/tasks.c ****          * its notification state cleared. */
5210:Middlewares/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5211:Middlewares/FreeRTOS/tasks.c **** 
5212:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
5213:Middlewares/FreeRTOS/tasks.c ****         {
5214:Middlewares/FreeRTOS/tasks.c ****             if( pxTCB->ucNotifyState[ uxIndexToClear ] == taskNOTIFICATION_RECEIVED )
5215:Middlewares/FreeRTOS/tasks.c ****             {
5216:Middlewares/FreeRTOS/tasks.c ****                 pxTCB->ucNotifyState[ uxIndexToClear ] = taskNOT_WAITING_NOTIFICATION;
5217:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
5218:Middlewares/FreeRTOS/tasks.c ****             }
5219:Middlewares/FreeRTOS/tasks.c ****             else
5220:Middlewares/FreeRTOS/tasks.c ****             {
5221:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdFAIL;
5222:Middlewares/FreeRTOS/tasks.c ****             }
5223:Middlewares/FreeRTOS/tasks.c ****         }
5224:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
5225:Middlewares/FreeRTOS/tasks.c **** 
5226:Middlewares/FreeRTOS/tasks.c ****         return xReturn;
5227:Middlewares/FreeRTOS/tasks.c ****     }
5228:Middlewares/FreeRTOS/tasks.c **** 
5229:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5230:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5231:Middlewares/FreeRTOS/tasks.c **** 
5232:Middlewares/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5233:Middlewares/FreeRTOS/tasks.c **** 
5234:Middlewares/FreeRTOS/tasks.c ****     uint32_t ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 114


5235:Middlewares/FreeRTOS/tasks.c ****                                             UBaseType_t uxIndexToClear,
5236:Middlewares/FreeRTOS/tasks.c ****                                             uint32_t ulBitsToClear )
5237:Middlewares/FreeRTOS/tasks.c ****     {
5238:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5239:Middlewares/FreeRTOS/tasks.c ****         uint32_t ulReturn;
5240:Middlewares/FreeRTOS/tasks.c **** 
5241:Middlewares/FreeRTOS/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5242:Middlewares/FreeRTOS/tasks.c ****          * its notification state cleared. */
5243:Middlewares/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5244:Middlewares/FreeRTOS/tasks.c **** 
5245:Middlewares/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
5246:Middlewares/FreeRTOS/tasks.c ****         {
5247:Middlewares/FreeRTOS/tasks.c ****             /* Return the notification as it was before the bits were cleared,
5248:Middlewares/FreeRTOS/tasks.c ****              * then clear the bit mask. */
5249:Middlewares/FreeRTOS/tasks.c ****             ulReturn = pxTCB->ulNotifiedValue[ uxIndexToClear ];
5250:Middlewares/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
5251:Middlewares/FreeRTOS/tasks.c ****         }
5252:Middlewares/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
5253:Middlewares/FreeRTOS/tasks.c **** 
5254:Middlewares/FreeRTOS/tasks.c ****         return ulReturn;
5255:Middlewares/FreeRTOS/tasks.c ****     }
5256:Middlewares/FreeRTOS/tasks.c **** 
5257:Middlewares/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5258:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5259:Middlewares/FreeRTOS/tasks.c **** 
5260:Middlewares/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5261:Middlewares/FreeRTOS/tasks.c **** 
5262:Middlewares/FreeRTOS/tasks.c ****     configRUN_TIME_COUNTER_TYPE ulTaskGetIdleRunTimeCounter( void )
5263:Middlewares/FreeRTOS/tasks.c ****     {
5264:Middlewares/FreeRTOS/tasks.c ****         return xIdleTaskHandle->ulRunTimeCounter;
5265:Middlewares/FreeRTOS/tasks.c ****     }
5266:Middlewares/FreeRTOS/tasks.c **** 
5267:Middlewares/FreeRTOS/tasks.c **** #endif
5268:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5269:Middlewares/FreeRTOS/tasks.c **** 
5270:Middlewares/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5271:Middlewares/FreeRTOS/tasks.c **** 
5272:Middlewares/FreeRTOS/tasks.c ****     configRUN_TIME_COUNTER_TYPE ulTaskGetIdleRunTimePercent( void )
5273:Middlewares/FreeRTOS/tasks.c ****     {
5274:Middlewares/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulTotalTime, ulReturn;
5275:Middlewares/FreeRTOS/tasks.c **** 
5276:Middlewares/FreeRTOS/tasks.c ****         ulTotalTime = portGET_RUN_TIME_COUNTER_VALUE();
5277:Middlewares/FreeRTOS/tasks.c **** 
5278:Middlewares/FreeRTOS/tasks.c ****         /* For percentage calculations. */
5279:Middlewares/FreeRTOS/tasks.c ****         ulTotalTime /= ( configRUN_TIME_COUNTER_TYPE ) 100;
5280:Middlewares/FreeRTOS/tasks.c **** 
5281:Middlewares/FreeRTOS/tasks.c ****         /* Avoid divide by zero errors. */
5282:Middlewares/FreeRTOS/tasks.c ****         if( ulTotalTime > ( configRUN_TIME_COUNTER_TYPE ) 0 )
5283:Middlewares/FreeRTOS/tasks.c ****         {
5284:Middlewares/FreeRTOS/tasks.c ****             ulReturn = xIdleTaskHandle->ulRunTimeCounter / ulTotalTime;
5285:Middlewares/FreeRTOS/tasks.c ****         }
5286:Middlewares/FreeRTOS/tasks.c ****         else
5287:Middlewares/FreeRTOS/tasks.c ****         {
5288:Middlewares/FreeRTOS/tasks.c ****             ulReturn = 0;
5289:Middlewares/FreeRTOS/tasks.c ****         }
5290:Middlewares/FreeRTOS/tasks.c **** 
5291:Middlewares/FreeRTOS/tasks.c ****         return ulReturn;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 115


5292:Middlewares/FreeRTOS/tasks.c ****     }
5293:Middlewares/FreeRTOS/tasks.c **** 
5294:Middlewares/FreeRTOS/tasks.c **** #endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) 
5295:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5296:Middlewares/FreeRTOS/tasks.c **** 
5297:Middlewares/FreeRTOS/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
5298:Middlewares/FreeRTOS/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely )
5299:Middlewares/FreeRTOS/tasks.c **** {
 831              		.loc 1 5299 1 view -0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		.loc 1 5299 1 is_stmt 0 view .LVU230
 836 0000 70B5     		push	{r4, r5, r6, lr}
 837              	.LCFI7:
 838              		.cfi_def_cfa_offset 16
 839              		.cfi_offset 4, -16
 840              		.cfi_offset 5, -12
 841              		.cfi_offset 6, -8
 842              		.cfi_offset 14, -4
 843 0002 0446     		mov	r4, r0
 844 0004 0D46     		mov	r5, r1
5300:Middlewares/FreeRTOS/tasks.c ****     TickType_t xTimeToWake;
 845              		.loc 1 5300 5 is_stmt 1 view .LVU231
5301:Middlewares/FreeRTOS/tasks.c ****     const TickType_t xConstTickCount = xTickCount;
 846              		.loc 1 5301 5 view .LVU232
 847              		.loc 1 5301 22 is_stmt 0 view .LVU233
 848 0006 234B     		ldr	r3, .L72
 849 0008 1E68     		ldr	r6, [r3]
 850              	.LVL58:
5302:Middlewares/FreeRTOS/tasks.c **** 
5303:Middlewares/FreeRTOS/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
5304:Middlewares/FreeRTOS/tasks.c ****     {
5305:Middlewares/FreeRTOS/tasks.c ****         /* About to enter a delayed list, so ensure the ucDelayAborted flag is
5306:Middlewares/FreeRTOS/tasks.c ****          * reset to pdFALSE so it can be detected as having been set to pdTRUE
5307:Middlewares/FreeRTOS/tasks.c ****          * when the task leaves the Blocked state. */
5308:Middlewares/FreeRTOS/tasks.c ****         pxCurrentTCB->ucDelayAborted = pdFALSE;
5309:Middlewares/FreeRTOS/tasks.c ****     }
5310:Middlewares/FreeRTOS/tasks.c ****     #endif
5311:Middlewares/FreeRTOS/tasks.c **** 
5312:Middlewares/FreeRTOS/tasks.c ****     /* Remove the task from the ready list before adding it to the blocked list
5313:Middlewares/FreeRTOS/tasks.c ****      * as the same list item is used for both lists. */
5314:Middlewares/FreeRTOS/tasks.c ****     if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 851              		.loc 1 5314 5 is_stmt 1 view .LVU234
 852              		.loc 1 5314 38 is_stmt 0 view .LVU235
 853 000a 234B     		ldr	r3, .L72+4
 854 000c 1868     		ldr	r0, [r3]
 855              	.LVL59:
 856              		.loc 1 5314 9 view .LVU236
 857 000e 0430     		adds	r0, r0, #4
 858 0010 FFF7FEFF 		bl	uxListRemove
 859              	.LVL60:
 860              		.loc 1 5314 7 view .LVU237
 861 0014 48B9     		cbnz	r0, .L66
5315:Middlewares/FreeRTOS/tasks.c ****     {
5316:Middlewares/FreeRTOS/tasks.c ****         /* The current task must be in a ready list, so there is no need to
5317:Middlewares/FreeRTOS/tasks.c ****          * check, and the port reset macro can be called directly. */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 116


5318:Middlewares/FreeRTOS/tasks.c ****         portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCu
 862              		.loc 1 5318 9 is_stmt 1 view .LVU238
 863 0016 204B     		ldr	r3, .L72+4
 864 0018 1B68     		ldr	r3, [r3]
 865 001a DB6A     		ldr	r3, [r3, #44]
 866 001c 0122     		movs	r2, #1
 867 001e 9A40     		lsls	r2, r2, r3
 868 0020 1E49     		ldr	r1, .L72+8
 869 0022 0B68     		ldr	r3, [r1]
 870 0024 23EA0203 		bic	r3, r3, r2
 871 0028 0B60     		str	r3, [r1]
 872              	.L66:
5319:Middlewares/FreeRTOS/tasks.c ****     }
5320:Middlewares/FreeRTOS/tasks.c ****     else
5321:Middlewares/FreeRTOS/tasks.c ****     {
5322:Middlewares/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 873              		.loc 1 5322 33 view .LVU239
5323:Middlewares/FreeRTOS/tasks.c ****     }
5324:Middlewares/FreeRTOS/tasks.c **** 
5325:Middlewares/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
5326:Middlewares/FreeRTOS/tasks.c ****     {
5327:Middlewares/FreeRTOS/tasks.c ****         if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 874              		.loc 1 5327 9 view .LVU240
 875              		.loc 1 5327 11 is_stmt 0 view .LVU241
 876 002a B4F1FF3F 		cmp	r4, #-1
 877 002e 0DD0     		beq	.L71
 878              	.L67:
5328:Middlewares/FreeRTOS/tasks.c ****         {
5329:Middlewares/FreeRTOS/tasks.c ****             /* Add the task to the suspended task list instead of a delayed task
5330:Middlewares/FreeRTOS/tasks.c ****              * list to ensure it is not woken by a timing event.  It will block
5331:Middlewares/FreeRTOS/tasks.c ****              * indefinitely. */
5332:Middlewares/FreeRTOS/tasks.c ****             listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5333:Middlewares/FreeRTOS/tasks.c ****         }
5334:Middlewares/FreeRTOS/tasks.c ****         else
5335:Middlewares/FreeRTOS/tasks.c ****         {
5336:Middlewares/FreeRTOS/tasks.c ****             /* Calculate the time at which the task should be woken if the event
5337:Middlewares/FreeRTOS/tasks.c ****              * does not occur.  This may overflow but this doesn't matter, the
5338:Middlewares/FreeRTOS/tasks.c ****              * kernel will manage it correctly. */
5339:Middlewares/FreeRTOS/tasks.c ****             xTimeToWake = xConstTickCount + xTicksToWait;
 879              		.loc 1 5339 13 is_stmt 1 view .LVU242
 880              		.loc 1 5339 25 is_stmt 0 view .LVU243
 881 0030 3444     		add	r4, r4, r6
 882              	.LVL61:
5340:Middlewares/FreeRTOS/tasks.c **** 
5341:Middlewares/FreeRTOS/tasks.c ****             /* The list item will be inserted in wake time order. */
5342:Middlewares/FreeRTOS/tasks.c ****             listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 883              		.loc 1 5342 13 is_stmt 1 view .LVU244
 884 0032 194B     		ldr	r3, .L72+4
 885 0034 1B68     		ldr	r3, [r3]
 886 0036 5C60     		str	r4, [r3, #4]
5343:Middlewares/FreeRTOS/tasks.c **** 
5344:Middlewares/FreeRTOS/tasks.c ****             if( xTimeToWake < xConstTickCount )
 887              		.loc 1 5344 13 view .LVU245
 888              		.loc 1 5344 15 is_stmt 0 view .LVU246
 889 0038 A642     		cmp	r6, r4
 890 003a 1DD9     		bls	.L69
5345:Middlewares/FreeRTOS/tasks.c ****             {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 117


5346:Middlewares/FreeRTOS/tasks.c ****                 /* Wake time has overflowed.  Place this item in the overflow
5347:Middlewares/FreeRTOS/tasks.c ****                  * list. */
5348:Middlewares/FreeRTOS/tasks.c ****                 vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 891              		.loc 1 5348 17 is_stmt 1 view .LVU247
 892 003c 184B     		ldr	r3, .L72+12
 893 003e 1868     		ldr	r0, [r3]
 894              		.loc 1 5348 72 is_stmt 0 view .LVU248
 895 0040 154B     		ldr	r3, .L72+4
 896 0042 1968     		ldr	r1, [r3]
 897              		.loc 1 5348 17 view .LVU249
 898 0044 0431     		adds	r1, r1, #4
 899 0046 FFF7FEFF 		bl	vListInsert
 900              	.LVL62:
 901              	.L65:
5349:Middlewares/FreeRTOS/tasks.c ****             }
5350:Middlewares/FreeRTOS/tasks.c ****             else
5351:Middlewares/FreeRTOS/tasks.c ****             {
5352:Middlewares/FreeRTOS/tasks.c ****                 /* The wake time has not overflowed, so the current block list
5353:Middlewares/FreeRTOS/tasks.c ****                  * is used. */
5354:Middlewares/FreeRTOS/tasks.c ****                 vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5355:Middlewares/FreeRTOS/tasks.c **** 
5356:Middlewares/FreeRTOS/tasks.c ****                 /* If the task entering the blocked state was placed at the
5357:Middlewares/FreeRTOS/tasks.c ****                  * head of the list of blocked tasks then xNextTaskUnblockTime
5358:Middlewares/FreeRTOS/tasks.c ****                  * needs to be updated too. */
5359:Middlewares/FreeRTOS/tasks.c ****                 if( xTimeToWake < xNextTaskUnblockTime )
5360:Middlewares/FreeRTOS/tasks.c ****                 {
5361:Middlewares/FreeRTOS/tasks.c ****                     xNextTaskUnblockTime = xTimeToWake;
5362:Middlewares/FreeRTOS/tasks.c ****                 }
5363:Middlewares/FreeRTOS/tasks.c ****                 else
5364:Middlewares/FreeRTOS/tasks.c ****                 {
5365:Middlewares/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5366:Middlewares/FreeRTOS/tasks.c ****                 }
5367:Middlewares/FreeRTOS/tasks.c ****             }
5368:Middlewares/FreeRTOS/tasks.c ****         }
5369:Middlewares/FreeRTOS/tasks.c ****     }
5370:Middlewares/FreeRTOS/tasks.c ****     #else /* INCLUDE_vTaskSuspend */
5371:Middlewares/FreeRTOS/tasks.c ****     {
5372:Middlewares/FreeRTOS/tasks.c ****         /* Calculate the time at which the task should be woken if the event
5373:Middlewares/FreeRTOS/tasks.c ****          * does not occur.  This may overflow but this doesn't matter, the kernel
5374:Middlewares/FreeRTOS/tasks.c ****          * will manage it correctly. */
5375:Middlewares/FreeRTOS/tasks.c ****         xTimeToWake = xConstTickCount + xTicksToWait;
5376:Middlewares/FreeRTOS/tasks.c **** 
5377:Middlewares/FreeRTOS/tasks.c ****         /* The list item will be inserted in wake time order. */
5378:Middlewares/FreeRTOS/tasks.c ****         listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5379:Middlewares/FreeRTOS/tasks.c **** 
5380:Middlewares/FreeRTOS/tasks.c ****         if( xTimeToWake < xConstTickCount )
5381:Middlewares/FreeRTOS/tasks.c ****         {
5382:Middlewares/FreeRTOS/tasks.c ****             /* Wake time has overflowed.  Place this item in the overflow list. */
5383:Middlewares/FreeRTOS/tasks.c ****             vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5384:Middlewares/FreeRTOS/tasks.c ****         }
5385:Middlewares/FreeRTOS/tasks.c ****         else
5386:Middlewares/FreeRTOS/tasks.c ****         {
5387:Middlewares/FreeRTOS/tasks.c ****             /* The wake time has not overflowed, so the current block list is used. */
5388:Middlewares/FreeRTOS/tasks.c ****             vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5389:Middlewares/FreeRTOS/tasks.c **** 
5390:Middlewares/FreeRTOS/tasks.c ****             /* If the task entering the blocked state was placed at the head of the
5391:Middlewares/FreeRTOS/tasks.c ****              * list of blocked tasks then xNextTaskUnblockTime needs to be updated
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 118


5392:Middlewares/FreeRTOS/tasks.c ****              * too. */
5393:Middlewares/FreeRTOS/tasks.c ****             if( xTimeToWake < xNextTaskUnblockTime )
5394:Middlewares/FreeRTOS/tasks.c ****             {
5395:Middlewares/FreeRTOS/tasks.c ****                 xNextTaskUnblockTime = xTimeToWake;
5396:Middlewares/FreeRTOS/tasks.c ****             }
5397:Middlewares/FreeRTOS/tasks.c ****             else
5398:Middlewares/FreeRTOS/tasks.c ****             {
5399:Middlewares/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
5400:Middlewares/FreeRTOS/tasks.c ****             }
5401:Middlewares/FreeRTOS/tasks.c ****         }
5402:Middlewares/FreeRTOS/tasks.c **** 
5403:Middlewares/FreeRTOS/tasks.c ****         /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5404:Middlewares/FreeRTOS/tasks.c ****         ( void ) xCanBlockIndefinitely;
5405:Middlewares/FreeRTOS/tasks.c ****     }
5406:Middlewares/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
5407:Middlewares/FreeRTOS/tasks.c **** }
 902              		.loc 1 5407 1 view .LVU250
 903 004a 70BD     		pop	{r4, r5, r6, pc}
 904              	.LVL63:
 905              	.L71:
5327:Middlewares/FreeRTOS/tasks.c ****         {
 906              		.loc 1 5327 47 discriminator 1 view .LVU251
 907 004c 002D     		cmp	r5, #0
 908 004e EFD0     		beq	.L67
 909              	.LBB168:
5332:Middlewares/FreeRTOS/tasks.c ****         }
 910              		.loc 1 5332 13 is_stmt 1 view .LVU252
 911 0050 144A     		ldr	r2, .L72+16
 912 0052 5168     		ldr	r1, [r2, #4]
 913              	.LVL64:
5332:Middlewares/FreeRTOS/tasks.c ****         }
 914              		.loc 1 5332 13 view .LVU253
5332:Middlewares/FreeRTOS/tasks.c ****         }
 915              		.loc 1 5332 13 view .LVU254
5332:Middlewares/FreeRTOS/tasks.c ****         }
 916              		.loc 1 5332 13 view .LVU255
 917 0054 104B     		ldr	r3, .L72+4
 918 0056 1868     		ldr	r0, [r3]
 919 0058 8160     		str	r1, [r0, #8]
5332:Middlewares/FreeRTOS/tasks.c ****         }
 920              		.loc 1 5332 13 view .LVU256
 921 005a 1868     		ldr	r0, [r3]
 922 005c 8C68     		ldr	r4, [r1, #8]
 923              	.LVL65:
5332:Middlewares/FreeRTOS/tasks.c ****         }
 924              		.loc 1 5332 13 is_stmt 0 view .LVU257
 925 005e C460     		str	r4, [r0, #12]
5332:Middlewares/FreeRTOS/tasks.c ****         }
 926              		.loc 1 5332 13 is_stmt 1 view .LVU258
 927 0060 1868     		ldr	r0, [r3]
 928 0062 0430     		adds	r0, r0, #4
 929 0064 6060     		str	r0, [r4, #4]
5332:Middlewares/FreeRTOS/tasks.c ****         }
 930              		.loc 1 5332 13 view .LVU259
 931 0066 1868     		ldr	r0, [r3]
 932 0068 0430     		adds	r0, r0, #4
 933 006a 8860     		str	r0, [r1, #8]
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 119


5332:Middlewares/FreeRTOS/tasks.c ****         }
 934              		.loc 1 5332 13 view .LVU260
 935 006c 1B68     		ldr	r3, [r3]
 936 006e 5A61     		str	r2, [r3, #20]
5332:Middlewares/FreeRTOS/tasks.c ****         }
 937              		.loc 1 5332 13 view .LVU261
 938 0070 1368     		ldr	r3, [r2]
 939 0072 0133     		adds	r3, r3, #1
 940 0074 1360     		str	r3, [r2]
 941              	.LBE168:
5332:Middlewares/FreeRTOS/tasks.c ****         }
 942              		.loc 1 5332 85 view .LVU262
5332:Middlewares/FreeRTOS/tasks.c ****         }
 943              		.loc 1 5332 13 is_stmt 0 view .LVU263
 944 0076 E8E7     		b	.L65
 945              	.LVL66:
 946              	.L69:
5354:Middlewares/FreeRTOS/tasks.c **** 
 947              		.loc 1 5354 17 is_stmt 1 view .LVU264
 948 0078 0B4B     		ldr	r3, .L72+20
 949 007a 1868     		ldr	r0, [r3]
5354:Middlewares/FreeRTOS/tasks.c **** 
 950              		.loc 1 5354 64 is_stmt 0 view .LVU265
 951 007c 064B     		ldr	r3, .L72+4
 952 007e 1968     		ldr	r1, [r3]
5354:Middlewares/FreeRTOS/tasks.c **** 
 953              		.loc 1 5354 17 view .LVU266
 954 0080 0431     		adds	r1, r1, #4
 955 0082 FFF7FEFF 		bl	vListInsert
 956              	.LVL67:
5359:Middlewares/FreeRTOS/tasks.c ****                 {
 957              		.loc 1 5359 17 is_stmt 1 view .LVU267
5359:Middlewares/FreeRTOS/tasks.c ****                 {
 958              		.loc 1 5359 33 is_stmt 0 view .LVU268
 959 0086 094B     		ldr	r3, .L72+24
 960 0088 1B68     		ldr	r3, [r3]
5359:Middlewares/FreeRTOS/tasks.c ****                 {
 961              		.loc 1 5359 19 view .LVU269
 962 008a A342     		cmp	r3, r4
 963 008c DDD9     		bls	.L65
5361:Middlewares/FreeRTOS/tasks.c ****                 }
 964              		.loc 1 5361 21 is_stmt 1 view .LVU270
5361:Middlewares/FreeRTOS/tasks.c ****                 }
 965              		.loc 1 5361 42 is_stmt 0 view .LVU271
 966 008e 074B     		ldr	r3, .L72+24
 967 0090 1C60     		str	r4, [r3]
5365:Middlewares/FreeRTOS/tasks.c ****                 }
 968              		.loc 1 5365 45 is_stmt 1 view .LVU272
 969              		.loc 1 5407 1 is_stmt 0 view .LVU273
 970 0092 DAE7     		b	.L65
 971              	.L73:
 972              		.align	2
 973              	.L72:
 974 0094 00000000 		.word	xTickCount
 975 0098 00000000 		.word	pxCurrentTCB
 976 009c 00000000 		.word	uxTopReadyPriority
 977 00a0 00000000 		.word	pxOverflowDelayedTaskList
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 120


 978 00a4 00000000 		.word	xSuspendedTaskList
 979 00a8 00000000 		.word	pxDelayedTaskList
 980 00ac 00000000 		.word	xNextTaskUnblockTime
 981              		.cfi_endproc
 982              	.LFE57:
 984              		.section	.text.xTaskCreateStatic,"ax",%progbits
 985              		.align	1
 986              		.global	xTaskCreateStatic
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 991              	xTaskCreateStatic:
 992              	.LVL68:
 993              	.LFB5:
 571:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 994              		.loc 1 571 5 is_stmt 1 view -0
 995              		.cfi_startproc
 996              		@ args = 12, pretend = 0, frame = 8
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 571:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 998              		.loc 1 571 5 is_stmt 0 view .LVU275
 999 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1000              	.LCFI8:
 1001              		.cfi_def_cfa_offset 24
 1002              		.cfi_offset 4, -24
 1003              		.cfi_offset 5, -20
 1004              		.cfi_offset 6, -16
 1005              		.cfi_offset 7, -12
 1006              		.cfi_offset 8, -8
 1007              		.cfi_offset 14, -4
 1008 0004 86B0     		sub	sp, sp, #24
 1009              	.LCFI9:
 1010              		.cfi_def_cfa_offset 48
 1011 0006 0D9E     		ldr	r6, [sp, #52]
 572:Middlewares/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
 1012              		.loc 1 572 9 is_stmt 1 view .LVU276
 573:Middlewares/FreeRTOS/tasks.c **** 
 1013              		.loc 1 573 9 view .LVU277
 575:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 1014              		.loc 1 575 9 view .LVU278
 1015 0008 9EB1     		cbz	r6, .L82
 1016 000a 0446     		mov	r4, r0
 1017 000c 8846     		mov	r8, r1
 1018 000e 1746     		mov	r7, r2
 1019 0010 1D46     		mov	r5, r3
 575:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 1020              		.loc 1 575 47 discriminator 2 view .LVU279
 576:Middlewares/FreeRTOS/tasks.c **** 
 1021              		.loc 1 576 9 discriminator 2 view .LVU280
 1022 0012 0E9B     		ldr	r3, [sp, #56]
 1023              	.LVL69:
 576:Middlewares/FreeRTOS/tasks.c **** 
 1024              		.loc 1 576 9 is_stmt 0 discriminator 2 view .LVU281
 1025 0014 B3B1     		cbz	r3, .L83
 576:Middlewares/FreeRTOS/tasks.c **** 
 1026              		.loc 1 576 45 is_stmt 1 discriminator 2 view .LVU282
 1027              	.LBB169:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 121


 583:Middlewares/FreeRTOS/tasks.c ****             configASSERT( xSize == sizeof( TCB_t ) );
 1028              		.loc 1 583 13 discriminator 2 view .LVU283
 583:Middlewares/FreeRTOS/tasks.c ****             configASSERT( xSize == sizeof( TCB_t ) );
 1029              		.loc 1 583 29 is_stmt 0 discriminator 2 view .LVU284
 1030 0016 5423     		movs	r3, #84
 1031 0018 0493     		str	r3, [sp, #16]
 584:Middlewares/FreeRTOS/tasks.c ****             ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1032              		.loc 1 584 13 is_stmt 1 discriminator 2 view .LVU285
 1033 001a 049B     		ldr	r3, [sp, #16]
 1034 001c 542B     		cmp	r3, #84
 1035 001e 1AD0     		beq	.L79
 584:Middlewares/FreeRTOS/tasks.c ****             ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1036              		.loc 1 584 13 view .LVU286
 1037              	.LBB170:
 1038              	.LBI170:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1039              		.loc 2 196 34 view .LVU287
 1040              	.LBB171:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1041              		.loc 2 198 9 view .LVU288
 1042              		.loc 2 200 9 view .LVU289
 1043              		.syntax unified
 1044              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1045 0020 4FF01003 			mov r3, #16												
 1046 0024 83F31188 		msr basepri, r3											
 1047 0028 BFF36F8F 		isb														
 1048 002c BFF34F8F 		dsb														
 1049              	
 1050              	@ 0 "" 2
 1051              	.LVL70:
 1052              		.thumb
 1053              		.syntax unified
 1054              	.L80:
 1055              		.loc 2 200 9 is_stmt 0 view .LVU290
 1056              	.LBE171:
 1057              	.LBE170:
 584:Middlewares/FreeRTOS/tasks.c ****             ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1058              		.loc 1 584 13 is_stmt 1 discriminator 3 view .LVU291
 584:Middlewares/FreeRTOS/tasks.c ****             ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1059              		.loc 1 584 13 discriminator 3 view .LVU292
 1060 0030 FEE7     		b	.L80
 1061              	.LVL71:
 1062              	.L82:
 584:Middlewares/FreeRTOS/tasks.c ****             ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1063              		.loc 1 584 13 is_stmt 0 discriminator 3 view .LVU293
 1064              	.LBE169:
 575:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 1065              		.loc 1 575 9 is_stmt 1 view .LVU294
 1066              	.LBB172:
 1067              	.LBI172:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1068              		.loc 2 196 34 view .LVU295
 1069              	.LBB173:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1070              		.loc 2 198 9 view .LVU296
 1071              		.loc 2 200 9 view .LVU297
 1072              		.syntax unified
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 122


 1073              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1074 0032 4FF01003 			mov r3, #16												
 1075 0036 83F31188 		msr basepri, r3											
 1076 003a BFF36F8F 		isb														
 1077 003e BFF34F8F 		dsb														
 1078              	
 1079              	@ 0 "" 2
 1080              	.LVL72:
 1081              		.thumb
 1082              		.syntax unified
 1083              	.L76:
 1084              		.loc 2 200 9 is_stmt 0 view .LVU298
 1085              	.LBE173:
 1086              	.LBE172:
 575:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 1087              		.loc 1 575 9 is_stmt 1 discriminator 1 view .LVU299
 575:Middlewares/FreeRTOS/tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 1088              		.loc 1 575 9 discriminator 1 view .LVU300
 1089 0042 FEE7     		b	.L76
 1090              	.LVL73:
 1091              	.L83:
 576:Middlewares/FreeRTOS/tasks.c **** 
 1092              		.loc 1 576 9 view .LVU301
 1093              	.LBB174:
 1094              	.LBI174:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1095              		.loc 2 196 34 view .LVU302
 1096              	.LBB175:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1097              		.loc 2 198 9 view .LVU303
 1098              		.loc 2 200 9 view .LVU304
 1099              		.syntax unified
 1100              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1101 0044 4FF01003 			mov r3, #16												
 1102 0048 83F31188 		msr basepri, r3											
 1103 004c BFF36F8F 		isb														
 1104 0050 BFF34F8F 		dsb														
 1105              	
 1106              	@ 0 "" 2
 1107              	.LVL74:
 1108              		.thumb
 1109              		.syntax unified
 1110              	.L78:
 1111              		.loc 2 200 9 is_stmt 0 view .LVU305
 1112              	.LBE175:
 1113              	.LBE174:
 576:Middlewares/FreeRTOS/tasks.c **** 
 1114              		.loc 1 576 9 is_stmt 1 discriminator 2 view .LVU306
 576:Middlewares/FreeRTOS/tasks.c **** 
 1115              		.loc 1 576 9 discriminator 2 view .LVU307
 1116 0054 FEE7     		b	.L78
 1117              	.L79:
 1118              	.LBB176:
 584:Middlewares/FreeRTOS/tasks.c ****             ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1119              		.loc 1 584 53 discriminator 2 view .LVU308
 585:Middlewares/FreeRTOS/tasks.c ****         }
 1120              		.loc 1 585 13 discriminator 2 view .LVU309
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 123


 1121 0056 049B     		ldr	r3, [sp, #16]
 1122              	.LBE176:
 589:Middlewares/FreeRTOS/tasks.c ****         {
 1123              		.loc 1 589 9 discriminator 2 view .LVU310
 593:Middlewares/FreeRTOS/tasks.c ****             memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 1124              		.loc 1 593 13 discriminator 2 view .LVU311
 1125              	.LVL75:
 594:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1126              		.loc 1 594 13 discriminator 2 view .LVU312
 1127 0058 5422     		movs	r2, #84
 1128              	.LVL76:
 594:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1129              		.loc 1 594 13 is_stmt 0 discriminator 2 view .LVU313
 1130 005a 0021     		movs	r1, #0
 1131              	.LVL77:
 594:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1132              		.loc 1 594 13 discriminator 2 view .LVU314
 1133 005c 0E98     		ldr	r0, [sp, #56]
 1134              	.LVL78:
 594:Middlewares/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1135              		.loc 1 594 13 discriminator 2 view .LVU315
 1136 005e FFF7FEFF 		bl	memset
 1137              	.LVL79:
 595:Middlewares/FreeRTOS/tasks.c **** 
 1138              		.loc 1 595 13 is_stmt 1 discriminator 2 view .LVU316
 595:Middlewares/FreeRTOS/tasks.c **** 
 1139              		.loc 1 595 31 is_stmt 0 discriminator 2 view .LVU317
 1140 0062 0E9B     		ldr	r3, [sp, #56]
 1141 0064 1E63     		str	r6, [r3, #48]
 601:Middlewares/FreeRTOS/tasks.c ****             }
 1142              		.loc 1 601 17 is_stmt 1 discriminator 2 view .LVU318
 601:Middlewares/FreeRTOS/tasks.c ****             }
 1143              		.loc 1 601 49 is_stmt 0 discriminator 2 view .LVU319
 1144 0066 0223     		movs	r3, #2
 1145 0068 0E9A     		ldr	r2, [sp, #56]
 1146 006a 82F85130 		strb	r3, [r2, #81]
 605:Middlewares/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 1147              		.loc 1 605 13 is_stmt 1 discriminator 2 view .LVU320
 1148 006e 0023     		movs	r3, #0
 1149 0070 0393     		str	r3, [sp, #12]
 1150 0072 0292     		str	r2, [sp, #8]
 1151 0074 05AB     		add	r3, sp, #20
 1152 0076 0193     		str	r3, [sp, #4]
 1153 0078 0C9B     		ldr	r3, [sp, #48]
 1154 007a 0093     		str	r3, [sp]
 1155 007c 2B46     		mov	r3, r5
 1156 007e 3A46     		mov	r2, r7
 1157 0080 4146     		mov	r1, r8
 1158 0082 2046     		mov	r0, r4
 1159 0084 FFF7FEFF 		bl	prvInitialiseNewTask
 1160              	.LVL80:
 606:Middlewares/FreeRTOS/tasks.c ****         }
 1161              		.loc 1 606 13 discriminator 2 view .LVU321
 1162 0088 0E98     		ldr	r0, [sp, #56]
 1163 008a FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1164              	.LVL81:
 613:Middlewares/FreeRTOS/tasks.c ****     }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 124


 1165              		.loc 1 613 9 discriminator 2 view .LVU322
 614:Middlewares/FreeRTOS/tasks.c **** 
 1166              		.loc 1 614 5 is_stmt 0 discriminator 2 view .LVU323
 1167 008e 0598     		ldr	r0, [sp, #20]
 1168 0090 06B0     		add	sp, sp, #24
 1169              	.LCFI10:
 1170              		.cfi_def_cfa_offset 24
 1171              		@ sp needed
 1172 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 614:Middlewares/FreeRTOS/tasks.c **** 
 1173              		.loc 1 614 5 discriminator 2 view .LVU324
 1174              		.cfi_endproc
 1175              	.LFE5:
 1177              		.section	.text.xTaskCreate,"ax",%progbits
 1178              		.align	1
 1179              		.global	xTaskCreate
 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1184              	xTaskCreate:
 1185              	.LVL82:
 1186              	.LFB6:
 727:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 1187              		.loc 1 727 5 is_stmt 1 view -0
 1188              		.cfi_startproc
 1189              		@ args = 8, pretend = 0, frame = 0
 1190              		@ frame_needed = 0, uses_anonymous_args = 0
 727:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 1191              		.loc 1 727 5 is_stmt 0 view .LVU326
 1192 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1193              	.LCFI11:
 1194              		.cfi_def_cfa_offset 28
 1195              		.cfi_offset 4, -28
 1196              		.cfi_offset 5, -24
 1197              		.cfi_offset 6, -20
 1198              		.cfi_offset 7, -16
 1199              		.cfi_offset 8, -12
 1200              		.cfi_offset 9, -8
 1201              		.cfi_offset 14, -4
 1202 0004 85B0     		sub	sp, sp, #20
 1203              	.LCFI12:
 1204              		.cfi_def_cfa_offset 48
 1205 0006 0746     		mov	r7, r0
 1206 0008 8846     		mov	r8, r1
 1207 000a 1446     		mov	r4, r2
 1208 000c 1E46     		mov	r6, r3
 728:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 1209              		.loc 1 728 9 is_stmt 1 view .LVU327
 729:Middlewares/FreeRTOS/tasks.c **** 
 1210              		.loc 1 729 9 view .LVU328
 1211              	.LBB177:
 760:Middlewares/FreeRTOS/tasks.c **** 
 1212              		.loc 1 760 13 view .LVU329
 763:Middlewares/FreeRTOS/tasks.c **** 
 1213              		.loc 1 763 13 view .LVU330
 763:Middlewares/FreeRTOS/tasks.c **** 
 1214              		.loc 1 763 23 is_stmt 0 view .LVU331
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 125


 1215 000e 9000     		lsls	r0, r2, #2
 1216              	.LVL83:
 763:Middlewares/FreeRTOS/tasks.c **** 
 1217              		.loc 1 763 23 view .LVU332
 1218 0010 FFF7FEFF 		bl	pvPortMalloc
 1219              	.LVL84:
 765:Middlewares/FreeRTOS/tasks.c ****             {
 1220              		.loc 1 765 13 is_stmt 1 view .LVU333
 765:Middlewares/FreeRTOS/tasks.c ****             {
 1221              		.loc 1 765 15 is_stmt 0 view .LVU334
 1222 0014 18B3     		cbz	r0, .L87
 1223 0016 8146     		mov	r9, r0
 768:Middlewares/FreeRTOS/tasks.c **** 
 1224              		.loc 1 768 17 is_stmt 1 view .LVU335
 768:Middlewares/FreeRTOS/tasks.c **** 
 1225              		.loc 1 768 40 is_stmt 0 view .LVU336
 1226 0018 5420     		movs	r0, #84
 1227              	.LVL85:
 768:Middlewares/FreeRTOS/tasks.c **** 
 1228              		.loc 1 768 40 view .LVU337
 1229 001a FFF7FEFF 		bl	pvPortMalloc
 1230              	.LVL86:
 770:Middlewares/FreeRTOS/tasks.c ****                 {
 1231              		.loc 1 770 17 is_stmt 1 view .LVU338
 770:Middlewares/FreeRTOS/tasks.c ****                 {
 1232              		.loc 1 770 19 is_stmt 0 view .LVU339
 1233 001e 0546     		mov	r5, r0
 1234 0020 B8B1     		cbz	r0, .L86
 772:Middlewares/FreeRTOS/tasks.c **** 
 1235              		.loc 1 772 21 is_stmt 1 view .LVU340
 1236 0022 5422     		movs	r2, #84
 1237 0024 0021     		movs	r1, #0
 1238 0026 FFF7FEFF 		bl	memset
 1239              	.LVL87:
 775:Middlewares/FreeRTOS/tasks.c ****                 }
 1240              		.loc 1 775 21 view .LVU341
 775:Middlewares/FreeRTOS/tasks.c ****                 }
 1241              		.loc 1 775 39 is_stmt 0 view .LVU342
 1242 002a C5F83090 		str	r9, [r5, #48]
 775:Middlewares/FreeRTOS/tasks.c ****                 }
 1243              		.loc 1 775 39 view .LVU343
 1244              	.LBE177:
 791:Middlewares/FreeRTOS/tasks.c ****         {
 1245              		.loc 1 791 9 is_stmt 1 view .LVU344
 797:Middlewares/FreeRTOS/tasks.c ****             }
 1246              		.loc 1 797 17 view .LVU345
 801:Middlewares/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 1247              		.loc 1 801 13 view .LVU346
 1248 002e 0023     		movs	r3, #0
 1249 0030 0393     		str	r3, [sp, #12]
 1250 0032 0295     		str	r5, [sp, #8]
 1251 0034 0D9B     		ldr	r3, [sp, #52]
 1252 0036 0193     		str	r3, [sp, #4]
 1253 0038 0C9B     		ldr	r3, [sp, #48]
 1254 003a 0093     		str	r3, [sp]
 1255 003c 3346     		mov	r3, r6
 1256 003e 2246     		mov	r2, r4
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 126


 1257 0040 4146     		mov	r1, r8
 1258 0042 3846     		mov	r0, r7
 1259 0044 FFF7FEFF 		bl	prvInitialiseNewTask
 1260              	.LVL88:
 802:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdPASS;
 1261              		.loc 1 802 13 view .LVU347
 1262 0048 2846     		mov	r0, r5
 1263 004a FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1264              	.LVL89:
 803:Middlewares/FreeRTOS/tasks.c ****         }
 1265              		.loc 1 803 13 view .LVU348
 803:Middlewares/FreeRTOS/tasks.c ****         }
 1266              		.loc 1 803 21 is_stmt 0 view .LVU349
 1267 004e 0120     		movs	r0, #1
 1268 0050 07E0     		b	.L84
 1269              	.LVL90:
 1270              	.L86:
 1271              	.LBB178:
 781:Middlewares/FreeRTOS/tasks.c ****                 }
 1272              		.loc 1 781 21 is_stmt 1 view .LVU350
 1273 0052 4846     		mov	r0, r9
 1274              	.LVL91:
 781:Middlewares/FreeRTOS/tasks.c ****                 }
 1275              		.loc 1 781 21 is_stmt 0 view .LVU351
 1276 0054 FFF7FEFF 		bl	vPortFree
 1277              	.LVL92:
 781:Middlewares/FreeRTOS/tasks.c ****                 }
 1278              		.loc 1 781 21 view .LVU352
 1279              	.LBE178:
 791:Middlewares/FreeRTOS/tasks.c ****         {
 1280              		.loc 1 791 9 is_stmt 1 view .LVU353
 807:Middlewares/FreeRTOS/tasks.c ****         }
 1281              		.loc 1 807 21 is_stmt 0 view .LVU354
 1282 0058 4FF0FF30 		mov	r0, #-1
 1283 005c 01E0     		b	.L84
 1284              	.LVL93:
 1285              	.L87:
 807:Middlewares/FreeRTOS/tasks.c ****         }
 1286              		.loc 1 807 21 view .LVU355
 1287 005e 4FF0FF30 		mov	r0, #-1
 1288              	.LVL94:
 810:Middlewares/FreeRTOS/tasks.c ****     }
 1289              		.loc 1 810 9 is_stmt 1 view .LVU356
 1290              	.L84:
 811:Middlewares/FreeRTOS/tasks.c **** 
 1291              		.loc 1 811 5 is_stmt 0 view .LVU357
 1292 0062 05B0     		add	sp, sp, #20
 1293              	.LCFI13:
 1294              		.cfi_def_cfa_offset 28
 1295              		@ sp needed
 1296 0064 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 811:Middlewares/FreeRTOS/tasks.c **** 
 1297              		.loc 1 811 5 view .LVU358
 1298              		.cfi_endproc
 1299              	.LFE6:
 1301              		.section	.text.vTaskDelete,"ax",%progbits
 1302              		.align	1
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 127


 1303              		.global	vTaskDelete
 1304              		.syntax unified
 1305              		.thumb
 1306              		.thumb_func
 1308              	vTaskDelete:
 1309              	.LVL95:
 1310              	.LFB9:
1113:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1311              		.loc 1 1113 5 is_stmt 1 view -0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 0
 1314              		@ frame_needed = 0, uses_anonymous_args = 0
1113:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1315              		.loc 1 1113 5 is_stmt 0 view .LVU360
 1316 0000 38B5     		push	{r3, r4, r5, lr}
 1317              	.LCFI14:
 1318              		.cfi_def_cfa_offset 16
 1319              		.cfi_offset 3, -16
 1320              		.cfi_offset 4, -12
 1321              		.cfi_offset 5, -8
 1322              		.cfi_offset 14, -4
 1323 0002 0446     		mov	r4, r0
1114:Middlewares/FreeRTOS/tasks.c **** 
 1324              		.loc 1 1114 9 is_stmt 1 view .LVU361
1116:Middlewares/FreeRTOS/tasks.c ****         {
 1325              		.loc 1 1116 9 view .LVU362
 1326 0004 FFF7FEFF 		bl	vPortEnterCritical
 1327              	.LVL96:
1120:Middlewares/FreeRTOS/tasks.c **** 
 1328              		.loc 1 1120 13 view .LVU363
1120:Middlewares/FreeRTOS/tasks.c **** 
 1329              		.loc 1 1120 21 is_stmt 0 view .LVU364
 1330 0008 002C     		cmp	r4, #0
 1331 000a 38D0     		beq	.L100
 1332              	.LVL97:
 1333              	.L90:
1123:Middlewares/FreeRTOS/tasks.c ****             {
 1334              		.loc 1 1123 13 is_stmt 1 discriminator 4 view .LVU365
1123:Middlewares/FreeRTOS/tasks.c ****             {
 1335              		.loc 1 1123 17 is_stmt 0 discriminator 4 view .LVU366
 1336 000c 251D     		adds	r5, r4, #4
 1337 000e 2846     		mov	r0, r5
 1338 0010 FFF7FEFF 		bl	uxListRemove
 1339              	.LVL98:
1123:Middlewares/FreeRTOS/tasks.c ****             {
 1340              		.loc 1 1123 15 discriminator 4 view .LVU367
 1341 0014 70B9     		cbnz	r0, .L91
1125:Middlewares/FreeRTOS/tasks.c ****             }
 1342              		.loc 1 1125 17 is_stmt 1 view .LVU368
 1343 0016 E26A     		ldr	r2, [r4, #44]
 1344 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1345 001c 9B00     		lsls	r3, r3, #2
 1346 001e 2949     		ldr	r1, .L103
 1347 0020 CB58     		ldr	r3, [r1, r3]
 1348 0022 3BB9     		cbnz	r3, .L91
1125:Middlewares/FreeRTOS/tasks.c ****             }
 1349              		.loc 1 1125 17 discriminator 1 view .LVU369
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 128


 1350 0024 0123     		movs	r3, #1
 1351 0026 03FA02F2 		lsl	r2, r3, r2
 1352 002a 2749     		ldr	r1, .L103+4
 1353 002c 0B68     		ldr	r3, [r1]
 1354 002e 23EA0203 		bic	r3, r3, r2
 1355 0032 0B60     		str	r3, [r1]
 1356              	.L91:
1129:Middlewares/FreeRTOS/tasks.c ****             }
 1357              		.loc 1 1129 41 view .LVU370
1133:Middlewares/FreeRTOS/tasks.c ****             {
 1358              		.loc 1 1133 13 view .LVU371
1133:Middlewares/FreeRTOS/tasks.c ****             {
 1359              		.loc 1 1133 17 is_stmt 0 view .LVU372
 1360 0034 A36A     		ldr	r3, [r4, #40]
1133:Middlewares/FreeRTOS/tasks.c ****             {
 1361              		.loc 1 1133 15 view .LVU373
 1362 0036 1BB1     		cbz	r3, .L92
1135:Middlewares/FreeRTOS/tasks.c ****             }
 1363              		.loc 1 1135 17 is_stmt 1 view .LVU374
1135:Middlewares/FreeRTOS/tasks.c ****             }
 1364              		.loc 1 1135 26 is_stmt 0 view .LVU375
 1365 0038 04F11800 		add	r0, r4, #24
 1366 003c FFF7FEFF 		bl	uxListRemove
 1367              	.LVL99:
 1368              	.L92:
1139:Middlewares/FreeRTOS/tasks.c ****             }
 1369              		.loc 1 1139 41 is_stmt 1 view .LVU376
1146:Middlewares/FreeRTOS/tasks.c **** 
 1370              		.loc 1 1146 13 view .LVU377
1146:Middlewares/FreeRTOS/tasks.c **** 
 1371              		.loc 1 1146 25 is_stmt 0 view .LVU378
 1372 0040 224A     		ldr	r2, .L103+8
 1373 0042 1368     		ldr	r3, [r2]
 1374 0044 0133     		adds	r3, r3, #1
 1375 0046 1360     		str	r3, [r2]
1148:Middlewares/FreeRTOS/tasks.c ****             {
 1376              		.loc 1 1148 13 is_stmt 1 view .LVU379
1148:Middlewares/FreeRTOS/tasks.c ****             {
 1377              		.loc 1 1148 23 is_stmt 0 view .LVU380
 1378 0048 214B     		ldr	r3, .L103+12
 1379 004a 1B68     		ldr	r3, [r3]
1148:Middlewares/FreeRTOS/tasks.c ****             {
 1380              		.loc 1 1148 15 view .LVU381
 1381 004c A342     		cmp	r3, r4
 1382 004e 19D0     		beq	.L101
1175:Middlewares/FreeRTOS/tasks.c ****                 traceTASK_DELETE( pxTCB );
 1383              		.loc 1 1175 17 is_stmt 1 view .LVU382
 1384 0050 204A     		ldr	r2, .L103+16
 1385 0052 1368     		ldr	r3, [r2]
 1386 0054 013B     		subs	r3, r3, #1
 1387 0056 1360     		str	r3, [r2]
1176:Middlewares/FreeRTOS/tasks.c **** 
 1388              		.loc 1 1176 42 view .LVU383
1180:Middlewares/FreeRTOS/tasks.c ****             }
 1389              		.loc 1 1180 17 view .LVU384
 1390 0058 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1391              	.LVL100:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 129


 1392              	.L94:
1183:Middlewares/FreeRTOS/tasks.c **** 
 1393              		.loc 1 1183 9 view .LVU385
 1394 005c FFF7FEFF 		bl	vPortExitCritical
 1395              	.LVL101:
1188:Middlewares/FreeRTOS/tasks.c ****         {
 1396              		.loc 1 1188 9 view .LVU386
1188:Middlewares/FreeRTOS/tasks.c ****         {
 1397              		.loc 1 1188 19 is_stmt 0 view .LVU387
 1398 0060 1B4B     		ldr	r3, .L103+12
 1399 0062 1B68     		ldr	r3, [r3]
1188:Middlewares/FreeRTOS/tasks.c ****         {
 1400              		.loc 1 1188 11 view .LVU388
 1401 0064 A342     		cmp	r3, r4
 1402 0066 02D0     		beq	.L95
1190:Middlewares/FreeRTOS/tasks.c ****         }
 1403              		.loc 1 1190 13 is_stmt 1 view .LVU389
 1404 0068 2046     		mov	r0, r4
 1405 006a FFF7FEFF 		bl	prvDeleteTCB
 1406              	.LVL102:
 1407              	.L95:
1195:Middlewares/FreeRTOS/tasks.c ****         {
 1408              		.loc 1 1195 9 view .LVU390
1195:Middlewares/FreeRTOS/tasks.c ****         {
 1409              		.loc 1 1195 31 is_stmt 0 view .LVU391
 1410 006e 1A4B     		ldr	r3, .L103+20
 1411 0070 1B68     		ldr	r3, [r3]
1195:Middlewares/FreeRTOS/tasks.c ****         {
 1412              		.loc 1 1195 11 view .LVU392
 1413 0072 1BB1     		cbz	r3, .L89
1197:Middlewares/FreeRTOS/tasks.c ****             {
 1414              		.loc 1 1197 13 is_stmt 1 view .LVU393
1197:Middlewares/FreeRTOS/tasks.c ****             {
 1415              		.loc 1 1197 23 is_stmt 0 view .LVU394
 1416 0074 164B     		ldr	r3, .L103+12
 1417 0076 1B68     		ldr	r3, [r3]
1197:Middlewares/FreeRTOS/tasks.c ****             {
 1418              		.loc 1 1197 15 view .LVU395
 1419 0078 A342     		cmp	r3, r4
 1420 007a 0CD0     		beq	.L102
 1421              	.L89:
1207:Middlewares/FreeRTOS/tasks.c **** 
 1422              		.loc 1 1207 5 view .LVU396
 1423 007c 38BD     		pop	{r3, r4, r5, pc}
 1424              	.LVL103:
 1425              	.L100:
1120:Middlewares/FreeRTOS/tasks.c **** 
 1426              		.loc 1 1120 21 discriminator 1 view .LVU397
 1427 007e 144B     		ldr	r3, .L103+12
 1428 0080 1C68     		ldr	r4, [r3]
 1429              	.LVL104:
1120:Middlewares/FreeRTOS/tasks.c **** 
 1430              		.loc 1 1120 21 discriminator 1 view .LVU398
 1431 0082 C3E7     		b	.L90
 1432              	.LVL105:
 1433              	.L101:
1155:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 130


 1434              		.loc 1 1155 17 is_stmt 1 view .LVU399
 1435 0084 2946     		mov	r1, r5
 1436 0086 1548     		ldr	r0, .L103+24
 1437 0088 FFF7FEFF 		bl	vListInsertEnd
 1438              	.LVL106:
1160:Middlewares/FreeRTOS/tasks.c **** 
 1439              		.loc 1 1160 17 view .LVU400
 1440 008c 144A     		ldr	r2, .L103+28
 1441 008e 1368     		ldr	r3, [r2]
 1442 0090 0133     		adds	r3, r3, #1
 1443 0092 1360     		str	r3, [r2]
1164:Middlewares/FreeRTOS/tasks.c **** 
 1444              		.loc 1 1164 42 view .LVU401
1171:Middlewares/FreeRTOS/tasks.c ****             }
 1445              		.loc 1 1171 66 view .LVU402
 1446 0094 E2E7     		b	.L94
 1447              	.L102:
1199:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1448              		.loc 1 1199 17 view .LVU403
 1449 0096 134B     		ldr	r3, .L103+32
 1450 0098 1B68     		ldr	r3, [r3]
 1451 009a 43B1     		cbz	r3, .L97
1199:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1452              		.loc 1 1199 17 view .LVU404
 1453              	.LBB179:
 1454              	.LBI179:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1455              		.loc 2 196 34 view .LVU405
 1456              	.LBB180:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1457              		.loc 2 198 9 view .LVU406
 1458              		.loc 2 200 9 view .LVU407
 1459              		.syntax unified
 1460              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1461 009c 4FF01003 			mov r3, #16												
 1462 00a0 83F31188 		msr basepri, r3											
 1463 00a4 BFF36F8F 		isb														
 1464 00a8 BFF34F8F 		dsb														
 1465              	
 1466              	@ 0 "" 2
 1467              	.LVL107:
 1468              		.thumb
 1469              		.syntax unified
 1470              	.L98:
 1471              		.loc 2 200 9 is_stmt 0 view .LVU408
 1472              	.LBE180:
 1473              	.LBE179:
1199:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1474              		.loc 1 1199 17 is_stmt 1 discriminator 1 view .LVU409
1199:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1475              		.loc 1 1199 17 discriminator 1 view .LVU410
 1476 00ac FEE7     		b	.L98
 1477              	.L97:
1199:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1478              		.loc 1 1199 58 discriminator 2 view .LVU411
1200:Middlewares/FreeRTOS/tasks.c ****             }
 1479              		.loc 1 1200 17 discriminator 2 view .LVU412
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 131


 1480 00ae 4FF0E023 		mov	r3, #-536813568
 1481 00b2 4FF08052 		mov	r2, #268435456
 1482 00b6 C3F8042D 		str	r2, [r3, #3332]
1200:Middlewares/FreeRTOS/tasks.c ****             }
 1483              		.loc 1 1200 17 discriminator 2 view .LVU413
 1484              		.syntax unified
 1485              	@ 1200 "Middlewares/FreeRTOS/tasks.c" 1
 1486 00ba BFF34F8F 		dsb
 1487              	@ 0 "" 2
1200:Middlewares/FreeRTOS/tasks.c ****             }
 1488              		.loc 1 1200 17 discriminator 2 view .LVU414
 1489              	@ 1200 "Middlewares/FreeRTOS/tasks.c" 1
 1490 00be BFF36F8F 		isb
 1491              	@ 0 "" 2
1200:Middlewares/FreeRTOS/tasks.c ****             }
 1492              		.loc 1 1200 39 discriminator 2 view .LVU415
1204:Middlewares/FreeRTOS/tasks.c ****             }
 1493              		.loc 1 1204 41 discriminator 2 view .LVU416
1207:Middlewares/FreeRTOS/tasks.c **** 
 1494              		.loc 1 1207 5 is_stmt 0 discriminator 2 view .LVU417
 1495              		.thumb
 1496              		.syntax unified
 1497 00c2 DBE7     		b	.L89
 1498              	.L104:
 1499              		.align	2
 1500              	.L103:
 1501 00c4 00000000 		.word	pxReadyTasksLists
 1502 00c8 00000000 		.word	uxTopReadyPriority
 1503 00cc 00000000 		.word	uxTaskNumber
 1504 00d0 00000000 		.word	pxCurrentTCB
 1505 00d4 00000000 		.word	uxCurrentNumberOfTasks
 1506 00d8 00000000 		.word	xSchedulerRunning
 1507 00dc 00000000 		.word	xTasksWaitingTermination
 1508 00e0 00000000 		.word	uxDeletedTasksWaitingCleanUp
 1509 00e4 00000000 		.word	uxSchedulerSuspended
 1510              		.cfi_endproc
 1511              	.LFE9:
 1513              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1514              		.align	1
 1515              		.global	uxTaskPriorityGet
 1516              		.syntax unified
 1517              		.thumb
 1518              		.thumb_func
 1520              	uxTaskPriorityGet:
 1521              	.LVL108:
 1522              	.LFB12:
1446:Middlewares/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1523              		.loc 1 1446 5 is_stmt 1 view -0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 0
 1526              		@ frame_needed = 0, uses_anonymous_args = 0
1446:Middlewares/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1527              		.loc 1 1446 5 is_stmt 0 view .LVU419
 1528 0000 10B5     		push	{r4, lr}
 1529              	.LCFI15:
 1530              		.cfi_def_cfa_offset 8
 1531              		.cfi_offset 4, -8
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 132


 1532              		.cfi_offset 14, -4
 1533 0002 0446     		mov	r4, r0
1447:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
 1534              		.loc 1 1447 9 is_stmt 1 view .LVU420
1448:Middlewares/FreeRTOS/tasks.c **** 
 1535              		.loc 1 1448 9 view .LVU421
1450:Middlewares/FreeRTOS/tasks.c ****         {
 1536              		.loc 1 1450 9 view .LVU422
 1537 0004 FFF7FEFF 		bl	vPortEnterCritical
 1538              	.LVL109:
1454:Middlewares/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1539              		.loc 1 1454 13 view .LVU423
1454:Middlewares/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1540              		.loc 1 1454 21 is_stmt 0 view .LVU424
 1541 0008 24B1     		cbz	r4, .L108
 1542              	.LVL110:
 1543              	.L106:
1455:Middlewares/FreeRTOS/tasks.c ****         }
 1544              		.loc 1 1455 13 is_stmt 1 discriminator 4 view .LVU425
1455:Middlewares/FreeRTOS/tasks.c ****         }
 1545              		.loc 1 1455 22 is_stmt 0 discriminator 4 view .LVU426
 1546 000a E46A     		ldr	r4, [r4, #44]
 1547              	.LVL111:
1457:Middlewares/FreeRTOS/tasks.c **** 
 1548              		.loc 1 1457 9 is_stmt 1 discriminator 4 view .LVU427
 1549 000c FFF7FEFF 		bl	vPortExitCritical
 1550              	.LVL112:
1459:Middlewares/FreeRTOS/tasks.c ****     }
 1551              		.loc 1 1459 9 discriminator 4 view .LVU428
1460:Middlewares/FreeRTOS/tasks.c **** 
 1552              		.loc 1 1460 5 is_stmt 0 discriminator 4 view .LVU429
 1553 0010 2046     		mov	r0, r4
 1554 0012 10BD     		pop	{r4, pc}
 1555              	.LVL113:
 1556              	.L108:
1454:Middlewares/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1557              		.loc 1 1454 21 discriminator 1 view .LVU430
 1558 0014 014B     		ldr	r3, .L109
 1559 0016 1C68     		ldr	r4, [r3]
 1560              	.LVL114:
1454:Middlewares/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1561              		.loc 1 1454 21 discriminator 1 view .LVU431
 1562 0018 F7E7     		b	.L106
 1563              	.L110:
 1564 001a 00BF     		.align	2
 1565              	.L109:
 1566 001c 00000000 		.word	pxCurrentTCB
 1567              		.cfi_endproc
 1568              	.LFE12:
 1570              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1571              		.align	1
 1572              		.global	uxTaskPriorityGetFromISR
 1573              		.syntax unified
 1574              		.thumb
 1575              		.thumb_func
 1577              	uxTaskPriorityGetFromISR:
 1578              	.LVL115:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 133


 1579              	.LFB13:
1468:Middlewares/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1580              		.loc 1 1468 5 is_stmt 1 view -0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 0
 1583              		@ frame_needed = 0, uses_anonymous_args = 0
1468:Middlewares/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1584              		.loc 1 1468 5 is_stmt 0 view .LVU433
 1585 0000 10B5     		push	{r4, lr}
 1586              	.LCFI16:
 1587              		.cfi_def_cfa_offset 8
 1588              		.cfi_offset 4, -8
 1589              		.cfi_offset 14, -4
 1590 0002 0446     		mov	r4, r0
1469:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxReturn, uxSavedInterruptState;
 1591              		.loc 1 1469 9 is_stmt 1 view .LVU434
1470:Middlewares/FreeRTOS/tasks.c **** 
 1592              		.loc 1 1470 9 view .LVU435
1488:Middlewares/FreeRTOS/tasks.c **** 
 1593              		.loc 1 1488 9 view .LVU436
 1594 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1595              	.LVL116:
1490:Middlewares/FreeRTOS/tasks.c ****         {
 1596              		.loc 1 1490 9 view .LVU437
 1597              	.LBB181:
 1598              	.LBI181:
 201:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 202:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %0, %1												\n"\
 203:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %0											\n"\
 204:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 205:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 206:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 207:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 208:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 209:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 210:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 211:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 212:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1599              		.loc 2 212 38 view .LVU438
 1600              	.LBB182:
 213:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 214:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1601              		.loc 2 214 9 view .LVU439
 215:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 216:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1602              		.loc 2 216 9 view .LVU440
 1603              		.syntax unified
 1604              	@ 216 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1605 0008 EFF31183 			mrs r3, basepri											
 1606 000c 4FF01002 		mov r2, #16												
 1607 0010 82F31188 		msr basepri, r2											
 1608 0014 BFF36F8F 		isb														
 1609 0018 BFF34F8F 		dsb														
 1610              	
 1611              	@ 0 "" 2
 1612              	.LVL117:
 217:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 134


 218:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mrs %0, basepri											\n"\
 219:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %1, %2												\n"\
 220:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %1											\n"\
 221:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 222:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 223:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 224:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 225:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 226:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 227:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * warnings. */
 228:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return ulOriginalBASEPRI;
 1613              		.loc 2 228 9 view .LVU441
 1614              		.loc 2 228 9 is_stmt 0 view .LVU442
 1615              		.thumb
 1616              		.syntax unified
 1617              	.LBE182:
 1618              	.LBE181:
1494:Middlewares/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1619              		.loc 1 1494 13 is_stmt 1 view .LVU443
1494:Middlewares/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1620              		.loc 1 1494 21 is_stmt 0 view .LVU444
 1621 001c 1CB1     		cbz	r4, .L114
 1622              	.LVL118:
 1623              	.L112:
1495:Middlewares/FreeRTOS/tasks.c ****         }
 1624              		.loc 1 1495 13 is_stmt 1 discriminator 4 view .LVU445
1495:Middlewares/FreeRTOS/tasks.c ****         }
 1625              		.loc 1 1495 22 is_stmt 0 discriminator 4 view .LVU446
 1626 001e E06A     		ldr	r0, [r4, #44]
 1627              	.LVL119:
1497:Middlewares/FreeRTOS/tasks.c **** 
 1628              		.loc 1 1497 9 is_stmt 1 discriminator 4 view .LVU447
 1629              	.LBB183:
 1630              	.LBI183:
 229:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 230:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 231:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 232:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1631              		.loc 2 232 34 discriminator 4 view .LVU448
 1632              	.LBB184:
 233:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 234:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1633              		.loc 2 234 9 discriminator 4 view .LVU449
 1634              		.syntax unified
 1635              	@ 234 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1636 0020 83F31188 			msr basepri, r3	
 1637              	@ 0 "" 2
 1638              		.thumb
 1639              		.syntax unified
 1640              	.LBE184:
 1641              	.LBE183:
1499:Middlewares/FreeRTOS/tasks.c ****     }
 1642              		.loc 1 1499 9 discriminator 4 view .LVU450
1500:Middlewares/FreeRTOS/tasks.c **** 
 1643              		.loc 1 1500 5 is_stmt 0 discriminator 4 view .LVU451
 1644 0024 10BD     		pop	{r4, pc}
 1645              	.LVL120:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 135


 1646              	.L114:
1494:Middlewares/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1647              		.loc 1 1494 21 discriminator 1 view .LVU452
 1648 0026 014A     		ldr	r2, .L115
 1649 0028 1468     		ldr	r4, [r2]
 1650              	.LVL121:
1494:Middlewares/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1651              		.loc 1 1494 21 discriminator 1 view .LVU453
 1652 002a F8E7     		b	.L112
 1653              	.L116:
 1654              		.align	2
 1655              	.L115:
 1656 002c 00000000 		.word	pxCurrentTCB
 1657              		.cfi_endproc
 1658              	.LFE13:
 1660              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1661              		.align	1
 1662              		.global	vTaskPrioritySet
 1663              		.syntax unified
 1664              		.thumb
 1665              		.thumb_func
 1667              	vTaskPrioritySet:
 1668              	.LVL122:
 1669              	.LFB14:
1509:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1670              		.loc 1 1509 5 is_stmt 1 view -0
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 0
 1673              		@ frame_needed = 0, uses_anonymous_args = 0
1509:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1674              		.loc 1 1509 5 is_stmt 0 view .LVU455
 1675 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1676              	.LCFI17:
 1677              		.cfi_def_cfa_offset 24
 1678              		.cfi_offset 3, -24
 1679              		.cfi_offset 4, -20
 1680              		.cfi_offset 5, -16
 1681              		.cfi_offset 6, -12
 1682              		.cfi_offset 7, -8
 1683              		.cfi_offset 14, -4
1510:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1684              		.loc 1 1510 9 is_stmt 1 view .LVU456
1511:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 1685              		.loc 1 1511 9 view .LVU457
1512:Middlewares/FreeRTOS/tasks.c **** 
 1686              		.loc 1 1512 9 view .LVU458
 1687              	.LVL123:
1514:Middlewares/FreeRTOS/tasks.c **** 
 1688              		.loc 1 1514 9 view .LVU459
 1689 0002 0629     		cmp	r1, #6
 1690 0004 08D9     		bls	.L118
1514:Middlewares/FreeRTOS/tasks.c **** 
 1691              		.loc 1 1514 9 view .LVU460
 1692              	.LBB185:
 1693              	.LBI185:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1694              		.loc 2 196 34 view .LVU461
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 136


 1695              	.LBB186:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1696              		.loc 2 198 9 view .LVU462
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1697              		.loc 2 200 9 view .LVU463
 1698              		.syntax unified
 1699              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1700 0006 4FF01003 			mov r3, #16												
 1701 000a 83F31188 		msr basepri, r3											
 1702 000e BFF36F8F 		isb														
 1703 0012 BFF34F8F 		dsb														
 1704              	
 1705              	@ 0 "" 2
 1706              	.LVL124:
 1707              		.thumb
 1708              		.syntax unified
 1709              	.L119:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1710              		.loc 2 200 9 is_stmt 0 view .LVU464
 1711              	.LBE186:
 1712              	.LBE185:
1514:Middlewares/FreeRTOS/tasks.c **** 
 1713              		.loc 1 1514 9 is_stmt 1 discriminator 1 view .LVU465
1514:Middlewares/FreeRTOS/tasks.c **** 
 1714              		.loc 1 1514 9 discriminator 1 view .LVU466
 1715 0016 FEE7     		b	.L119
 1716              	.L118:
 1717 0018 0446     		mov	r4, r0
 1718 001a 0D46     		mov	r5, r1
1514:Middlewares/FreeRTOS/tasks.c **** 
 1719              		.loc 1 1514 61 view .LVU467
1517:Middlewares/FreeRTOS/tasks.c ****         {
 1720              		.loc 1 1517 9 view .LVU468
 1721              	.LVL125:
1523:Middlewares/FreeRTOS/tasks.c ****         }
 1722              		.loc 1 1523 37 view .LVU469
1526:Middlewares/FreeRTOS/tasks.c ****         {
 1723              		.loc 1 1526 9 view .LVU470
 1724 001c FFF7FEFF 		bl	vPortEnterCritical
 1725              	.LVL126:
1530:Middlewares/FreeRTOS/tasks.c **** 
 1726              		.loc 1 1530 13 view .LVU471
1530:Middlewares/FreeRTOS/tasks.c **** 
 1727              		.loc 1 1530 21 is_stmt 0 view .LVU472
 1728 0020 74B1     		cbz	r4, .L132
 1729              	.LVL127:
 1730              	.L120:
1532:Middlewares/FreeRTOS/tasks.c **** 
 1731              		.loc 1 1532 59 is_stmt 1 discriminator 4 view .LVU473
1536:Middlewares/FreeRTOS/tasks.c ****             }
 1732              		.loc 1 1536 17 discriminator 4 view .LVU474
1536:Middlewares/FreeRTOS/tasks.c ****             }
 1733              		.loc 1 1536 39 is_stmt 0 discriminator 4 view .LVU475
 1734 0022 636C     		ldr	r3, [r4, #68]
 1735              	.LVL128:
1544:Middlewares/FreeRTOS/tasks.c ****             {
 1736              		.loc 1 1544 13 is_stmt 1 discriminator 4 view .LVU476
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 137


1544:Middlewares/FreeRTOS/tasks.c ****             {
 1737              		.loc 1 1544 15 is_stmt 0 discriminator 4 view .LVU477
 1738 0024 9D42     		cmp	r5, r3
 1739 0026 30D0     		beq	.L121
1548:Middlewares/FreeRTOS/tasks.c ****                 {
 1740              		.loc 1 1548 17 is_stmt 1 view .LVU478
1548:Middlewares/FreeRTOS/tasks.c ****                 {
 1741              		.loc 1 1548 19 is_stmt 0 view .LVU479
 1742 0028 0DD9     		bls	.L122
1550:Middlewares/FreeRTOS/tasks.c ****                     {
 1743              		.loc 1 1550 21 is_stmt 1 view .LVU480
1550:Middlewares/FreeRTOS/tasks.c ****                     {
 1744              		.loc 1 1550 31 is_stmt 0 view .LVU481
 1745 002a 324A     		ldr	r2, .L135
 1746 002c 1268     		ldr	r2, [r2]
1550:Middlewares/FreeRTOS/tasks.c ****                     {
 1747              		.loc 1 1550 23 view .LVU482
 1748 002e A242     		cmp	r2, r4
 1749 0030 2ED0     		beq	.L128
1555:Middlewares/FreeRTOS/tasks.c ****                         {
 1750              		.loc 1 1555 25 is_stmt 1 view .LVU483
1555:Middlewares/FreeRTOS/tasks.c ****                         {
 1751              		.loc 1 1555 58 is_stmt 0 view .LVU484
 1752 0032 304A     		ldr	r2, .L135
 1753 0034 1268     		ldr	r2, [r2]
 1754 0036 D26A     		ldr	r2, [r2, #44]
1555:Middlewares/FreeRTOS/tasks.c ****                         {
 1755              		.loc 1 1555 27 view .LVU485
 1756 0038 AA42     		cmp	r2, r5
 1757 003a 2BD9     		bls	.L129
1512:Middlewares/FreeRTOS/tasks.c **** 
 1758              		.loc 1 1512 20 view .LVU486
 1759 003c 0027     		movs	r7, #0
 1760 003e 07E0     		b	.L123
 1761              	.LVL129:
 1762              	.L132:
1530:Middlewares/FreeRTOS/tasks.c **** 
 1763              		.loc 1 1530 21 discriminator 1 view .LVU487
 1764 0040 2C4B     		ldr	r3, .L135
 1765 0042 1C68     		ldr	r4, [r3]
 1766              	.LVL130:
1530:Middlewares/FreeRTOS/tasks.c **** 
 1767              		.loc 1 1530 21 discriminator 1 view .LVU488
 1768 0044 EDE7     		b	.L120
 1769              	.LVL131:
 1770              	.L122:
1571:Middlewares/FreeRTOS/tasks.c ****                 {
 1771              		.loc 1 1571 22 is_stmt 1 view .LVU489
1571:Middlewares/FreeRTOS/tasks.c ****                 {
 1772              		.loc 1 1571 32 is_stmt 0 view .LVU490
 1773 0046 2B4A     		ldr	r2, .L135
 1774 0048 1268     		ldr	r2, [r2]
1571:Middlewares/FreeRTOS/tasks.c ****                 {
 1775              		.loc 1 1571 24 view .LVU491
 1776 004a A242     		cmp	r2, r4
 1777 004c 24D0     		beq	.L130
1512:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 138


 1778              		.loc 1 1512 20 view .LVU492
 1779 004e 0027     		movs	r7, #0
 1780              	.L123:
 1781              	.LVL132:
1583:Middlewares/FreeRTOS/tasks.c **** 
 1782              		.loc 1 1583 17 is_stmt 1 view .LVU493
1588:Middlewares/FreeRTOS/tasks.c **** 
 1783              		.loc 1 1588 17 view .LVU494
1588:Middlewares/FreeRTOS/tasks.c **** 
 1784              		.loc 1 1588 39 is_stmt 0 view .LVU495
 1785 0050 E66A     		ldr	r6, [r4, #44]
 1786              	.LVL133:
1594:Middlewares/FreeRTOS/tasks.c ****                     {
 1787              		.loc 1 1594 21 is_stmt 1 view .LVU496
1594:Middlewares/FreeRTOS/tasks.c ****                     {
 1788              		.loc 1 1594 23 is_stmt 0 view .LVU497
 1789 0052 B342     		cmp	r3, r6
 1790 0054 22D0     		beq	.L133
 1791              	.L124:
1600:Middlewares/FreeRTOS/tasks.c ****                     }
 1792              		.loc 1 1600 49 is_stmt 1 view .LVU498
1604:Middlewares/FreeRTOS/tasks.c ****                 }
 1793              		.loc 1 1604 21 view .LVU499
1604:Middlewares/FreeRTOS/tasks.c ****                 }
 1794              		.loc 1 1604 43 is_stmt 0 view .LVU500
 1795 0056 6564     		str	r5, [r4, #68]
1614:Middlewares/FreeRTOS/tasks.c ****                 {
 1796              		.loc 1 1614 17 is_stmt 1 view .LVU501
1614:Middlewares/FreeRTOS/tasks.c ****                 {
 1797              		.loc 1 1614 23 is_stmt 0 view .LVU502
 1798 0058 A369     		ldr	r3, [r4, #24]
 1799              	.LVL134:
1614:Middlewares/FreeRTOS/tasks.c ****                 {
 1800              		.loc 1 1614 19 view .LVU503
 1801 005a 002B     		cmp	r3, #0
 1802 005c 02DB     		blt	.L125
1616:Middlewares/FreeRTOS/tasks.c ****                 }
 1803              		.loc 1 1616 21 is_stmt 1 view .LVU504
 1804 005e C5F10705 		rsb	r5, r5, #7
 1805              	.LVL135:
1616:Middlewares/FreeRTOS/tasks.c ****                 }
 1806              		.loc 1 1616 21 is_stmt 0 view .LVU505
 1807 0062 A561     		str	r5, [r4, #24]
 1808              	.L125:
1620:Middlewares/FreeRTOS/tasks.c ****                 }
 1809              		.loc 1 1620 45 is_stmt 1 view .LVU506
1627:Middlewares/FreeRTOS/tasks.c ****                 {
 1810              		.loc 1 1627 17 view .LVU507
1627:Middlewares/FreeRTOS/tasks.c ****                 {
 1811              		.loc 1 1627 21 is_stmt 0 view .LVU508
 1812 0064 6169     		ldr	r1, [r4, #20]
 1813 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1814 006a 234B     		ldr	r3, .L135+4
 1815 006c 03EB8203 		add	r3, r3, r2, lsl #2
1627:Middlewares/FreeRTOS/tasks.c ****                 {
 1816              		.loc 1 1627 19 view .LVU509
 1817 0070 9942     		cmp	r1, r3
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 139


 1818 0072 15D0     		beq	.L134
 1819              	.LVL136:
 1820              	.L126:
1648:Middlewares/FreeRTOS/tasks.c ****                 }
 1821              		.loc 1 1648 45 is_stmt 1 view .LVU510
1651:Middlewares/FreeRTOS/tasks.c ****                 {
 1822              		.loc 1 1651 17 view .LVU511
1651:Middlewares/FreeRTOS/tasks.c ****                 {
 1823              		.loc 1 1651 19 is_stmt 0 view .LVU512
 1824 0074 4FB1     		cbz	r7, .L121
1653:Middlewares/FreeRTOS/tasks.c ****                 }
 1825              		.loc 1 1653 21 is_stmt 1 view .LVU513
 1826 0076 4FF0E023 		mov	r3, #-536813568
 1827 007a 4FF08052 		mov	r2, #268435456
 1828 007e C3F8042D 		str	r2, [r3, #3332]
1653:Middlewares/FreeRTOS/tasks.c ****                 }
 1829              		.loc 1 1653 21 view .LVU514
 1830              		.syntax unified
 1831              	@ 1653 "Middlewares/FreeRTOS/tasks.c" 1
 1832 0082 BFF34F8F 		dsb
 1833              	@ 0 "" 2
1653:Middlewares/FreeRTOS/tasks.c ****                 }
 1834              		.loc 1 1653 21 view .LVU515
 1835              	@ 1653 "Middlewares/FreeRTOS/tasks.c" 1
 1836 0086 BFF36F8F 		isb
 1837              	@ 0 "" 2
1653:Middlewares/FreeRTOS/tasks.c ****                 }
 1838              		.loc 1 1653 52 view .LVU516
 1839              	.LVL137:
 1840              		.thumb
 1841              		.syntax unified
 1842              	.L121:
1657:Middlewares/FreeRTOS/tasks.c ****                 }
 1843              		.loc 1 1657 45 view .LVU517
1662:Middlewares/FreeRTOS/tasks.c ****             }
 1844              		.loc 1 1662 17 view .LVU518
1665:Middlewares/FreeRTOS/tasks.c ****     }
 1845              		.loc 1 1665 9 view .LVU519
 1846 008a FFF7FEFF 		bl	vPortExitCritical
 1847              	.LVL138:
1666:Middlewares/FreeRTOS/tasks.c **** 
 1848              		.loc 1 1666 5 is_stmt 0 view .LVU520
 1849 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1850              	.LVL139:
 1851              	.L128:
1512:Middlewares/FreeRTOS/tasks.c **** 
 1852              		.loc 1 1512 20 view .LVU521
 1853 0090 0027     		movs	r7, #0
 1854 0092 DDE7     		b	.L123
 1855              	.L129:
1557:Middlewares/FreeRTOS/tasks.c ****                         }
 1856              		.loc 1 1557 44 view .LVU522
 1857 0094 0127     		movs	r7, #1
 1858 0096 DBE7     		b	.L123
 1859              	.L130:
1576:Middlewares/FreeRTOS/tasks.c ****                 }
 1860              		.loc 1 1576 36 view .LVU523
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 140


 1861 0098 0127     		movs	r7, #1
 1862 009a D9E7     		b	.L123
 1863              	.LVL140:
 1864              	.L133:
1596:Middlewares/FreeRTOS/tasks.c ****                     }
 1865              		.loc 1 1596 25 is_stmt 1 view .LVU524
1596:Middlewares/FreeRTOS/tasks.c ****                     }
 1866              		.loc 1 1596 43 is_stmt 0 view .LVU525
 1867 009c E562     		str	r5, [r4, #44]
 1868 009e DAE7     		b	.L124
 1869              	.LVL141:
 1870              	.L134:
1632:Middlewares/FreeRTOS/tasks.c ****                     {
 1871              		.loc 1 1632 21 is_stmt 1 view .LVU526
1632:Middlewares/FreeRTOS/tasks.c ****                     {
 1872              		.loc 1 1632 25 is_stmt 0 view .LVU527
 1873 00a0 251D     		adds	r5, r4, #4
 1874 00a2 2846     		mov	r0, r5
 1875 00a4 FFF7FEFF 		bl	uxListRemove
 1876              	.LVL142:
1632:Middlewares/FreeRTOS/tasks.c ****                     {
 1877              		.loc 1 1632 23 view .LVU528
 1878 00a8 30B9     		cbnz	r0, .L127
1637:Middlewares/FreeRTOS/tasks.c ****                     }
 1879              		.loc 1 1637 25 is_stmt 1 view .LVU529
 1880 00aa 0122     		movs	r2, #1
 1881 00ac B240     		lsls	r2, r2, r6
 1882 00ae 1349     		ldr	r1, .L135+8
 1883 00b0 0B68     		ldr	r3, [r1]
 1884 00b2 23EA0203 		bic	r3, r3, r2
 1885 00b6 0B60     		str	r3, [r1]
 1886              	.L127:
1641:Middlewares/FreeRTOS/tasks.c ****                     }
 1887              		.loc 1 1641 49 view .LVU530
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1888              		.loc 1 1644 21 view .LVU531
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1889              		.loc 1 1644 21 view .LVU532
 1890 00b8 E36A     		ldr	r3, [r4, #44]
 1891 00ba 0122     		movs	r2, #1
 1892 00bc 9A40     		lsls	r2, r2, r3
 1893 00be 0F49     		ldr	r1, .L135+8
 1894 00c0 0868     		ldr	r0, [r1]
 1895 00c2 0243     		orrs	r2, r2, r0
 1896 00c4 0A60     		str	r2, [r1]
 1897              	.LBB187:
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1898              		.loc 1 1644 21 view .LVU533
 1899 00c6 0C4A     		ldr	r2, .L135+4
 1900 00c8 03EB8303 		add	r3, r3, r3, lsl #2
 1901 00cc 02EB8303 		add	r3, r2, r3, lsl #2
 1902 00d0 5B68     		ldr	r3, [r3, #4]
 1903              	.LVL143:
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1904              		.loc 1 1644 21 view .LVU534
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1905              		.loc 1 1644 21 view .LVU535
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 141


1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1906              		.loc 1 1644 21 view .LVU536
 1907 00d2 A360     		str	r3, [r4, #8]
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1908              		.loc 1 1644 21 view .LVU537
 1909 00d4 9968     		ldr	r1, [r3, #8]
 1910 00d6 E160     		str	r1, [r4, #12]
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1911              		.loc 1 1644 21 view .LVU538
 1912 00d8 4D60     		str	r5, [r1, #4]
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1913              		.loc 1 1644 21 view .LVU539
 1914 00da 9D60     		str	r5, [r3, #8]
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1915              		.loc 1 1644 21 view .LVU540
 1916 00dc E36A     		ldr	r3, [r4, #44]
 1917              	.LVL144:
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1918              		.loc 1 1644 21 is_stmt 0 view .LVU541
 1919 00de 03EB8301 		add	r1, r3, r3, lsl #2
 1920 00e2 8800     		lsls	r0, r1, #2
 1921 00e4 02EB8101 		add	r1, r2, r1, lsl #2
 1922 00e8 6161     		str	r1, [r4, #20]
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1923              		.loc 1 1644 21 is_stmt 1 view .LVU542
 1924 00ea 1158     		ldr	r1, [r2, r0]
 1925 00ec 0131     		adds	r1, r1, #1
 1926 00ee 1150     		str	r1, [r2, r0]
 1927              	.LBE187:
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1928              		.loc 1 1644 21 view .LVU543
1644:Middlewares/FreeRTOS/tasks.c ****                 }
 1929              		.loc 1 1644 51 view .LVU544
 1930 00f0 C0E7     		b	.L126
 1931              	.L136:
 1932 00f2 00BF     		.align	2
 1933              	.L135:
 1934 00f4 00000000 		.word	pxCurrentTCB
 1935 00f8 00000000 		.word	pxReadyTasksLists
 1936 00fc 00000000 		.word	uxTopReadyPriority
 1937              		.cfi_endproc
 1938              	.LFE14:
 1940              		.section	.text.vTaskResume,"ax",%progbits
 1941              		.align	1
 1942              		.global	vTaskResume
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1947              	vTaskResume:
 1948              	.LVL145:
 1949              	.LFB17:
1826:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1950              		.loc 1 1826 5 view -0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
1826:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 142


 1954              		.loc 1 1826 5 is_stmt 0 view .LVU546
 1955 0000 38B5     		push	{r3, r4, r5, lr}
 1956              	.LCFI18:
 1957              		.cfi_def_cfa_offset 16
 1958              		.cfi_offset 3, -16
 1959              		.cfi_offset 4, -12
 1960              		.cfi_offset 5, -8
 1961              		.cfi_offset 14, -4
1827:Middlewares/FreeRTOS/tasks.c **** 
 1962              		.loc 1 1827 9 is_stmt 1 view .LVU547
 1963              	.LVL146:
1830:Middlewares/FreeRTOS/tasks.c **** 
 1964              		.loc 1 1830 9 view .LVU548
 1965 0002 68B1     		cbz	r0, .L143
 1966 0004 0446     		mov	r4, r0
1830:Middlewares/FreeRTOS/tasks.c **** 
 1967              		.loc 1 1830 38 discriminator 2 view .LVU549
1834:Middlewares/FreeRTOS/tasks.c ****         {
 1968              		.loc 1 1834 9 discriminator 2 view .LVU550
1834:Middlewares/FreeRTOS/tasks.c ****         {
 1969              		.loc 1 1834 21 is_stmt 0 discriminator 2 view .LVU551
 1970 0006 234B     		ldr	r3, .L145
 1971 0008 1B68     		ldr	r3, [r3]
1834:Middlewares/FreeRTOS/tasks.c ****         {
 1972              		.loc 1 1834 11 discriminator 2 view .LVU552
 1973 000a 8342     		cmp	r3, r0
 1974 000c 07D0     		beq	.L137
1836:Middlewares/FreeRTOS/tasks.c ****             {
 1975              		.loc 1 1836 13 is_stmt 1 view .LVU553
 1976 000e FFF7FEFF 		bl	vPortEnterCritical
 1977              	.LVL147:
1838:Middlewares/FreeRTOS/tasks.c ****                 {
 1978              		.loc 1 1838 17 view .LVU554
1838:Middlewares/FreeRTOS/tasks.c ****                 {
 1979              		.loc 1 1838 21 is_stmt 0 view .LVU555
 1980 0012 2046     		mov	r0, r4
 1981 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1982              	.LVL148:
1838:Middlewares/FreeRTOS/tasks.c ****                 {
 1983              		.loc 1 1838 19 view .LVU556
 1984 0018 58B9     		cbnz	r0, .L144
 1985              	.L141:
1862:Middlewares/FreeRTOS/tasks.c ****                 }
 1986              		.loc 1 1862 45 is_stmt 1 view .LVU557
1865:Middlewares/FreeRTOS/tasks.c ****         }
 1987              		.loc 1 1865 13 view .LVU558
 1988 001a FFF7FEFF 		bl	vPortExitCritical
 1989              	.LVL149:
1869:Middlewares/FreeRTOS/tasks.c ****         }
 1990              		.loc 1 1869 37 view .LVU559
 1991              	.L137:
1871:Middlewares/FreeRTOS/tasks.c **** 
 1992              		.loc 1 1871 5 is_stmt 0 view .LVU560
 1993 001e 38BD     		pop	{r3, r4, r5, pc}
 1994              	.LVL150:
 1995              	.L143:
1830:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 143


 1996              		.loc 1 1830 9 is_stmt 1 view .LVU561
 1997              	.LBB188:
 1998              	.LBI188:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1999              		.loc 2 196 34 view .LVU562
 2000              	.LBB189:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2001              		.loc 2 198 9 view .LVU563
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2002              		.loc 2 200 9 view .LVU564
 2003              		.syntax unified
 2004              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2005 0020 4FF01003 			mov r3, #16												
 2006 0024 83F31188 		msr basepri, r3											
 2007 0028 BFF36F8F 		isb														
 2008 002c BFF34F8F 		dsb														
 2009              	
 2010              	@ 0 "" 2
 2011              	.LVL151:
 2012              		.thumb
 2013              		.syntax unified
 2014              	.L139:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2015              		.loc 2 200 9 is_stmt 0 view .LVU565
 2016              	.LBE189:
 2017              	.LBE188:
1830:Middlewares/FreeRTOS/tasks.c **** 
 2018              		.loc 1 1830 9 is_stmt 1 discriminator 1 view .LVU566
1830:Middlewares/FreeRTOS/tasks.c **** 
 2019              		.loc 1 1830 9 discriminator 1 view .LVU567
 2020 0030 FEE7     		b	.L139
 2021              	.LVL152:
 2022              	.L144:
1840:Middlewares/FreeRTOS/tasks.c **** 
 2023              		.loc 1 1840 46 view .LVU568
1844:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2024              		.loc 1 1844 21 view .LVU569
1844:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2025              		.loc 1 1844 30 is_stmt 0 view .LVU570
 2026 0032 251D     		adds	r5, r4, #4
 2027 0034 2846     		mov	r0, r5
 2028 0036 FFF7FEFF 		bl	uxListRemove
 2029              	.LVL153:
1845:Middlewares/FreeRTOS/tasks.c **** 
 2030              		.loc 1 1845 21 is_stmt 1 view .LVU571
1845:Middlewares/FreeRTOS/tasks.c **** 
 2031              		.loc 1 1845 21 view .LVU572
 2032 003a E36A     		ldr	r3, [r4, #44]
 2033 003c 0122     		movs	r2, #1
 2034 003e 9A40     		lsls	r2, r2, r3
 2035 0040 1549     		ldr	r1, .L145+4
 2036 0042 0868     		ldr	r0, [r1]
 2037 0044 0243     		orrs	r2, r2, r0
 2038 0046 0A60     		str	r2, [r1]
 2039              	.LBB190:
1845:Middlewares/FreeRTOS/tasks.c **** 
 2040              		.loc 1 1845 21 view .LVU573
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 144


 2041 0048 144A     		ldr	r2, .L145+8
 2042 004a 03EB8303 		add	r3, r3, r3, lsl #2
 2043 004e 02EB8303 		add	r3, r2, r3, lsl #2
 2044 0052 5B68     		ldr	r3, [r3, #4]
 2045              	.LVL154:
1845:Middlewares/FreeRTOS/tasks.c **** 
 2046              		.loc 1 1845 21 view .LVU574
1845:Middlewares/FreeRTOS/tasks.c **** 
 2047              		.loc 1 1845 21 view .LVU575
1845:Middlewares/FreeRTOS/tasks.c **** 
 2048              		.loc 1 1845 21 view .LVU576
 2049 0054 A360     		str	r3, [r4, #8]
1845:Middlewares/FreeRTOS/tasks.c **** 
 2050              		.loc 1 1845 21 view .LVU577
 2051 0056 9968     		ldr	r1, [r3, #8]
 2052 0058 E160     		str	r1, [r4, #12]
1845:Middlewares/FreeRTOS/tasks.c **** 
 2053              		.loc 1 1845 21 view .LVU578
 2054 005a 4D60     		str	r5, [r1, #4]
1845:Middlewares/FreeRTOS/tasks.c **** 
 2055              		.loc 1 1845 21 view .LVU579
 2056 005c 9D60     		str	r5, [r3, #8]
1845:Middlewares/FreeRTOS/tasks.c **** 
 2057              		.loc 1 1845 21 view .LVU580
 2058 005e E36A     		ldr	r3, [r4, #44]
 2059              	.LVL155:
1845:Middlewares/FreeRTOS/tasks.c **** 
 2060              		.loc 1 1845 21 is_stmt 0 view .LVU581
 2061 0060 03EB8301 		add	r1, r3, r3, lsl #2
 2062 0064 8800     		lsls	r0, r1, #2
 2063 0066 02EB8101 		add	r1, r2, r1, lsl #2
 2064 006a 6161     		str	r1, [r4, #20]
1845:Middlewares/FreeRTOS/tasks.c **** 
 2065              		.loc 1 1845 21 is_stmt 1 view .LVU582
 2066 006c 1158     		ldr	r1, [r2, r0]
 2067 006e 0131     		adds	r1, r1, #1
 2068 0070 1150     		str	r1, [r2, r0]
 2069              	.LBE190:
1845:Middlewares/FreeRTOS/tasks.c **** 
 2070              		.loc 1 1845 21 view .LVU583
1845:Middlewares/FreeRTOS/tasks.c **** 
 2071              		.loc 1 1845 51 view .LVU584
1848:Middlewares/FreeRTOS/tasks.c ****                     {
 2072              		.loc 1 1848 21 view .LVU585
1848:Middlewares/FreeRTOS/tasks.c ****                     {
 2073              		.loc 1 1848 30 is_stmt 0 view .LVU586
 2074 0072 E26A     		ldr	r2, [r4, #44]
1848:Middlewares/FreeRTOS/tasks.c ****                     {
 2075              		.loc 1 1848 58 view .LVU587
 2076 0074 074B     		ldr	r3, .L145
 2077 0076 1B68     		ldr	r3, [r3]
 2078 0078 DB6A     		ldr	r3, [r3, #44]
1848:Middlewares/FreeRTOS/tasks.c ****                     {
 2079              		.loc 1 1848 23 view .LVU588
 2080 007a 9A42     		cmp	r2, r3
 2081 007c CDD3     		bcc	.L141
1853:Middlewares/FreeRTOS/tasks.c ****                     }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 145


 2082              		.loc 1 1853 25 is_stmt 1 view .LVU589
 2083 007e 4FF0E023 		mov	r3, #-536813568
 2084 0082 4FF08052 		mov	r2, #268435456
 2085 0086 C3F8042D 		str	r2, [r3, #3332]
1853:Middlewares/FreeRTOS/tasks.c ****                     }
 2086              		.loc 1 1853 25 view .LVU590
 2087              		.syntax unified
 2088              	@ 1853 "Middlewares/FreeRTOS/tasks.c" 1
 2089 008a BFF34F8F 		dsb
 2090              	@ 0 "" 2
1853:Middlewares/FreeRTOS/tasks.c ****                     }
 2091              		.loc 1 1853 25 view .LVU591
 2092              	@ 1853 "Middlewares/FreeRTOS/tasks.c" 1
 2093 008e BFF36F8F 		isb
 2094              	@ 0 "" 2
1853:Middlewares/FreeRTOS/tasks.c ****                     }
 2095              		.loc 1 1853 56 view .LVU592
 2096              		.thumb
 2097              		.syntax unified
 2098 0092 C2E7     		b	.L141
 2099              	.L146:
 2100              		.align	2
 2101              	.L145:
 2102 0094 00000000 		.word	pxCurrentTCB
 2103 0098 00000000 		.word	uxTopReadyPriority
 2104 009c 00000000 		.word	pxReadyTasksLists
 2105              		.cfi_endproc
 2106              	.LFE17:
 2108              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2109              		.align	1
 2110              		.global	xTaskResumeFromISR
 2111              		.syntax unified
 2112              		.thumb
 2113              		.thumb_func
 2115              	xTaskResumeFromISR:
 2116              	.LVL156:
 2117              	.LFB18:
1880:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 2118              		.loc 1 1880 5 view -0
 2119              		.cfi_startproc
 2120              		@ args = 0, pretend = 0, frame = 0
 2121              		@ frame_needed = 0, uses_anonymous_args = 0
1880:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 2122              		.loc 1 1880 5 is_stmt 0 view .LVU594
 2123 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2124              	.LCFI19:
 2125              		.cfi_def_cfa_offset 24
 2126              		.cfi_offset 3, -24
 2127              		.cfi_offset 4, -20
 2128              		.cfi_offset 5, -16
 2129              		.cfi_offset 6, -12
 2130              		.cfi_offset 7, -8
 2131              		.cfi_offset 14, -4
1881:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 2132              		.loc 1 1881 9 is_stmt 1 view .LVU595
 2133              	.LVL157:
1882:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 146


 2134              		.loc 1 1882 9 view .LVU596
1883:Middlewares/FreeRTOS/tasks.c **** 
 2135              		.loc 1 1883 9 view .LVU597
1885:Middlewares/FreeRTOS/tasks.c **** 
 2136              		.loc 1 1885 9 view .LVU598
 2137 0002 0028     		cmp	r0, #0
 2138 0004 43D0     		beq	.L155
 2139 0006 0446     		mov	r4, r0
1885:Middlewares/FreeRTOS/tasks.c **** 
 2140              		.loc 1 1885 38 discriminator 2 view .LVU599
1903:Middlewares/FreeRTOS/tasks.c **** 
 2141              		.loc 1 1903 9 discriminator 2 view .LVU600
 2142 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2143              	.LVL158:
1905:Middlewares/FreeRTOS/tasks.c ****         {
 2144              		.loc 1 1905 9 discriminator 2 view .LVU601
 2145              	.LBB191:
 2146              	.LBI191:
 212:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2147              		.loc 2 212 38 discriminator 2 view .LVU602
 2148              	.LBB192:
 214:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2149              		.loc 2 214 9 discriminator 2 view .LVU603
 216:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2150              		.loc 2 216 9 discriminator 2 view .LVU604
 2151              		.syntax unified
 2152              	@ 216 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2153 000c EFF31185 			mrs r5, basepri											
 2154 0010 4FF01003 		mov r3, #16												
 2155 0014 83F31188 		msr basepri, r3											
 2156 0018 BFF36F8F 		isb														
 2157 001c BFF34F8F 		dsb														
 2158              	
 2159              	@ 0 "" 2
 2160              	.LVL159:
 228:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 2161              		.loc 2 228 9 discriminator 2 view .LVU605
 228:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 2162              		.loc 2 228 9 is_stmt 0 discriminator 2 view .LVU606
 2163              		.thumb
 2164              		.syntax unified
 2165              	.LBE192:
 2166              	.LBE191:
1907:Middlewares/FreeRTOS/tasks.c ****             {
 2167              		.loc 1 1907 13 is_stmt 1 discriminator 2 view .LVU607
1907:Middlewares/FreeRTOS/tasks.c ****             {
 2168              		.loc 1 1907 17 is_stmt 0 discriminator 2 view .LVU608
 2169 0020 2046     		mov	r0, r4
 2170 0022 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2171              	.LVL160:
1907:Middlewares/FreeRTOS/tasks.c ****             {
 2172              		.loc 1 1907 15 discriminator 2 view .LVU609
 2173 0026 0646     		mov	r6, r0
 2174 0028 0028     		cmp	r0, #0
 2175 002a 2CD0     		beq	.L150
1909:Middlewares/FreeRTOS/tasks.c **** 
 2176              		.loc 1 1909 51 is_stmt 1 view .LVU610
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 147


1912:Middlewares/FreeRTOS/tasks.c ****                 {
 2177              		.loc 1 1912 17 view .LVU611
1912:Middlewares/FreeRTOS/tasks.c ****                 {
 2178              		.loc 1 1912 42 is_stmt 0 view .LVU612
 2179 002c 214B     		ldr	r3, .L156
 2180 002e 1B68     		ldr	r3, [r3]
1912:Middlewares/FreeRTOS/tasks.c ****                 {
 2181              		.loc 1 1912 19 view .LVU613
 2182 0030 002B     		cmp	r3, #0
 2183 0032 37D1     		bne	.L151
1916:Middlewares/FreeRTOS/tasks.c ****                     {
 2184              		.loc 1 1916 21 is_stmt 1 view .LVU614
1916:Middlewares/FreeRTOS/tasks.c ****                     {
 2185              		.loc 1 1916 30 is_stmt 0 view .LVU615
 2186 0034 E26A     		ldr	r2, [r4, #44]
1916:Middlewares/FreeRTOS/tasks.c ****                     {
 2187              		.loc 1 1916 58 view .LVU616
 2188 0036 204B     		ldr	r3, .L156+4
 2189 0038 1B68     		ldr	r3, [r3]
 2190 003a DB6A     		ldr	r3, [r3, #44]
1916:Middlewares/FreeRTOS/tasks.c ****                     {
 2191              		.loc 1 1916 23 view .LVU617
 2192 003c 9A42     		cmp	r2, r3
 2193 003e 2FD3     		bcc	.L153
1918:Middlewares/FreeRTOS/tasks.c **** 
 2194              		.loc 1 1918 25 is_stmt 1 view .LVU618
 2195              	.LVL161:
1923:Middlewares/FreeRTOS/tasks.c ****                     }
 2196              		.loc 1 1923 25 view .LVU619
1923:Middlewares/FreeRTOS/tasks.c ****                     }
 2197              		.loc 1 1923 39 is_stmt 0 view .LVU620
 2198 0040 0126     		movs	r6, #1
 2199 0042 1E4B     		ldr	r3, .L156+8
 2200 0044 1E60     		str	r6, [r3]
 2201              	.LVL162:
 2202              	.L152:
1927:Middlewares/FreeRTOS/tasks.c ****                     }
 2203              		.loc 1 1927 49 is_stmt 1 view .LVU621
1930:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2204              		.loc 1 1930 21 view .LVU622
1930:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2205              		.loc 1 1930 30 is_stmt 0 view .LVU623
 2206 0046 271D     		adds	r7, r4, #4
 2207 0048 3846     		mov	r0, r7
 2208 004a FFF7FEFF 		bl	uxListRemove
 2209              	.LVL163:
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2210              		.loc 1 1931 21 is_stmt 1 view .LVU624
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2211              		.loc 1 1931 21 view .LVU625
 2212 004e E36A     		ldr	r3, [r4, #44]
 2213 0050 0122     		movs	r2, #1
 2214 0052 9A40     		lsls	r2, r2, r3
 2215 0054 1A49     		ldr	r1, .L156+12
 2216 0056 0868     		ldr	r0, [r1]
 2217 0058 0243     		orrs	r2, r2, r0
 2218 005a 0A60     		str	r2, [r1]
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 148


 2219              	.LBB193:
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2220              		.loc 1 1931 21 view .LVU626
 2221 005c 194A     		ldr	r2, .L156+16
 2222 005e 03EB8303 		add	r3, r3, r3, lsl #2
 2223 0062 02EB8303 		add	r3, r2, r3, lsl #2
 2224 0066 5B68     		ldr	r3, [r3, #4]
 2225              	.LVL164:
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2226              		.loc 1 1931 21 view .LVU627
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2227              		.loc 1 1931 21 view .LVU628
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2228              		.loc 1 1931 21 view .LVU629
 2229 0068 A360     		str	r3, [r4, #8]
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2230              		.loc 1 1931 21 view .LVU630
 2231 006a 9968     		ldr	r1, [r3, #8]
 2232 006c E160     		str	r1, [r4, #12]
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2233              		.loc 1 1931 21 view .LVU631
 2234 006e 4F60     		str	r7, [r1, #4]
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2235              		.loc 1 1931 21 view .LVU632
 2236 0070 9F60     		str	r7, [r3, #8]
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2237              		.loc 1 1931 21 view .LVU633
 2238 0072 E36A     		ldr	r3, [r4, #44]
 2239              	.LVL165:
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2240              		.loc 1 1931 21 is_stmt 0 view .LVU634
 2241 0074 03EB8301 		add	r1, r3, r3, lsl #2
 2242 0078 8800     		lsls	r0, r1, #2
 2243 007a 02EB8101 		add	r1, r2, r1, lsl #2
 2244 007e 6161     		str	r1, [r4, #20]
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2245              		.loc 1 1931 21 is_stmt 1 view .LVU635
 2246 0080 1158     		ldr	r1, [r2, r0]
 2247 0082 0131     		adds	r1, r1, #1
 2248 0084 1150     		str	r1, [r2, r0]
 2249              	.LBE193:
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2250              		.loc 1 1931 21 view .LVU636
1931:Middlewares/FreeRTOS/tasks.c ****                 }
 2251              		.loc 1 1931 51 view .LVU637
 2252              	.LVL166:
 2253              	.L150:
1943:Middlewares/FreeRTOS/tasks.c ****             }
 2254              		.loc 1 1943 41 view .LVU638
1946:Middlewares/FreeRTOS/tasks.c **** 
 2255              		.loc 1 1946 9 view .LVU639
 2256              	.LBB194:
 2257              	.LBI194:
 232:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2258              		.loc 2 232 34 view .LVU640
 2259              	.LBB195:
 2260              		.loc 2 234 9 view .LVU641
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 149


 2261              		.syntax unified
 2262              	@ 234 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2263 0086 85F31188 			msr basepri, r5	
 2264              	@ 0 "" 2
 2265              		.thumb
 2266              		.syntax unified
 2267              	.LBE195:
 2268              	.LBE194:
1948:Middlewares/FreeRTOS/tasks.c ****     }
 2269              		.loc 1 1948 9 view .LVU642
1949:Middlewares/FreeRTOS/tasks.c **** 
 2270              		.loc 1 1949 5 is_stmt 0 view .LVU643
 2271 008a 3046     		mov	r0, r6
 2272 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2273              	.LVL167:
 2274              	.L155:
1885:Middlewares/FreeRTOS/tasks.c **** 
 2275              		.loc 1 1885 9 is_stmt 1 view .LVU644
 2276              	.LBB196:
 2277              	.LBI196:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2278              		.loc 2 196 34 view .LVU645
 2279              	.LBB197:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2280              		.loc 2 198 9 view .LVU646
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2281              		.loc 2 200 9 view .LVU647
 2282              		.syntax unified
 2283              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2284 008e 4FF01003 			mov r3, #16												
 2285 0092 83F31188 		msr basepri, r3											
 2286 0096 BFF36F8F 		isb														
 2287 009a BFF34F8F 		dsb														
 2288              	
 2289              	@ 0 "" 2
 2290              	.LVL168:
 2291              		.thumb
 2292              		.syntax unified
 2293              	.L149:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2294              		.loc 2 200 9 is_stmt 0 view .LVU648
 2295              	.LBE197:
 2296              	.LBE196:
1885:Middlewares/FreeRTOS/tasks.c **** 
 2297              		.loc 1 1885 9 is_stmt 1 discriminator 1 view .LVU649
1885:Middlewares/FreeRTOS/tasks.c **** 
 2298              		.loc 1 1885 9 discriminator 1 view .LVU650
 2299 009e FEE7     		b	.L149
 2300              	.LVL169:
 2301              	.L153:
1881:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 2302              		.loc 1 1881 20 is_stmt 0 view .LVU651
 2303 00a0 0026     		movs	r6, #0
 2304 00a2 D0E7     		b	.L152
 2305              	.L151:
1938:Middlewares/FreeRTOS/tasks.c ****                 }
 2306              		.loc 1 1938 21 is_stmt 1 view .LVU652
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 150


 2307 00a4 04F11801 		add	r1, r4, #24
 2308 00a8 0748     		ldr	r0, .L156+20
 2309 00aa FFF7FEFF 		bl	vListInsertEnd
 2310              	.LVL170:
1881:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 2311              		.loc 1 1881 20 is_stmt 0 view .LVU653
 2312 00ae 0026     		movs	r6, #0
 2313 00b0 E9E7     		b	.L150
 2314              	.L157:
 2315 00b2 00BF     		.align	2
 2316              	.L156:
 2317 00b4 00000000 		.word	uxSchedulerSuspended
 2318 00b8 00000000 		.word	pxCurrentTCB
 2319 00bc 00000000 		.word	xYieldPending
 2320 00c0 00000000 		.word	uxTopReadyPriority
 2321 00c4 00000000 		.word	pxReadyTasksLists
 2322 00c8 00000000 		.word	xPendingReadyList
 2323              		.cfi_endproc
 2324              	.LFE18:
 2326              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2327              		.align	2
 2328              	.LC0:
 2329 0000 49444C45 		.ascii	"IDLE\000"
 2329      00
 2330              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2331              		.align	1
 2332              		.global	vTaskStartScheduler
 2333              		.syntax unified
 2334              		.thumb
 2335              		.thumb_func
 2337              	vTaskStartScheduler:
 2338              	.LFB19:
1955:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 2339              		.loc 1 1955 1 is_stmt 1 view -0
 2340              		.cfi_startproc
 2341              		@ args = 0, pretend = 0, frame = 16
 2342              		@ frame_needed = 0, uses_anonymous_args = 0
 2343 0000 10B5     		push	{r4, lr}
 2344              	.LCFI20:
 2345              		.cfi_def_cfa_offset 8
 2346              		.cfi_offset 4, -8
 2347              		.cfi_offset 14, -4
 2348 0002 88B0     		sub	sp, sp, #32
 2349              	.LCFI21:
 2350              		.cfi_def_cfa_offset 40
1956:Middlewares/FreeRTOS/tasks.c **** 
 2351              		.loc 1 1956 5 view .LVU655
 2352              	.LBB198:
1961:Middlewares/FreeRTOS/tasks.c ****         StackType_t * pxIdleTaskStackBuffer = NULL;
 2353              		.loc 1 1961 9 view .LVU656
1961:Middlewares/FreeRTOS/tasks.c ****         StackType_t * pxIdleTaskStackBuffer = NULL;
 2354              		.loc 1 1961 24 is_stmt 0 view .LVU657
 2355 0004 0024     		movs	r4, #0
 2356 0006 0594     		str	r4, [sp, #20]
1962:Middlewares/FreeRTOS/tasks.c ****         uint32_t ulIdleTaskStackSize;
 2357              		.loc 1 1962 9 is_stmt 1 view .LVU658
1962:Middlewares/FreeRTOS/tasks.c ****         uint32_t ulIdleTaskStackSize;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 151


 2358              		.loc 1 1962 23 is_stmt 0 view .LVU659
 2359 0008 0694     		str	r4, [sp, #24]
1963:Middlewares/FreeRTOS/tasks.c **** 
 2360              		.loc 1 1963 9 is_stmt 1 view .LVU660
1967:Middlewares/FreeRTOS/tasks.c ****         xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
 2361              		.loc 1 1967 9 view .LVU661
 2362 000a 07AA     		add	r2, sp, #28
 2363 000c 06A9     		add	r1, sp, #24
 2364 000e 05A8     		add	r0, sp, #20
 2365 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2366              	.LVL171:
1968:Middlewares/FreeRTOS/tasks.c ****                                              configIDLE_TASK_NAME,
 2367              		.loc 1 1968 9 view .LVU662
1968:Middlewares/FreeRTOS/tasks.c ****                                              configIDLE_TASK_NAME,
 2368              		.loc 1 1968 27 is_stmt 0 view .LVU663
 2369 0014 059B     		ldr	r3, [sp, #20]
 2370 0016 0293     		str	r3, [sp, #8]
 2371 0018 069B     		ldr	r3, [sp, #24]
 2372 001a 0193     		str	r3, [sp, #4]
 2373 001c 0094     		str	r4, [sp]
 2374 001e 2346     		mov	r3, r4
 2375 0020 079A     		ldr	r2, [sp, #28]
 2376 0022 0F49     		ldr	r1, .L162
 2377 0024 0F48     		ldr	r0, .L162+4
 2378 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2379              	.LVL172:
1968:Middlewares/FreeRTOS/tasks.c ****                                              configIDLE_TASK_NAME,
 2380              		.loc 1 1968 25 view .LVU664
 2381 002a 0F4B     		ldr	r3, .L162+8
 2382 002c 1860     		str	r0, [r3]
1976:Middlewares/FreeRTOS/tasks.c ****         {
 2383              		.loc 1 1976 9 is_stmt 1 view .LVU665
1976:Middlewares/FreeRTOS/tasks.c ****         {
 2384              		.loc 1 1976 11 is_stmt 0 view .LVU666
 2385 002e 90B1     		cbz	r0, .L160
 2386              	.LVL173:
1976:Middlewares/FreeRTOS/tasks.c ****         {
 2387              		.loc 1 1976 11 view .LVU667
 2388              	.LBE198:
2010:Middlewares/FreeRTOS/tasks.c ****     {
 2389              		.loc 1 2010 5 is_stmt 1 view .LVU668
2026:Middlewares/FreeRTOS/tasks.c **** 
 2390              		.loc 1 2026 9 view .LVU669
 2391              	.LBB199:
 2392              	.LBI199:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2393              		.loc 2 196 34 view .LVU670
 2394              	.LBB200:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2395              		.loc 2 198 9 view .LVU671
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2396              		.loc 2 200 9 view .LVU672
 2397              		.syntax unified
 2398              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2399 0030 4FF01003 			mov r3, #16												
 2400 0034 83F31188 		msr basepri, r3											
 2401 0038 BFF36F8F 		isb														
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 152


 2402 003c BFF34F8F 		dsb														
 2403              	
 2404              	@ 0 "" 2
 2405              		.thumb
 2406              		.syntax unified
 2407              	.LBE200:
 2408              	.LBE199:
2036:Middlewares/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
 2409              		.loc 1 2036 9 view .LVU673
2036:Middlewares/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
 2410              		.loc 1 2036 30 is_stmt 0 view .LVU674
 2411 0040 0A4B     		ldr	r3, .L162+12
 2412 0042 4FF0FF32 		mov	r2, #-1
 2413 0046 1A60     		str	r2, [r3]
2037:Middlewares/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2414              		.loc 1 2037 9 is_stmt 1 view .LVU675
2037:Middlewares/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2415              		.loc 1 2037 27 is_stmt 0 view .LVU676
 2416 0048 094B     		ldr	r3, .L162+16
 2417 004a 0122     		movs	r2, #1
 2418 004c 1A60     		str	r2, [r3]
2038:Middlewares/FreeRTOS/tasks.c **** 
 2419              		.loc 1 2038 9 is_stmt 1 view .LVU677
2038:Middlewares/FreeRTOS/tasks.c **** 
 2420              		.loc 1 2038 20 is_stmt 0 view .LVU678
 2421 004e 094B     		ldr	r3, .L162+20
 2422 0050 1C60     		str	r4, [r3]
2046:Middlewares/FreeRTOS/tasks.c **** 
 2423              		.loc 1 2046 49 is_stmt 1 view .LVU679
2048:Middlewares/FreeRTOS/tasks.c **** 
 2424              		.loc 1 2048 32 view .LVU680
2052:Middlewares/FreeRTOS/tasks.c **** 
 2425              		.loc 1 2052 9 view .LVU681
 2426 0052 FFF7FEFF 		bl	xPortStartScheduler
 2427              	.LVL174:
 2428              	.L160:
2066:Middlewares/FreeRTOS/tasks.c ****     }
 2429              		.loc 1 2066 73 discriminator 2 view .LVU682
2071:Middlewares/FreeRTOS/tasks.c **** 
 2430              		.loc 1 2071 5 discriminator 2 view .LVU683
2075:Middlewares/FreeRTOS/tasks.c **** }
 2431              		.loc 1 2075 5 discriminator 2 view .LVU684
 2432 0056 084B     		ldr	r3, .L162+24
 2433 0058 1B68     		ldr	r3, [r3]
2076:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2434              		.loc 1 2076 1 is_stmt 0 discriminator 2 view .LVU685
 2435 005a 08B0     		add	sp, sp, #32
 2436              	.LCFI22:
 2437              		.cfi_def_cfa_offset 8
 2438              		@ sp needed
 2439 005c 10BD     		pop	{r4, pc}
 2440              	.L163:
 2441 005e 00BF     		.align	2
 2442              	.L162:
 2443 0060 00000000 		.word	.LC0
 2444 0064 00000000 		.word	prvIdleTask
 2445 0068 00000000 		.word	xIdleTaskHandle
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 153


 2446 006c 00000000 		.word	xNextTaskUnblockTime
 2447 0070 00000000 		.word	xSchedulerRunning
 2448 0074 00000000 		.word	xTickCount
 2449 0078 00000000 		.word	uxTopUsedPriority
 2450              		.cfi_endproc
 2451              	.LFE19:
 2453              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2454              		.align	1
 2455              		.global	vTaskEndScheduler
 2456              		.syntax unified
 2457              		.thumb
 2458              		.thumb_func
 2460              	vTaskEndScheduler:
 2461              	.LFB20:
2080:Middlewares/FreeRTOS/tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
 2462              		.loc 1 2080 1 is_stmt 1 view -0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 0
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466 0000 08B5     		push	{r3, lr}
 2467              	.LCFI23:
 2468              		.cfi_def_cfa_offset 8
 2469              		.cfi_offset 3, -8
 2470              		.cfi_offset 14, -4
2084:Middlewares/FreeRTOS/tasks.c ****     xSchedulerRunning = pdFALSE;
 2471              		.loc 1 2084 5 view .LVU687
 2472              	.LBB201:
 2473              	.LBI201:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2474              		.loc 2 196 34 view .LVU688
 2475              	.LBB202:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2476              		.loc 2 198 9 view .LVU689
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2477              		.loc 2 200 9 view .LVU690
 2478              		.syntax unified
 2479              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2480 0002 4FF01003 			mov r3, #16												
 2481 0006 83F31188 		msr basepri, r3											
 2482 000a BFF36F8F 		isb														
 2483 000e BFF34F8F 		dsb														
 2484              	
 2485              	@ 0 "" 2
 2486              		.thumb
 2487              		.syntax unified
 2488              	.LBE202:
 2489              	.LBE201:
2085:Middlewares/FreeRTOS/tasks.c ****     vPortEndScheduler();
 2490              		.loc 1 2085 5 view .LVU691
2085:Middlewares/FreeRTOS/tasks.c ****     vPortEndScheduler();
 2491              		.loc 1 2085 23 is_stmt 0 view .LVU692
 2492 0012 034B     		ldr	r3, .L166
 2493 0014 0022     		movs	r2, #0
 2494 0016 1A60     		str	r2, [r3]
2086:Middlewares/FreeRTOS/tasks.c **** }
 2495              		.loc 1 2086 5 is_stmt 1 view .LVU693
 2496 0018 FFF7FEFF 		bl	vPortEndScheduler
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 154


 2497              	.LVL175:
2087:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 2498              		.loc 1 2087 1 is_stmt 0 view .LVU694
 2499 001c 08BD     		pop	{r3, pc}
 2500              	.L167:
 2501 001e 00BF     		.align	2
 2502              	.L166:
 2503 0020 00000000 		.word	xSchedulerRunning
 2504              		.cfi_endproc
 2505              	.LFE20:
 2507              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2508              		.align	1
 2509              		.global	vTaskSuspendAll
 2510              		.syntax unified
 2511              		.thumb
 2512              		.thumb_func
 2514              	vTaskSuspendAll:
 2515              	.LFB21:
2091:Middlewares/FreeRTOS/tasks.c ****     /* A critical section is not required as the variable is of type
 2516              		.loc 1 2091 1 is_stmt 1 view -0
 2517              		.cfi_startproc
 2518              		@ args = 0, pretend = 0, frame = 0
 2519              		@ frame_needed = 0, uses_anonymous_args = 0
 2520              		@ link register save eliminated.
2099:Middlewares/FreeRTOS/tasks.c **** 
 2521              		.loc 1 2099 27 view .LVU696
2103:Middlewares/FreeRTOS/tasks.c **** 
 2522              		.loc 1 2103 5 view .LVU697
 2523 0000 024A     		ldr	r2, .L169
 2524 0002 1368     		ldr	r3, [r2]
 2525 0004 0133     		adds	r3, r3, #1
 2526 0006 1360     		str	r3, [r2]
2107:Middlewares/FreeRTOS/tasks.c **** }
 2527              		.loc 1 2107 5 view .LVU698
2108:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 2528              		.loc 1 2108 1 is_stmt 0 view .LVU699
 2529 0008 7047     		bx	lr
 2530              	.L170:
 2531 000a 00BF     		.align	2
 2532              	.L169:
 2533 000c 00000000 		.word	uxSchedulerSuspended
 2534              		.cfi_endproc
 2535              	.LFE21:
 2537              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2538              		.align	1
 2539              		.global	xTaskGetTickCount
 2540              		.syntax unified
 2541              		.thumb
 2542              		.thumb_func
 2544              	xTaskGetTickCount:
 2545              	.LFB23:
2287:Middlewares/FreeRTOS/tasks.c ****     TickType_t xTicks;
 2546              		.loc 1 2287 1 is_stmt 1 view -0
 2547              		.cfi_startproc
 2548              		@ args = 0, pretend = 0, frame = 0
 2549              		@ frame_needed = 0, uses_anonymous_args = 0
 2550              		@ link register save eliminated.
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 155


2288:Middlewares/FreeRTOS/tasks.c **** 
 2551              		.loc 1 2288 5 view .LVU701
2291:Middlewares/FreeRTOS/tasks.c ****     {
 2552              		.loc 1 2291 35 view .LVU702
2293:Middlewares/FreeRTOS/tasks.c ****     }
 2553              		.loc 1 2293 9 view .LVU703
2293:Middlewares/FreeRTOS/tasks.c ****     }
 2554              		.loc 1 2293 16 is_stmt 0 view .LVU704
 2555 0000 014B     		ldr	r3, .L172
 2556 0002 1868     		ldr	r0, [r3]
 2557              	.LVL176:
2295:Middlewares/FreeRTOS/tasks.c **** 
 2558              		.loc 1 2295 34 is_stmt 1 view .LVU705
2297:Middlewares/FreeRTOS/tasks.c **** }
 2559              		.loc 1 2297 5 view .LVU706
2298:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2560              		.loc 1 2298 1 is_stmt 0 view .LVU707
 2561 0004 7047     		bx	lr
 2562              	.L173:
 2563 0006 00BF     		.align	2
 2564              	.L172:
 2565 0008 00000000 		.word	xTickCount
 2566              		.cfi_endproc
 2567              	.LFE23:
 2569              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2570              		.align	1
 2571              		.global	xTaskGetTickCountFromISR
 2572              		.syntax unified
 2573              		.thumb
 2574              		.thumb_func
 2576              	xTaskGetTickCountFromISR:
 2577              	.LFB24:
2302:Middlewares/FreeRTOS/tasks.c ****     TickType_t xReturn;
 2578              		.loc 1 2302 1 is_stmt 1 view -0
 2579              		.cfi_startproc
 2580              		@ args = 0, pretend = 0, frame = 0
 2581              		@ frame_needed = 0, uses_anonymous_args = 0
 2582 0000 08B5     		push	{r3, lr}
 2583              	.LCFI24:
 2584              		.cfi_def_cfa_offset 8
 2585              		.cfi_offset 3, -8
 2586              		.cfi_offset 14, -4
2303:Middlewares/FreeRTOS/tasks.c ****     UBaseType_t uxSavedInterruptStatus;
 2587              		.loc 1 2303 5 view .LVU709
2304:Middlewares/FreeRTOS/tasks.c **** 
 2588              		.loc 1 2304 5 view .LVU710
2320:Middlewares/FreeRTOS/tasks.c **** 
 2589              		.loc 1 2320 5 view .LVU711
 2590 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2591              	.LVL177:
2322:Middlewares/FreeRTOS/tasks.c ****     {
 2592              		.loc 1 2322 5 view .LVU712
2324:Middlewares/FreeRTOS/tasks.c ****     }
 2593              		.loc 1 2324 9 view .LVU713
2324:Middlewares/FreeRTOS/tasks.c ****     }
 2594              		.loc 1 2324 17 is_stmt 0 view .LVU714
 2595 0006 014B     		ldr	r3, .L176
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 156


 2596 0008 1868     		ldr	r0, [r3]
 2597              	.LVL178:
2326:Middlewares/FreeRTOS/tasks.c **** 
 2598              		.loc 1 2326 5 is_stmt 1 view .LVU715
2328:Middlewares/FreeRTOS/tasks.c **** }
 2599              		.loc 1 2328 5 view .LVU716
2329:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2600              		.loc 1 2329 1 is_stmt 0 view .LVU717
 2601 000a 08BD     		pop	{r3, pc}
 2602              	.L177:
 2603              		.align	2
 2604              	.L176:
 2605 000c 00000000 		.word	xTickCount
 2606              		.cfi_endproc
 2607              	.LFE24:
 2609              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2610              		.align	1
 2611              		.global	uxTaskGetNumberOfTasks
 2612              		.syntax unified
 2613              		.thumb
 2614              		.thumb_func
 2616              	uxTaskGetNumberOfTasks:
 2617              	.LFB25:
2333:Middlewares/FreeRTOS/tasks.c ****     /* A critical section is not required because the variables are of type
 2618              		.loc 1 2333 1 is_stmt 1 view -0
 2619              		.cfi_startproc
 2620              		@ args = 0, pretend = 0, frame = 0
 2621              		@ frame_needed = 0, uses_anonymous_args = 0
 2622              		@ link register save eliminated.
2336:Middlewares/FreeRTOS/tasks.c **** }
 2623              		.loc 1 2336 5 view .LVU719
2336:Middlewares/FreeRTOS/tasks.c **** }
 2624              		.loc 1 2336 12 is_stmt 0 view .LVU720
 2625 0000 014B     		ldr	r3, .L179
 2626 0002 1868     		ldr	r0, [r3]
2337:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2627              		.loc 1 2337 1 view .LVU721
 2628 0004 7047     		bx	lr
 2629              	.L180:
 2630 0006 00BF     		.align	2
 2631              	.L179:
 2632 0008 00000000 		.word	uxCurrentNumberOfTasks
 2633              		.cfi_endproc
 2634              	.LFE25:
 2636              		.section	.text.pcTaskGetName,"ax",%progbits
 2637              		.align	1
 2638              		.global	pcTaskGetName
 2639              		.syntax unified
 2640              		.thumb
 2641              		.thumb_func
 2643              	pcTaskGetName:
 2644              	.LVL179:
 2645              	.LFB26:
2341:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
 2646              		.loc 1 2341 1 is_stmt 1 view -0
 2647              		.cfi_startproc
 2648              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 157


 2649              		@ frame_needed = 0, uses_anonymous_args = 0
 2650              		@ link register save eliminated.
2342:Middlewares/FreeRTOS/tasks.c **** 
 2651              		.loc 1 2342 5 view .LVU723
2346:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 2652              		.loc 1 2346 5 view .LVU724
2346:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 2653              		.loc 1 2346 13 is_stmt 0 view .LVU725
 2654 0000 0346     		mov	r3, r0
 2655 0002 10B1     		cbz	r0, .L184
 2656              	.LVL180:
 2657              	.L182:
2347:Middlewares/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2658              		.loc 1 2347 26 is_stmt 1 discriminator 2 view .LVU726
2348:Middlewares/FreeRTOS/tasks.c **** }
 2659              		.loc 1 2348 5 discriminator 2 view .LVU727
2349:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2660              		.loc 1 2349 1 is_stmt 0 discriminator 2 view .LVU728
 2661 0004 03F13400 		add	r0, r3, #52
 2662 0008 7047     		bx	lr
 2663              	.LVL181:
 2664              	.L184:
2346:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 2665              		.loc 1 2346 13 discriminator 1 view .LVU729
 2666 000a 064B     		ldr	r3, .L185
 2667 000c 1B68     		ldr	r3, [r3]
 2668              	.LVL182:
2347:Middlewares/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2669              		.loc 1 2347 5 is_stmt 1 discriminator 1 view .LVU730
 2670 000e 002B     		cmp	r3, #0
 2671 0010 F8D1     		bne	.L182
2347:Middlewares/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2672              		.loc 1 2347 5 view .LVU731
 2673              	.LBB203:
 2674              	.LBI203:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2675              		.loc 2 196 34 view .LVU732
 2676              	.LBB204:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2677              		.loc 2 198 9 view .LVU733
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2678              		.loc 2 200 9 view .LVU734
 2679              		.syntax unified
 2680              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2681 0012 4FF01003 			mov r3, #16												
 2682 0016 83F31188 		msr basepri, r3											
 2683 001a BFF36F8F 		isb														
 2684 001e BFF34F8F 		dsb														
 2685              	
 2686              	@ 0 "" 2
 2687              	.LVL183:
 2688              		.thumb
 2689              		.syntax unified
 2690              	.L183:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2691              		.loc 2 200 9 is_stmt 0 view .LVU735
 2692              	.LBE204:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 158


 2693              	.LBE203:
2347:Middlewares/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2694              		.loc 1 2347 5 is_stmt 1 discriminator 1 view .LVU736
2347:Middlewares/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2695              		.loc 1 2347 5 discriminator 1 view .LVU737
 2696 0022 FEE7     		b	.L183
 2697              	.L186:
 2698              		.align	2
 2699              	.L185:
 2700 0024 00000000 		.word	pxCurrentTCB
 2701              		.cfi_endproc
 2702              	.LFE26:
 2704              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2705              		.align	1
 2706              		.global	xTaskIncrementTick
 2707              		.syntax unified
 2708              		.thumb
 2709              		.thumb_func
 2711              	xTaskIncrementTick:
 2712              	.LFB28:
2721:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
 2713              		.loc 1 2721 1 view -0
 2714              		.cfi_startproc
 2715              		@ args = 0, pretend = 0, frame = 0
 2716              		@ frame_needed = 0, uses_anonymous_args = 0
 2717 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2718              	.LCFI25:
 2719              		.cfi_def_cfa_offset 24
 2720              		.cfi_offset 3, -24
 2721              		.cfi_offset 4, -20
 2722              		.cfi_offset 5, -16
 2723              		.cfi_offset 6, -12
 2724              		.cfi_offset 7, -8
 2725              		.cfi_offset 14, -4
2722:Middlewares/FreeRTOS/tasks.c ****     TickType_t xItemValue;
 2726              		.loc 1 2722 5 view .LVU739
2723:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
 2727              		.loc 1 2723 5 view .LVU740
2724:Middlewares/FreeRTOS/tasks.c **** 
 2728              		.loc 1 2724 5 view .LVU741
 2729              	.LVL184:
2729:Middlewares/FreeRTOS/tasks.c **** 
 2730              		.loc 1 2729 43 view .LVU742
2731:Middlewares/FreeRTOS/tasks.c ****     {
 2731              		.loc 1 2731 5 view .LVU743
2731:Middlewares/FreeRTOS/tasks.c ****     {
 2732              		.loc 1 2731 30 is_stmt 0 view .LVU744
 2733 0002 524B     		ldr	r3, .L211
 2734 0004 1B68     		ldr	r3, [r3]
2731:Middlewares/FreeRTOS/tasks.c ****     {
 2735              		.loc 1 2731 7 view .LVU745
 2736 0006 002B     		cmp	r3, #0
 2737 0008 40F09980 		bne	.L188
 2738              	.LBB205:
2735:Middlewares/FreeRTOS/tasks.c **** 
 2739              		.loc 1 2735 9 is_stmt 1 view .LVU746
2735:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 159


 2740              		.loc 1 2735 55 is_stmt 0 view .LVU747
 2741 000c 504B     		ldr	r3, .L211+4
 2742 000e 1C68     		ldr	r4, [r3]
2735:Middlewares/FreeRTOS/tasks.c **** 
 2743              		.loc 1 2735 26 view .LVU748
 2744 0010 0134     		adds	r4, r4, #1
 2745              	.LVL185:
2739:Middlewares/FreeRTOS/tasks.c **** 
 2746              		.loc 1 2739 9 is_stmt 1 view .LVU749
2739:Middlewares/FreeRTOS/tasks.c **** 
 2747              		.loc 1 2739 20 is_stmt 0 view .LVU750
 2748 0012 1C60     		str	r4, [r3]
2741:Middlewares/FreeRTOS/tasks.c ****         {
 2749              		.loc 1 2741 9 is_stmt 1 view .LVU751
2741:Middlewares/FreeRTOS/tasks.c ****         {
 2750              		.loc 1 2741 11 is_stmt 0 view .LVU752
 2751 0014 C4B9     		cbnz	r4, .L189
 2752              	.LBB206:
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2753              		.loc 1 2743 13 is_stmt 1 view .LVU753
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2754              		.loc 1 2743 13 view .LVU754
 2755 0016 4F4B     		ldr	r3, .L211+8
 2756 0018 1B68     		ldr	r3, [r3]
 2757 001a 1B68     		ldr	r3, [r3]
 2758 001c 43B1     		cbz	r3, .L190
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2759              		.loc 1 2743 13 view .LVU755
 2760              	.LBB207:
 2761              	.LBI207:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2762              		.loc 2 196 34 view .LVU756
 2763              	.LBB208:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2764              		.loc 2 198 9 view .LVU757
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2765              		.loc 2 200 9 view .LVU758
 2766              		.syntax unified
 2767              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2768 001e 4FF01003 			mov r3, #16												
 2769 0022 83F31188 		msr basepri, r3											
 2770 0026 BFF36F8F 		isb														
 2771 002a BFF34F8F 		dsb														
 2772              	
 2773              	@ 0 "" 2
 2774              	.LVL186:
 2775              		.thumb
 2776              		.syntax unified
 2777              	.L191:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2778              		.loc 2 200 9 is_stmt 0 view .LVU759
 2779              	.LBE208:
 2780              	.LBE207:
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2781              		.loc 1 2743 13 is_stmt 1 discriminator 1 view .LVU760
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2782              		.loc 1 2743 13 discriminator 1 view .LVU761
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 160


 2783 002e FEE7     		b	.L191
 2784              	.L190:
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2785              		.loc 1 2743 13 discriminator 2 view .LVU762
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2786              		.loc 1 2743 13 discriminator 2 view .LVU763
 2787 0030 484A     		ldr	r2, .L211+8
 2788 0032 1168     		ldr	r1, [r2]
 2789              	.LVL187:
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2790              		.loc 1 2743 13 discriminator 2 view .LVU764
 2791 0034 484B     		ldr	r3, .L211+12
 2792 0036 1868     		ldr	r0, [r3]
 2793 0038 1060     		str	r0, [r2]
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2794              		.loc 1 2743 13 discriminator 2 view .LVU765
 2795 003a 1960     		str	r1, [r3]
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2796              		.loc 1 2743 13 discriminator 2 view .LVU766
 2797 003c 474A     		ldr	r2, .L211+16
 2798 003e 1368     		ldr	r3, [r2]
 2799 0040 0133     		adds	r3, r3, #1
 2800 0042 1360     		str	r3, [r2]
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2801              		.loc 1 2743 13 discriminator 2 view .LVU767
 2802 0044 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2803              	.LVL188:
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2804              		.loc 1 2743 13 is_stmt 0 discriminator 2 view .LVU768
 2805              	.LBE206:
2743:Middlewares/FreeRTOS/tasks.c ****         }
 2806              		.loc 1 2743 39 is_stmt 1 discriminator 2 view .LVU769
 2807              	.L189:
2747:Middlewares/FreeRTOS/tasks.c ****         }
 2808              		.loc 1 2747 37 view .LVU770
2754:Middlewares/FreeRTOS/tasks.c ****         {
 2809              		.loc 1 2754 9 view .LVU771
2754:Middlewares/FreeRTOS/tasks.c ****         {
 2810              		.loc 1 2754 29 is_stmt 0 view .LVU772
 2811 0048 454B     		ldr	r3, .L211+20
 2812 004a 1B68     		ldr	r3, [r3]
2754:Middlewares/FreeRTOS/tasks.c ****         {
 2813              		.loc 1 2754 11 view .LVU773
 2814 004c A342     		cmp	r3, r4
 2815 004e 11D9     		bls	.L203
 2816              	.LBE205:
2724:Middlewares/FreeRTOS/tasks.c **** 
 2817              		.loc 1 2724 16 view .LVU774
 2818 0050 0020     		movs	r0, #0
 2819              	.LVL189:
 2820              	.L193:
 2821              	.LBB214:
2841:Middlewares/FreeRTOS/tasks.c ****             {
 2822              		.loc 1 2841 13 is_stmt 1 view .LVU775
2841:Middlewares/FreeRTOS/tasks.c ****             {
 2823              		.loc 1 2841 17 is_stmt 0 view .LVU776
 2824 0052 444B     		ldr	r3, .L211+24
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 161


 2825 0054 1B68     		ldr	r3, [r3]
 2826 0056 DB6A     		ldr	r3, [r3, #44]
 2827 0058 03EB8303 		add	r3, r3, r3, lsl #2
 2828 005c 9A00     		lsls	r2, r3, #2
 2829 005e 424B     		ldr	r3, .L211+28
 2830 0060 9B58     		ldr	r3, [r3, r2]
2841:Middlewares/FreeRTOS/tasks.c ****             {
 2831              		.loc 1 2841 15 view .LVU777
 2832 0062 012B     		cmp	r3, #1
 2833 0064 00D9     		bls	.L201
2843:Middlewares/FreeRTOS/tasks.c ****             }
 2834              		.loc 1 2843 33 view .LVU778
 2835 0066 0120     		movs	r0, #1
 2836              	.LVL190:
 2837              	.L201:
2847:Middlewares/FreeRTOS/tasks.c ****             }
 2838              		.loc 1 2847 41 is_stmt 1 view .LVU779
2869:Middlewares/FreeRTOS/tasks.c ****             {
 2839              		.loc 1 2869 13 view .LVU780
2869:Middlewares/FreeRTOS/tasks.c ****             {
 2840              		.loc 1 2869 31 is_stmt 0 view .LVU781
 2841 0068 404B     		ldr	r3, .L211+32
 2842 006a 1B68     		ldr	r3, [r3]
2869:Middlewares/FreeRTOS/tasks.c ****             {
 2843              		.loc 1 2869 15 view .LVU782
 2844 006c 002B     		cmp	r3, #0
 2845 006e 6BD0     		beq	.L187
2871:Middlewares/FreeRTOS/tasks.c ****             }
 2846              		.loc 1 2871 33 view .LVU783
 2847 0070 0120     		movs	r0, #1
 2848              	.LVL191:
2871:Middlewares/FreeRTOS/tasks.c ****             }
 2849              		.loc 1 2871 33 view .LVU784
 2850              	.LBE214:
2893:Middlewares/FreeRTOS/tasks.c **** }
 2851              		.loc 1 2893 5 is_stmt 1 view .LVU785
2893:Middlewares/FreeRTOS/tasks.c **** }
 2852              		.loc 1 2893 12 is_stmt 0 view .LVU786
 2853 0072 69E0     		b	.L187
 2854              	.LVL192:
 2855              	.L203:
2724:Middlewares/FreeRTOS/tasks.c **** 
 2856              		.loc 1 2724 16 view .LVU787
 2857 0074 0020     		movs	r0, #0
 2858 0076 37E0     		b	.L192
 2859              	.LVL193:
 2860              	.L208:
 2861              	.LBB215:
2765:Middlewares/FreeRTOS/tasks.c ****                     break;
 2862              		.loc 1 2765 21 is_stmt 1 view .LVU788
2765:Middlewares/FreeRTOS/tasks.c ****                     break;
 2863              		.loc 1 2765 42 is_stmt 0 view .LVU789
 2864 0078 394B     		ldr	r3, .L211+20
 2865 007a 4FF0FF32 		mov	r2, #-1
 2866 007e 1A60     		str	r2, [r3]
2766:Middlewares/FreeRTOS/tasks.c ****                 }
 2867              		.loc 1 2766 21 is_stmt 1 view .LVU790
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 162


 2868 0080 E7E7     		b	.L193
 2869              	.LVL194:
 2870              	.L209:
2784:Middlewares/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
 2871              		.loc 1 2784 25 view .LVU791
2784:Middlewares/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
 2872              		.loc 1 2784 46 is_stmt 0 view .LVU792
 2873 0082 374B     		ldr	r3, .L211+20
 2874              	.LVL195:
2784:Middlewares/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
 2875              		.loc 1 2784 46 view .LVU793
 2876 0084 1A60     		str	r2, [r3]
2785:Middlewares/FreeRTOS/tasks.c ****                     }
 2877              		.loc 1 2785 25 is_stmt 1 view .LVU794
 2878 0086 E4E7     		b	.L193
 2879              	.LVL196:
 2880              	.L210:
 2881              	.LBB209:
2793:Middlewares/FreeRTOS/tasks.c **** 
 2882              		.loc 1 2793 21 discriminator 1 view .LVU795
 2883 0088 D968     		ldr	r1, [r3, #12]
 2884 008a 5160     		str	r1, [r2, #4]
 2885 008c 42E0     		b	.L196
 2886              	.LVL197:
 2887              	.L198:
2793:Middlewares/FreeRTOS/tasks.c **** 
 2888              		.loc 1 2793 21 is_stmt 0 discriminator 1 view .LVU796
 2889              	.LBE209:
 2890              	.LBB210:
2799:Middlewares/FreeRTOS/tasks.c ****                     }
 2891              		.loc 1 2799 25 is_stmt 1 discriminator 3 view .LVU797
 2892 008e 0021     		movs	r1, #0
 2893 0090 9962     		str	r1, [r3, #40]
2799:Middlewares/FreeRTOS/tasks.c ****                     }
 2894              		.loc 1 2799 25 discriminator 3 view .LVU798
 2895 0092 1168     		ldr	r1, [r2]
 2896 0094 0139     		subs	r1, r1, #1
 2897 0096 1160     		str	r1, [r2]
 2898              	.LBE210:
2799:Middlewares/FreeRTOS/tasks.c ****                     }
 2899              		.loc 1 2799 70 discriminator 3 view .LVU799
 2900              	.LVL198:
 2901              	.L197:
2803:Middlewares/FreeRTOS/tasks.c ****                     }
 2902              		.loc 1 2803 49 view .LVU800
2808:Middlewares/FreeRTOS/tasks.c **** 
 2903              		.loc 1 2808 21 view .LVU801
2808:Middlewares/FreeRTOS/tasks.c **** 
 2904              		.loc 1 2808 21 view .LVU802
 2905 0098 DA6A     		ldr	r2, [r3, #44]
 2906 009a 0121     		movs	r1, #1
 2907 009c 9140     		lsls	r1, r1, r2
 2908 009e 344E     		ldr	r6, .L211+36
 2909 00a0 3768     		ldr	r7, [r6]
 2910 00a2 3943     		orrs	r1, r1, r7
 2911 00a4 3160     		str	r1, [r6]
 2912              	.LBB211:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 163


2808:Middlewares/FreeRTOS/tasks.c **** 
 2913              		.loc 1 2808 21 view .LVU803
 2914 00a6 3049     		ldr	r1, .L211+28
 2915 00a8 02EB8202 		add	r2, r2, r2, lsl #2
 2916 00ac 4FEA820C 		lsl	ip, r2, #2
 2917 00b0 8C44     		add	ip, ip, r1
 2918 00b2 DCF80420 		ldr	r2, [ip, #4]
 2919              	.LVL199:
2808:Middlewares/FreeRTOS/tasks.c **** 
 2920              		.loc 1 2808 21 view .LVU804
2808:Middlewares/FreeRTOS/tasks.c **** 
 2921              		.loc 1 2808 21 view .LVU805
2808:Middlewares/FreeRTOS/tasks.c **** 
 2922              		.loc 1 2808 21 view .LVU806
 2923 00b6 9A60     		str	r2, [r3, #8]
2808:Middlewares/FreeRTOS/tasks.c **** 
 2924              		.loc 1 2808 21 view .LVU807
 2925 00b8 9668     		ldr	r6, [r2, #8]
 2926 00ba DE60     		str	r6, [r3, #12]
2808:Middlewares/FreeRTOS/tasks.c **** 
 2927              		.loc 1 2808 21 view .LVU808
 2928 00bc 7560     		str	r5, [r6, #4]
2808:Middlewares/FreeRTOS/tasks.c **** 
 2929              		.loc 1 2808 21 view .LVU809
 2930 00be 9560     		str	r5, [r2, #8]
2808:Middlewares/FreeRTOS/tasks.c **** 
 2931              		.loc 1 2808 21 view .LVU810
 2932 00c0 DA6A     		ldr	r2, [r3, #44]
 2933              	.LVL200:
2808:Middlewares/FreeRTOS/tasks.c **** 
 2934              		.loc 1 2808 21 is_stmt 0 view .LVU811
 2935 00c2 02EB820C 		add	ip, r2, r2, lsl #2
 2936 00c6 4FEA8C05 		lsl	r5, ip, #2
 2937 00ca 6E18     		adds	r6, r5, r1
 2938 00cc 5E61     		str	r6, [r3, #20]
2808:Middlewares/FreeRTOS/tasks.c **** 
 2939              		.loc 1 2808 21 is_stmt 1 view .LVU812
 2940 00ce 4D59     		ldr	r5, [r1, r5]
 2941 00d0 0135     		adds	r5, r5, #1
 2942 00d2 4FEA8C0C 		lsl	ip, ip, #2
 2943 00d6 41F80C50 		str	r5, [r1, ip]
 2944              	.LBE211:
2808:Middlewares/FreeRTOS/tasks.c **** 
 2945              		.loc 1 2808 21 view .LVU813
2808:Middlewares/FreeRTOS/tasks.c **** 
 2946              		.loc 1 2808 51 view .LVU814
2822:Middlewares/FreeRTOS/tasks.c ****                         {
 2947              		.loc 1 2822 25 view .LVU815
2822:Middlewares/FreeRTOS/tasks.c ****                         {
 2948              		.loc 1 2822 34 is_stmt 0 view .LVU816
 2949 00da DA6A     		ldr	r2, [r3, #44]
2822:Middlewares/FreeRTOS/tasks.c ****                         {
 2950              		.loc 1 2822 61 view .LVU817
 2951 00dc 214B     		ldr	r3, .L211+24
 2952              	.LVL201:
2822:Middlewares/FreeRTOS/tasks.c ****                         {
 2953              		.loc 1 2822 61 view .LVU818
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 164


 2954 00de 1B68     		ldr	r3, [r3]
 2955 00e0 DB6A     		ldr	r3, [r3, #44]
2822:Middlewares/FreeRTOS/tasks.c ****                         {
 2956              		.loc 1 2822 27 view .LVU819
 2957 00e2 9A42     		cmp	r2, r3
 2958 00e4 00D9     		bls	.L192
2824:Middlewares/FreeRTOS/tasks.c ****                         }
 2959              		.loc 1 2824 45 view .LVU820
 2960 00e6 0120     		movs	r0, #1
 2961              	.LVL202:
 2962              	.L192:
2756:Middlewares/FreeRTOS/tasks.c ****             {
 2963              		.loc 1 2756 13 is_stmt 1 view .LVU821
2758:Middlewares/FreeRTOS/tasks.c ****                 {
 2964              		.loc 1 2758 17 view .LVU822
2758:Middlewares/FreeRTOS/tasks.c ****                 {
 2965              		.loc 1 2758 21 is_stmt 0 view .LVU823
 2966 00e8 1A4B     		ldr	r3, .L211+8
 2967 00ea 1B68     		ldr	r3, [r3]
 2968 00ec 1B68     		ldr	r3, [r3]
2758:Middlewares/FreeRTOS/tasks.c ****                 {
 2969              		.loc 1 2758 19 view .LVU824
 2970 00ee 002B     		cmp	r3, #0
 2971 00f0 C2D0     		beq	.L208
2774:Middlewares/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2972              		.loc 1 2774 21 is_stmt 1 view .LVU825
2774:Middlewares/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2973              		.loc 1 2774 29 is_stmt 0 view .LVU826
 2974 00f2 184B     		ldr	r3, .L211+8
 2975 00f4 1B68     		ldr	r3, [r3]
 2976 00f6 DB68     		ldr	r3, [r3, #12]
2774:Middlewares/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2977              		.loc 1 2774 27 view .LVU827
 2978 00f8 DB68     		ldr	r3, [r3, #12]
 2979              	.LVL203:
2775:Middlewares/FreeRTOS/tasks.c **** 
 2980              		.loc 1 2775 21 is_stmt 1 view .LVU828
2775:Middlewares/FreeRTOS/tasks.c **** 
 2981              		.loc 1 2775 32 is_stmt 0 view .LVU829
 2982 00fa 5A68     		ldr	r2, [r3, #4]
 2983              	.LVL204:
2777:Middlewares/FreeRTOS/tasks.c ****                     {
 2984              		.loc 1 2777 21 is_stmt 1 view .LVU830
2777:Middlewares/FreeRTOS/tasks.c ****                     {
 2985              		.loc 1 2777 23 is_stmt 0 view .LVU831
 2986 00fc 9442     		cmp	r4, r2
 2987 00fe C0D3     		bcc	.L209
2789:Middlewares/FreeRTOS/tasks.c ****                     }
 2988              		.loc 1 2789 49 is_stmt 1 view .LVU832
 2989              	.LBB212:
2793:Middlewares/FreeRTOS/tasks.c **** 
 2990              		.loc 1 2793 21 view .LVU833
 2991 0100 5A69     		ldr	r2, [r3, #20]
 2992              	.LVL205:
2793:Middlewares/FreeRTOS/tasks.c **** 
 2993              		.loc 1 2793 21 view .LVU834
 2994 0102 9D68     		ldr	r5, [r3, #8]
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 165


 2995 0104 D968     		ldr	r1, [r3, #12]
 2996 0106 A960     		str	r1, [r5, #8]
 2997              	.LVL206:
2793:Middlewares/FreeRTOS/tasks.c **** 
 2998              		.loc 1 2793 21 view .LVU835
 2999 0108 9D68     		ldr	r5, [r3, #8]
 3000 010a 4D60     		str	r5, [r1, #4]
2793:Middlewares/FreeRTOS/tasks.c **** 
 3001              		.loc 1 2793 21 view .LVU836
 3002 010c 5168     		ldr	r1, [r2, #4]
 3003 010e 1D1D     		adds	r5, r3, #4
 3004 0110 A942     		cmp	r1, r5
 3005 0112 B9D0     		beq	.L210
 3006              	.L196:
2793:Middlewares/FreeRTOS/tasks.c **** 
 3007              		.loc 1 2793 21 discriminator 3 view .LVU837
 3008 0114 0021     		movs	r1, #0
 3009 0116 5961     		str	r1, [r3, #20]
2793:Middlewares/FreeRTOS/tasks.c **** 
 3010              		.loc 1 2793 21 discriminator 3 view .LVU838
 3011 0118 1168     		ldr	r1, [r2]
 3012 011a 0139     		subs	r1, r1, #1
 3013 011c 1160     		str	r1, [r2]
 3014              	.LBE212:
2793:Middlewares/FreeRTOS/tasks.c **** 
 3015              		.loc 1 2793 66 discriminator 3 view .LVU839
2797:Middlewares/FreeRTOS/tasks.c ****                     {
 3016              		.loc 1 2797 21 discriminator 3 view .LVU840
2797:Middlewares/FreeRTOS/tasks.c ****                     {
 3017              		.loc 1 2797 25 is_stmt 0 discriminator 3 view .LVU841
 3018 011e 9A6A     		ldr	r2, [r3, #40]
 3019              	.LVL207:
2797:Middlewares/FreeRTOS/tasks.c ****                     {
 3020              		.loc 1 2797 23 discriminator 3 view .LVU842
 3021 0120 002A     		cmp	r2, #0
 3022 0122 B9D0     		beq	.L197
 3023              	.LBB213:
2799:Middlewares/FreeRTOS/tasks.c ****                     }
 3024              		.loc 1 2799 25 is_stmt 1 view .LVU843
 3025              	.LVL208:
2799:Middlewares/FreeRTOS/tasks.c ****                     }
 3026              		.loc 1 2799 25 view .LVU844
 3027 0124 DE69     		ldr	r6, [r3, #28]
 3028 0126 196A     		ldr	r1, [r3, #32]
 3029 0128 B160     		str	r1, [r6, #8]
2799:Middlewares/FreeRTOS/tasks.c ****                     }
 3030              		.loc 1 2799 25 view .LVU845
 3031 012a DE69     		ldr	r6, [r3, #28]
 3032 012c 4E60     		str	r6, [r1, #4]
2799:Middlewares/FreeRTOS/tasks.c ****                     }
 3033              		.loc 1 2799 25 view .LVU846
 3034 012e 5668     		ldr	r6, [r2, #4]
 3035 0130 03F11801 		add	r1, r3, #24
 3036 0134 8E42     		cmp	r6, r1
 3037 0136 AAD1     		bne	.L198
2799:Middlewares/FreeRTOS/tasks.c ****                     }
 3038              		.loc 1 2799 25 discriminator 1 view .LVU847
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 166


 3039 0138 196A     		ldr	r1, [r3, #32]
 3040 013a 5160     		str	r1, [r2, #4]
 3041 013c A7E7     		b	.L198
 3042              	.LVL209:
 3043              	.L188:
2799:Middlewares/FreeRTOS/tasks.c ****                     }
 3044              		.loc 1 2799 25 is_stmt 0 discriminator 1 view .LVU848
 3045              	.LBE213:
 3046              	.LBE215:
2882:Middlewares/FreeRTOS/tasks.c **** 
 3047              		.loc 1 2882 9 is_stmt 1 view .LVU849
 3048 013e 0D4A     		ldr	r2, .L211+40
 3049 0140 1368     		ldr	r3, [r2]
 3050 0142 0133     		adds	r3, r3, #1
 3051 0144 1360     		str	r3, [r2]
2724:Middlewares/FreeRTOS/tasks.c **** 
 3052              		.loc 1 2724 16 is_stmt 0 view .LVU850
 3053 0146 0020     		movs	r0, #0
 3054              	.LVL210:
 3055              	.L187:
2894:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3056              		.loc 1 2894 1 view .LVU851
 3057 0148 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3058              	.L212:
 3059 014a 00BF     		.align	2
 3060              	.L211:
 3061 014c 00000000 		.word	uxSchedulerSuspended
 3062 0150 00000000 		.word	xTickCount
 3063 0154 00000000 		.word	pxDelayedTaskList
 3064 0158 00000000 		.word	pxOverflowDelayedTaskList
 3065 015c 00000000 		.word	xNumOfOverflows
 3066 0160 00000000 		.word	xNextTaskUnblockTime
 3067 0164 00000000 		.word	pxCurrentTCB
 3068 0168 00000000 		.word	pxReadyTasksLists
 3069 016c 00000000 		.word	xYieldPending
 3070 0170 00000000 		.word	uxTopReadyPriority
 3071 0174 00000000 		.word	xPendedTicks
 3072              		.cfi_endproc
 3073              	.LFE28:
 3075              		.section	.text.xTaskResumeAll,"ax",%progbits
 3076              		.align	1
 3077              		.global	xTaskResumeAll
 3078              		.syntax unified
 3079              		.thumb
 3080              		.thumb_func
 3082              	xTaskResumeAll:
 3083              	.LFB22:
2175:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxTCB = NULL;
 3084              		.loc 1 2175 1 is_stmt 1 view -0
 3085              		.cfi_startproc
 3086              		@ args = 0, pretend = 0, frame = 0
 3087              		@ frame_needed = 0, uses_anonymous_args = 0
 3088 0000 38B5     		push	{r3, r4, r5, lr}
 3089              	.LCFI26:
 3090              		.cfi_def_cfa_offset 16
 3091              		.cfi_offset 3, -16
 3092              		.cfi_offset 4, -12
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 167


 3093              		.cfi_offset 5, -8
 3094              		.cfi_offset 14, -4
2176:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
 3095              		.loc 1 2176 5 view .LVU853
 3096              	.LVL211:
2177:Middlewares/FreeRTOS/tasks.c **** 
 3097              		.loc 1 2177 5 view .LVU854
2181:Middlewares/FreeRTOS/tasks.c **** 
 3098              		.loc 1 2181 5 view .LVU855
 3099 0002 4A4B     		ldr	r3, .L233
 3100 0004 1B68     		ldr	r3, [r3]
 3101 0006 43B9     		cbnz	r3, .L214
2181:Middlewares/FreeRTOS/tasks.c **** 
 3102              		.loc 1 2181 5 view .LVU856
 3103              	.LBB216:
 3104              	.LBI216:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3105              		.loc 2 196 34 view .LVU857
 3106              	.LBB217:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3107              		.loc 2 198 9 view .LVU858
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3108              		.loc 2 200 9 view .LVU859
 3109              		.syntax unified
 3110              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3111 0008 4FF01003 			mov r3, #16												
 3112 000c 83F31188 		msr basepri, r3											
 3113 0010 BFF36F8F 		isb														
 3114 0014 BFF34F8F 		dsb														
 3115              	
 3116              	@ 0 "" 2
 3117              	.LVL212:
 3118              		.thumb
 3119              		.syntax unified
 3120              	.L215:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3121              		.loc 2 200 9 is_stmt 0 view .LVU860
 3122              	.LBE217:
 3123              	.LBE216:
2181:Middlewares/FreeRTOS/tasks.c **** 
 3124              		.loc 1 2181 5 is_stmt 1 discriminator 1 view .LVU861
2181:Middlewares/FreeRTOS/tasks.c **** 
 3125              		.loc 1 2181 5 discriminator 1 view .LVU862
 3126 0018 FEE7     		b	.L215
 3127              	.L214:
2181:Middlewares/FreeRTOS/tasks.c **** 
 3128              		.loc 1 2181 41 discriminator 2 view .LVU863
2188:Middlewares/FreeRTOS/tasks.c ****     {
 3129              		.loc 1 2188 5 discriminator 2 view .LVU864
 3130 001a FFF7FEFF 		bl	vPortEnterCritical
 3131              	.LVL213:
2190:Middlewares/FreeRTOS/tasks.c **** 
 3132              		.loc 1 2190 9 discriminator 2 view .LVU865
 3133 001e 434B     		ldr	r3, .L233
 3134 0020 1A68     		ldr	r2, [r3]
 3135 0022 013A     		subs	r2, r2, #1
 3136 0024 1A60     		str	r2, [r3]
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 168


2192:Middlewares/FreeRTOS/tasks.c ****         {
 3137              		.loc 1 2192 9 discriminator 2 view .LVU866
2192:Middlewares/FreeRTOS/tasks.c ****         {
 3138              		.loc 1 2192 34 is_stmt 0 discriminator 2 view .LVU867
 3139 0026 1B68     		ldr	r3, [r3]
2192:Middlewares/FreeRTOS/tasks.c ****         {
 3140              		.loc 1 2192 11 discriminator 2 view .LVU868
 3141 0028 002B     		cmp	r3, #0
 3142 002a 7AD1     		bne	.L226
2194:Middlewares/FreeRTOS/tasks.c ****             {
 3143              		.loc 1 2194 13 is_stmt 1 view .LVU869
2194:Middlewares/FreeRTOS/tasks.c ****             {
 3144              		.loc 1 2194 40 is_stmt 0 view .LVU870
 3145 002c 404B     		ldr	r3, .L233+4
 3146 002e 1B68     		ldr	r3, [r3]
2194:Middlewares/FreeRTOS/tasks.c ****             {
 3147              		.loc 1 2194 15 view .LVU871
 3148 0030 3BB9     		cbnz	r3, .L227
2177:Middlewares/FreeRTOS/tasks.c **** 
 3149              		.loc 1 2177 16 view .LVU872
 3150 0032 0024     		movs	r4, #0
 3151 0034 76E0     		b	.L216
 3152              	.LVL214:
 3153              	.L230:
 3154              	.LBB218:
2201:Middlewares/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3155              		.loc 1 2201 21 is_stmt 1 discriminator 1 view .LVU873
 3156 0036 196A     		ldr	r1, [r3, #32]
 3157 0038 5160     		str	r1, [r2, #4]
 3158 003a 15E0     		b	.L218
 3159              	.LVL215:
 3160              	.L231:
2201:Middlewares/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3161              		.loc 1 2201 21 is_stmt 0 discriminator 1 view .LVU874
 3162              	.LBE218:
 3163              	.LBB219:
2203:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3164              		.loc 1 2203 21 is_stmt 1 discriminator 1 view .LVU875
 3165 003c D968     		ldr	r1, [r3, #12]
 3166 003e 5160     		str	r1, [r2, #4]
 3167 0040 21E0     		b	.L219
 3168              	.LVL216:
 3169              	.L227:
2203:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3170              		.loc 1 2203 21 is_stmt 0 discriminator 1 view .LVU876
 3171              	.LBE219:
2176:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
 3172              		.loc 1 2176 13 view .LVU877
 3173 0042 0023     		movs	r3, #0
 3174              	.LVL217:
 3175              	.L217:
2214:Middlewares/FreeRTOS/tasks.c ****                     }
 3176              		.loc 1 2214 49 is_stmt 1 view .LVU878
2198:Middlewares/FreeRTOS/tasks.c ****                 {
 3177              		.loc 1 2198 64 view .LVU879
2198:Middlewares/FreeRTOS/tasks.c ****                 {
 3178              		.loc 1 2198 24 is_stmt 0 view .LVU880
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 169


 3179 0044 3B4A     		ldr	r2, .L233+8
 3180 0046 1268     		ldr	r2, [r2]
2198:Middlewares/FreeRTOS/tasks.c ****                 {
 3181              		.loc 1 2198 64 view .LVU881
 3182 0048 002A     		cmp	r2, #0
 3183 004a 47D0     		beq	.L229
2200:Middlewares/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3184              		.loc 1 2200 21 is_stmt 1 view .LVU882
2200:Middlewares/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3185              		.loc 1 2200 29 is_stmt 0 view .LVU883
 3186 004c 394B     		ldr	r3, .L233+8
 3187              	.LVL218:
2200:Middlewares/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3188              		.loc 1 2200 29 view .LVU884
 3189 004e DB68     		ldr	r3, [r3, #12]
2200:Middlewares/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3190              		.loc 1 2200 27 view .LVU885
 3191 0050 DB68     		ldr	r3, [r3, #12]
 3192              	.LVL219:
 3193              	.LBB220:
2201:Middlewares/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3194              		.loc 1 2201 21 is_stmt 1 view .LVU886
 3195 0052 9A6A     		ldr	r2, [r3, #40]
 3196              	.LVL220:
2201:Middlewares/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3197              		.loc 1 2201 21 view .LVU887
 3198 0054 D869     		ldr	r0, [r3, #28]
 3199 0056 196A     		ldr	r1, [r3, #32]
 3200 0058 8160     		str	r1, [r0, #8]
2201:Middlewares/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3201              		.loc 1 2201 21 view .LVU888
 3202 005a D869     		ldr	r0, [r3, #28]
 3203 005c 4860     		str	r0, [r1, #4]
2201:Middlewares/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3204              		.loc 1 2201 21 view .LVU889
 3205 005e 5068     		ldr	r0, [r2, #4]
 3206 0060 03F11801 		add	r1, r3, #24
 3207 0064 8842     		cmp	r0, r1
 3208 0066 E6D0     		beq	.L230
 3209              	.L218:
2201:Middlewares/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3210              		.loc 1 2201 21 discriminator 3 view .LVU890
 3211 0068 0021     		movs	r1, #0
 3212 006a 9962     		str	r1, [r3, #40]
2201:Middlewares/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3213              		.loc 1 2201 21 discriminator 3 view .LVU891
 3214 006c 1168     		ldr	r1, [r2]
 3215 006e 0139     		subs	r1, r1, #1
 3216 0070 1160     		str	r1, [r2]
 3217              	.LBE220:
2201:Middlewares/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3218              		.loc 1 2201 66 discriminator 3 view .LVU892
2202:Middlewares/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 3219              		.loc 1 2202 21 discriminator 3 view .LVU893
 3220              	.LBB221:
2203:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3221              		.loc 1 2203 21 discriminator 3 view .LVU894
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 170


 3222 0072 5A69     		ldr	r2, [r3, #20]
 3223              	.LVL221:
2203:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3224              		.loc 1 2203 21 discriminator 3 view .LVU895
 3225 0074 9868     		ldr	r0, [r3, #8]
 3226 0076 D968     		ldr	r1, [r3, #12]
 3227 0078 8160     		str	r1, [r0, #8]
2203:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3228              		.loc 1 2203 21 discriminator 3 view .LVU896
 3229 007a 9868     		ldr	r0, [r3, #8]
 3230 007c 4860     		str	r0, [r1, #4]
2203:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3231              		.loc 1 2203 21 discriminator 3 view .LVU897
 3232 007e 5168     		ldr	r1, [r2, #4]
 3233 0080 181D     		adds	r0, r3, #4
 3234 0082 8142     		cmp	r1, r0
 3235 0084 DAD0     		beq	.L231
 3236              	.L219:
2203:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3237              		.loc 1 2203 21 discriminator 3 view .LVU898
 3238 0086 0021     		movs	r1, #0
 3239 0088 5961     		str	r1, [r3, #20]
2203:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3240              		.loc 1 2203 21 discriminator 3 view .LVU899
 3241 008a 1168     		ldr	r1, [r2]
 3242 008c 0139     		subs	r1, r1, #1
 3243 008e 1160     		str	r1, [r2]
 3244              	.LBE221:
2203:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3245              		.loc 1 2203 66 discriminator 3 view .LVU900
2204:Middlewares/FreeRTOS/tasks.c **** 
 3246              		.loc 1 2204 21 discriminator 3 view .LVU901
2204:Middlewares/FreeRTOS/tasks.c **** 
 3247              		.loc 1 2204 21 discriminator 3 view .LVU902
 3248 0090 DA6A     		ldr	r2, [r3, #44]
 3249              	.LVL222:
2204:Middlewares/FreeRTOS/tasks.c **** 
 3250              		.loc 1 2204 21 is_stmt 0 discriminator 3 view .LVU903
 3251 0092 0121     		movs	r1, #1
 3252 0094 9140     		lsls	r1, r1, r2
 3253 0096 284C     		ldr	r4, .L233+12
 3254 0098 2568     		ldr	r5, [r4]
 3255 009a 2943     		orrs	r1, r1, r5
 3256 009c 2160     		str	r1, [r4]
 3257              	.LBB222:
2204:Middlewares/FreeRTOS/tasks.c **** 
 3258              		.loc 1 2204 21 is_stmt 1 discriminator 3 view .LVU904
 3259 009e 2749     		ldr	r1, .L233+16
 3260 00a0 02EB8202 		add	r2, r2, r2, lsl #2
 3261 00a4 01EB8202 		add	r2, r1, r2, lsl #2
 3262 00a8 5268     		ldr	r2, [r2, #4]
 3263              	.LVL223:
2204:Middlewares/FreeRTOS/tasks.c **** 
 3264              		.loc 1 2204 21 discriminator 3 view .LVU905
2204:Middlewares/FreeRTOS/tasks.c **** 
 3265              		.loc 1 2204 21 discriminator 3 view .LVU906
2204:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 171


 3266              		.loc 1 2204 21 discriminator 3 view .LVU907
 3267 00aa 9A60     		str	r2, [r3, #8]
2204:Middlewares/FreeRTOS/tasks.c **** 
 3268              		.loc 1 2204 21 discriminator 3 view .LVU908
 3269 00ac 9468     		ldr	r4, [r2, #8]
 3270 00ae DC60     		str	r4, [r3, #12]
2204:Middlewares/FreeRTOS/tasks.c **** 
 3271              		.loc 1 2204 21 discriminator 3 view .LVU909
 3272 00b0 6060     		str	r0, [r4, #4]
2204:Middlewares/FreeRTOS/tasks.c **** 
 3273              		.loc 1 2204 21 discriminator 3 view .LVU910
 3274 00b2 9060     		str	r0, [r2, #8]
2204:Middlewares/FreeRTOS/tasks.c **** 
 3275              		.loc 1 2204 21 discriminator 3 view .LVU911
 3276 00b4 DA6A     		ldr	r2, [r3, #44]
 3277              	.LVL224:
2204:Middlewares/FreeRTOS/tasks.c **** 
 3278              		.loc 1 2204 21 is_stmt 0 discriminator 3 view .LVU912
 3279 00b6 02EB8200 		add	r0, r2, r2, lsl #2
 3280 00ba 8400     		lsls	r4, r0, #2
 3281 00bc 01EB8000 		add	r0, r1, r0, lsl #2
 3282 00c0 5861     		str	r0, [r3, #20]
2204:Middlewares/FreeRTOS/tasks.c **** 
 3283              		.loc 1 2204 21 is_stmt 1 discriminator 3 view .LVU913
 3284 00c2 0859     		ldr	r0, [r1, r4]
 3285 00c4 0130     		adds	r0, r0, #1
 3286 00c6 0851     		str	r0, [r1, r4]
 3287              	.LBE222:
2204:Middlewares/FreeRTOS/tasks.c **** 
 3288              		.loc 1 2204 21 discriminator 3 view .LVU914
2204:Middlewares/FreeRTOS/tasks.c **** 
 3289              		.loc 1 2204 51 discriminator 3 view .LVU915
2208:Middlewares/FreeRTOS/tasks.c ****                     {
 3290              		.loc 1 2208 21 discriminator 3 view .LVU916
2208:Middlewares/FreeRTOS/tasks.c ****                     {
 3291              		.loc 1 2208 30 is_stmt 0 discriminator 3 view .LVU917
 3292 00c8 D96A     		ldr	r1, [r3, #44]
2208:Middlewares/FreeRTOS/tasks.c ****                     {
 3293              		.loc 1 2208 58 discriminator 3 view .LVU918
 3294 00ca 1D4A     		ldr	r2, .L233+20
 3295 00cc 1268     		ldr	r2, [r2]
 3296 00ce D26A     		ldr	r2, [r2, #44]
2208:Middlewares/FreeRTOS/tasks.c ****                     {
 3297              		.loc 1 2208 23 discriminator 3 view .LVU919
 3298 00d0 9142     		cmp	r1, r2
 3299 00d2 B7D3     		bcc	.L217
2210:Middlewares/FreeRTOS/tasks.c ****                     }
 3300              		.loc 1 2210 25 is_stmt 1 view .LVU920
2210:Middlewares/FreeRTOS/tasks.c ****                     }
 3301              		.loc 1 2210 39 is_stmt 0 view .LVU921
 3302 00d4 1B4A     		ldr	r2, .L233+24
 3303 00d6 0121     		movs	r1, #1
 3304 00d8 1160     		str	r1, [r2]
 3305 00da B3E7     		b	.L217
 3306              	.LVL225:
 3307              	.L229:
2218:Middlewares/FreeRTOS/tasks.c ****                 {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 172


 3308              		.loc 1 2218 17 is_stmt 1 view .LVU922
2218:Middlewares/FreeRTOS/tasks.c ****                 {
 3309              		.loc 1 2218 19 is_stmt 0 view .LVU923
 3310 00dc 0BB1     		cbz	r3, .L222
2226:Middlewares/FreeRTOS/tasks.c ****                 }
 3311              		.loc 1 2226 21 is_stmt 1 view .LVU924
 3312 00de FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3313              	.LVL226:
 3314              	.L222:
 3315              	.LBB223:
2234:Middlewares/FreeRTOS/tasks.c **** 
 3316              		.loc 1 2234 21 view .LVU925
2234:Middlewares/FreeRTOS/tasks.c **** 
 3317              		.loc 1 2234 32 is_stmt 0 view .LVU926
 3318 00e2 194B     		ldr	r3, .L233+28
 3319 00e4 1C68     		ldr	r4, [r3]
 3320              	.LVL227:
2236:Middlewares/FreeRTOS/tasks.c ****                     {
 3321              		.loc 1 2236 21 is_stmt 1 view .LVU927
2236:Middlewares/FreeRTOS/tasks.c ****                     {
 3322              		.loc 1 2236 23 is_stmt 0 view .LVU928
 3323 00e6 84B9     		cbnz	r4, .L225
 3324              	.L223:
2256:Middlewares/FreeRTOS/tasks.c ****                     }
 3325              		.loc 1 2256 49 is_stmt 1 view .LVU929
 3326              	.LBE223:
2260:Middlewares/FreeRTOS/tasks.c ****                 {
 3327              		.loc 1 2260 17 view .LVU930
2260:Middlewares/FreeRTOS/tasks.c ****                 {
 3328              		.loc 1 2260 35 is_stmt 0 view .LVU931
 3329 00e8 164B     		ldr	r3, .L233+24
 3330 00ea 1C68     		ldr	r4, [r3]
 3331              	.LVL228:
2260:Middlewares/FreeRTOS/tasks.c ****                 {
 3332              		.loc 1 2260 19 view .LVU932
 3333 00ec D4B1     		cbz	r4, .L216
2264:Middlewares/FreeRTOS/tasks.c ****                     }
 3334              		.loc 1 2264 25 is_stmt 1 view .LVU933
 3335              	.LVL229:
2267:Middlewares/FreeRTOS/tasks.c ****                 }
 3336              		.loc 1 2267 21 view .LVU934
 3337 00ee 4FF0E023 		mov	r3, #-536813568
 3338 00f2 4FF08052 		mov	r2, #268435456
 3339 00f6 C3F8042D 		str	r2, [r3, #3332]
2267:Middlewares/FreeRTOS/tasks.c ****                 }
 3340              		.loc 1 2267 21 view .LVU935
 3341              		.syntax unified
 3342              	@ 2267 "Middlewares/FreeRTOS/tasks.c" 1
 3343 00fa BFF34F8F 		dsb
 3344              	@ 0 "" 2
2267:Middlewares/FreeRTOS/tasks.c ****                 }
 3345              		.loc 1 2267 21 view .LVU936
 3346              	@ 2267 "Middlewares/FreeRTOS/tasks.c" 1
 3347 00fe BFF36F8F 		isb
 3348              	@ 0 "" 2
2267:Middlewares/FreeRTOS/tasks.c ****                 }
 3349              		.loc 1 2267 52 view .LVU937
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 173


2264:Middlewares/FreeRTOS/tasks.c ****                     }
 3350              		.loc 1 2264 41 is_stmt 0 view .LVU938
 3351              		.thumb
 3352              		.syntax unified
 3353 0102 0124     		movs	r4, #1
 3354 0104 0EE0     		b	.L216
 3355              	.LVL230:
 3356              	.L224:
 3357              	.LBB224:
2246:Middlewares/FreeRTOS/tasks.c ****                             }
 3358              		.loc 1 2246 57 is_stmt 1 view .LVU939
2249:Middlewares/FreeRTOS/tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
 3359              		.loc 1 2249 29 view .LVU940
2250:Middlewares/FreeRTOS/tasks.c **** 
 3360              		.loc 1 2250 48 view .LVU941
 3361 0106 013C     		subs	r4, r4, #1
 3362              	.LVL231:
2250:Middlewares/FreeRTOS/tasks.c **** 
 3363              		.loc 1 2250 48 is_stmt 0 view .LVU942
 3364 0108 07D0     		beq	.L232
 3365              	.L225:
2238:Middlewares/FreeRTOS/tasks.c ****                         {
 3366              		.loc 1 2238 25 is_stmt 1 view .LVU943
2240:Middlewares/FreeRTOS/tasks.c ****                             {
 3367              		.loc 1 2240 29 view .LVU944
2240:Middlewares/FreeRTOS/tasks.c ****                             {
 3368              		.loc 1 2240 33 is_stmt 0 view .LVU945
 3369 010a FFF7FEFF 		bl	xTaskIncrementTick
 3370              	.LVL232:
2240:Middlewares/FreeRTOS/tasks.c ****                             {
 3371              		.loc 1 2240 31 view .LVU946
 3372 010e 0028     		cmp	r0, #0
 3373 0110 F9D0     		beq	.L224
2242:Middlewares/FreeRTOS/tasks.c ****                             }
 3374              		.loc 1 2242 33 is_stmt 1 view .LVU947
2242:Middlewares/FreeRTOS/tasks.c ****                             }
 3375              		.loc 1 2242 47 is_stmt 0 view .LVU948
 3376 0112 0C4B     		ldr	r3, .L233+24
 3377 0114 0122     		movs	r2, #1
 3378 0116 1A60     		str	r2, [r3]
 3379 0118 F5E7     		b	.L224
 3380              	.L232:
2252:Middlewares/FreeRTOS/tasks.c ****                     }
 3381              		.loc 1 2252 25 is_stmt 1 view .LVU949
2252:Middlewares/FreeRTOS/tasks.c ****                     }
 3382              		.loc 1 2252 38 is_stmt 0 view .LVU950
 3383 011a 0B4B     		ldr	r3, .L233+28
 3384 011c 0022     		movs	r2, #0
 3385 011e 1A60     		str	r2, [r3]
 3386 0120 E2E7     		b	.L223
 3387              	.LVL233:
 3388              	.L226:
2252:Middlewares/FreeRTOS/tasks.c ****                     }
 3389              		.loc 1 2252 38 view .LVU951
 3390              	.LBE224:
2177:Middlewares/FreeRTOS/tasks.c **** 
 3391              		.loc 1 2177 16 view .LVU952
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 174


 3392 0122 0024     		movs	r4, #0
 3393              	.LVL234:
 3394              	.L216:
2277:Middlewares/FreeRTOS/tasks.c ****         }
 3395              		.loc 1 2277 37 is_stmt 1 view .LVU953
2280:Middlewares/FreeRTOS/tasks.c **** 
 3396              		.loc 1 2280 5 view .LVU954
 3397 0124 FFF7FEFF 		bl	vPortExitCritical
 3398              	.LVL235:
2282:Middlewares/FreeRTOS/tasks.c **** }
 3399              		.loc 1 2282 5 view .LVU955
2283:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3400              		.loc 1 2283 1 is_stmt 0 view .LVU956
 3401 0128 2046     		mov	r0, r4
 3402 012a 38BD     		pop	{r3, r4, r5, pc}
 3403              	.LVL236:
 3404              	.L234:
2283:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3405              		.loc 1 2283 1 view .LVU957
 3406              		.align	2
 3407              	.L233:
 3408 012c 00000000 		.word	uxSchedulerSuspended
 3409 0130 00000000 		.word	uxCurrentNumberOfTasks
 3410 0134 00000000 		.word	xPendingReadyList
 3411 0138 00000000 		.word	uxTopReadyPriority
 3412 013c 00000000 		.word	pxReadyTasksLists
 3413 0140 00000000 		.word	pxCurrentTCB
 3414 0144 00000000 		.word	xYieldPending
 3415 0148 00000000 		.word	xPendedTicks
 3416              		.cfi_endproc
 3417              	.LFE22:
 3419              		.section	.text.xTaskDelayUntil,"ax",%progbits
 3420              		.align	1
 3421              		.global	xTaskDelayUntil
 3422              		.syntax unified
 3423              		.thumb
 3424              		.thumb_func
 3426              	xTaskDelayUntil:
 3427              	.LVL237:
 3428              	.LFB10:
1216:Middlewares/FreeRTOS/tasks.c ****         TickType_t xTimeToWake;
 3429              		.loc 1 1216 5 is_stmt 1 view -0
 3430              		.cfi_startproc
 3431              		@ args = 0, pretend = 0, frame = 0
 3432              		@ frame_needed = 0, uses_anonymous_args = 0
1216:Middlewares/FreeRTOS/tasks.c ****         TickType_t xTimeToWake;
 3433              		.loc 1 1216 5 is_stmt 0 view .LVU959
 3434 0000 38B5     		push	{r3, r4, r5, lr}
 3435              	.LCFI27:
 3436              		.cfi_def_cfa_offset 16
 3437              		.cfi_offset 3, -16
 3438              		.cfi_offset 4, -12
 3439              		.cfi_offset 5, -8
 3440              		.cfi_offset 14, -4
1217:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
 3441              		.loc 1 1217 9 is_stmt 1 view .LVU960
1218:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 175


 3442              		.loc 1 1218 9 view .LVU961
 3443              	.LVL238:
1220:Middlewares/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3444              		.loc 1 1220 9 view .LVU962
 3445 0002 58B1     		cbz	r0, .L251
 3446 0004 0C46     		mov	r4, r1
 3447 0006 0546     		mov	r5, r0
1220:Middlewares/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3448              		.loc 1 1220 43 discriminator 2 view .LVU963
1221:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3449              		.loc 1 1221 9 discriminator 2 view .LVU964
 3450 0008 89B9     		cbnz	r1, .L238
1221:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3451              		.loc 1 1221 9 view .LVU965
 3452              	.LBB225:
 3453              	.LBI225:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3454              		.loc 2 196 34 view .LVU966
 3455              	.LBB226:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3456              		.loc 2 198 9 view .LVU967
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3457              		.loc 2 200 9 view .LVU968
 3458              		.syntax unified
 3459              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3460 000a 4FF01003 			mov r3, #16												
 3461 000e 83F31188 		msr basepri, r3											
 3462 0012 BFF36F8F 		isb														
 3463 0016 BFF34F8F 		dsb														
 3464              	
 3465              	@ 0 "" 2
 3466              	.LVL239:
 3467              		.thumb
 3468              		.syntax unified
 3469              	.L239:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3470              		.loc 2 200 9 is_stmt 0 view .LVU969
 3471              	.LBE226:
 3472              	.LBE225:
1221:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3473              		.loc 1 1221 9 is_stmt 1 discriminator 2 view .LVU970
1221:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3474              		.loc 1 1221 9 discriminator 2 view .LVU971
 3475 001a FEE7     		b	.L239
 3476              	.L251:
1220:Middlewares/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3477              		.loc 1 1220 9 view .LVU972
 3478              	.LBB227:
 3479              	.LBI227:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3480              		.loc 2 196 34 view .LVU973
 3481              	.LBB228:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3482              		.loc 2 198 9 view .LVU974
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3483              		.loc 2 200 9 view .LVU975
 3484              		.syntax unified
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 176


 3485              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3486 001c 4FF01003 			mov r3, #16												
 3487 0020 83F31188 		msr basepri, r3											
 3488 0024 BFF36F8F 		isb														
 3489 0028 BFF34F8F 		dsb														
 3490              	
 3491              	@ 0 "" 2
 3492              	.LVL240:
 3493              		.thumb
 3494              		.syntax unified
 3495              	.L237:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3496              		.loc 2 200 9 is_stmt 0 view .LVU976
 3497              	.LBE228:
 3498              	.LBE227:
1220:Middlewares/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3499              		.loc 1 1220 9 is_stmt 1 discriminator 1 view .LVU977
1220:Middlewares/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3500              		.loc 1 1220 9 discriminator 1 view .LVU978
 3501 002c FEE7     		b	.L237
 3502              	.L238:
1221:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3503              		.loc 1 1221 48 discriminator 2 view .LVU979
1222:Middlewares/FreeRTOS/tasks.c **** 
 3504              		.loc 1 1222 9 discriminator 2 view .LVU980
 3505 002e 1E4B     		ldr	r3, .L252
 3506 0030 1B68     		ldr	r3, [r3]
 3507 0032 43B1     		cbz	r3, .L240
1222:Middlewares/FreeRTOS/tasks.c **** 
 3508              		.loc 1 1222 9 view .LVU981
 3509              	.LBB229:
 3510              	.LBI229:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3511              		.loc 2 196 34 view .LVU982
 3512              	.LBB230:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3513              		.loc 2 198 9 view .LVU983
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3514              		.loc 2 200 9 view .LVU984
 3515              		.syntax unified
 3516              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3517 0034 4FF01003 			mov r3, #16												
 3518 0038 83F31188 		msr basepri, r3											
 3519 003c BFF36F8F 		isb														
 3520 0040 BFF34F8F 		dsb														
 3521              	
 3522              	@ 0 "" 2
 3523              	.LVL241:
 3524              		.thumb
 3525              		.syntax unified
 3526              	.L241:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3527              		.loc 2 200 9 is_stmt 0 view .LVU985
 3528              	.LBE230:
 3529              	.LBE229:
1222:Middlewares/FreeRTOS/tasks.c **** 
 3530              		.loc 1 1222 9 is_stmt 1 discriminator 3 view .LVU986
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 177


1222:Middlewares/FreeRTOS/tasks.c **** 
 3531              		.loc 1 1222 9 discriminator 3 view .LVU987
 3532 0044 FEE7     		b	.L241
 3533              	.L240:
1222:Middlewares/FreeRTOS/tasks.c **** 
 3534              		.loc 1 1222 50 discriminator 2 view .LVU988
1224:Middlewares/FreeRTOS/tasks.c ****         {
 3535              		.loc 1 1224 9 discriminator 2 view .LVU989
 3536 0046 FFF7FEFF 		bl	vTaskSuspendAll
 3537              	.LVL242:
 3538              	.LBB231:
1228:Middlewares/FreeRTOS/tasks.c **** 
 3539              		.loc 1 1228 13 discriminator 2 view .LVU990
1228:Middlewares/FreeRTOS/tasks.c **** 
 3540              		.loc 1 1228 30 is_stmt 0 discriminator 2 view .LVU991
 3541 004a 184B     		ldr	r3, .L252+4
 3542 004c 1868     		ldr	r0, [r3]
 3543              	.LVL243:
1231:Middlewares/FreeRTOS/tasks.c **** 
 3544              		.loc 1 1231 13 is_stmt 1 discriminator 2 view .LVU992
1231:Middlewares/FreeRTOS/tasks.c **** 
 3545              		.loc 1 1231 27 is_stmt 0 discriminator 2 view .LVU993
 3546 004e 2B68     		ldr	r3, [r5]
1231:Middlewares/FreeRTOS/tasks.c **** 
 3547              		.loc 1 1231 25 discriminator 2 view .LVU994
 3548 0050 1C44     		add	r4, r4, r3
 3549              	.LVL244:
1233:Middlewares/FreeRTOS/tasks.c ****             {
 3550              		.loc 1 1233 13 is_stmt 1 discriminator 2 view .LVU995
1233:Middlewares/FreeRTOS/tasks.c ****             {
 3551              		.loc 1 1233 15 is_stmt 0 discriminator 2 view .LVU996
 3552 0052 8342     		cmp	r3, r0
 3553 0054 0BD9     		bls	.L242
1240:Middlewares/FreeRTOS/tasks.c ****                 {
 3554              		.loc 1 1240 17 is_stmt 1 view .LVU997
1240:Middlewares/FreeRTOS/tasks.c ****                 {
 3555              		.loc 1 1240 19 is_stmt 0 view .LVU998
 3556 0056 A342     		cmp	r3, r4
 3557 0058 02D8     		bhi	.L243
1265:Middlewares/FreeRTOS/tasks.c **** 
 3558              		.loc 1 1265 13 is_stmt 1 view .LVU999
1265:Middlewares/FreeRTOS/tasks.c **** 
 3559              		.loc 1 1265 33 is_stmt 0 view .LVU1000
 3560 005a 2C60     		str	r4, [r5]
1267:Middlewares/FreeRTOS/tasks.c ****             {
 3561              		.loc 1 1267 13 is_stmt 1 view .LVU1001
 3562              	.LBE231:
1218:Middlewares/FreeRTOS/tasks.c **** 
 3563              		.loc 1 1218 37 is_stmt 0 view .LVU1002
 3564 005c 0024     		movs	r4, #0
 3565              	.LVL245:
1218:Middlewares/FreeRTOS/tasks.c **** 
 3566              		.loc 1 1218 37 view .LVU1003
 3567 005e 10E0     		b	.L244
 3568              	.LVL246:
 3569              	.L243:
 3570              	.LBB232:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 178


1240:Middlewares/FreeRTOS/tasks.c ****                 {
 3571              		.loc 1 1240 59 discriminator 1 view .LVU1004
 3572 0060 A042     		cmp	r0, r4
 3573 0062 02D3     		bcc	.L245
1265:Middlewares/FreeRTOS/tasks.c **** 
 3574              		.loc 1 1265 13 is_stmt 1 view .LVU1005
1265:Middlewares/FreeRTOS/tasks.c **** 
 3575              		.loc 1 1265 33 is_stmt 0 view .LVU1006
 3576 0064 2C60     		str	r4, [r5]
1267:Middlewares/FreeRTOS/tasks.c ****             {
 3577              		.loc 1 1267 13 is_stmt 1 view .LVU1007
 3578              	.LBE232:
1218:Middlewares/FreeRTOS/tasks.c **** 
 3579              		.loc 1 1218 37 is_stmt 0 view .LVU1008
 3580 0066 0024     		movs	r4, #0
 3581              	.LVL247:
1218:Middlewares/FreeRTOS/tasks.c **** 
 3582              		.loc 1 1218 37 view .LVU1009
 3583 0068 0BE0     		b	.L244
 3584              	.LVL248:
 3585              	.L245:
 3586              	.LBB233:
1242:Middlewares/FreeRTOS/tasks.c ****                 }
 3587              		.loc 1 1242 21 is_stmt 1 view .LVU1010
1265:Middlewares/FreeRTOS/tasks.c **** 
 3588              		.loc 1 1265 13 view .LVU1011
1265:Middlewares/FreeRTOS/tasks.c **** 
 3589              		.loc 1 1265 33 is_stmt 0 view .LVU1012
 3590 006a 2C60     		str	r4, [r5]
1267:Middlewares/FreeRTOS/tasks.c ****             {
 3591              		.loc 1 1267 13 is_stmt 1 view .LVU1013
 3592 006c 04E0     		b	.L246
 3593              	.LVL249:
 3594              	.L242:
1254:Middlewares/FreeRTOS/tasks.c ****                 {
 3595              		.loc 1 1254 17 view .LVU1014
1254:Middlewares/FreeRTOS/tasks.c ****                 {
 3596              		.loc 1 1254 19 is_stmt 0 view .LVU1015
 3597 006e A342     		cmp	r3, r4
 3598 0070 01D8     		bhi	.L247
1254:Middlewares/FreeRTOS/tasks.c ****                 {
 3599              		.loc 1 1254 59 discriminator 1 view .LVU1016
 3600 0072 A042     		cmp	r0, r4
 3601 0074 14D2     		bcs	.L248
 3602              	.L247:
1256:Middlewares/FreeRTOS/tasks.c ****                 }
 3603              		.loc 1 1256 21 is_stmt 1 view .LVU1017
 3604              	.LVL250:
1265:Middlewares/FreeRTOS/tasks.c **** 
 3605              		.loc 1 1265 13 view .LVU1018
1265:Middlewares/FreeRTOS/tasks.c **** 
 3606              		.loc 1 1265 33 is_stmt 0 view .LVU1019
 3607 0076 2C60     		str	r4, [r5]
1267:Middlewares/FreeRTOS/tasks.c ****             {
 3608              		.loc 1 1267 13 is_stmt 1 view .LVU1020
 3609              	.L246:
1269:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 179


 3610              		.loc 1 1269 53 view .LVU1021
1273:Middlewares/FreeRTOS/tasks.c ****             }
 3611              		.loc 1 1273 17 view .LVU1022
 3612 0078 0021     		movs	r1, #0
 3613 007a 201A     		subs	r0, r4, r0
 3614              	.LVL251:
1273:Middlewares/FreeRTOS/tasks.c ****             }
 3615              		.loc 1 1273 17 is_stmt 0 view .LVU1023
 3616 007c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3617              	.LVL252:
 3618 0080 0124     		movs	r4, #1
 3619              	.LVL253:
 3620              	.L244:
1277:Middlewares/FreeRTOS/tasks.c ****             }
 3621              		.loc 1 1277 41 is_stmt 1 view .LVU1024
 3622              	.LBE233:
1280:Middlewares/FreeRTOS/tasks.c **** 
 3623              		.loc 1 1280 9 view .LVU1025
1280:Middlewares/FreeRTOS/tasks.c **** 
 3624              		.loc 1 1280 27 is_stmt 0 view .LVU1026
 3625 0082 FFF7FEFF 		bl	xTaskResumeAll
 3626              	.LVL254:
1284:Middlewares/FreeRTOS/tasks.c ****         {
 3627              		.loc 1 1284 9 is_stmt 1 view .LVU1027
1284:Middlewares/FreeRTOS/tasks.c ****         {
 3628              		.loc 1 1284 11 is_stmt 0 view .LVU1028
 3629 0086 48B9     		cbnz	r0, .L235
1286:Middlewares/FreeRTOS/tasks.c ****         }
 3630              		.loc 1 1286 13 is_stmt 1 view .LVU1029
 3631 0088 4FF0E023 		mov	r3, #-536813568
 3632 008c 4FF08052 		mov	r2, #268435456
 3633 0090 C3F8042D 		str	r2, [r3, #3332]
1286:Middlewares/FreeRTOS/tasks.c ****         }
 3634              		.loc 1 1286 13 view .LVU1030
 3635              		.syntax unified
 3636              	@ 1286 "Middlewares/FreeRTOS/tasks.c" 1
 3637 0094 BFF34F8F 		dsb
 3638              	@ 0 "" 2
1286:Middlewares/FreeRTOS/tasks.c ****         }
 3639              		.loc 1 1286 13 view .LVU1031
 3640              	@ 1286 "Middlewares/FreeRTOS/tasks.c" 1
 3641 0098 BFF36F8F 		isb
 3642              	@ 0 "" 2
1286:Middlewares/FreeRTOS/tasks.c ****         }
 3643              		.loc 1 1286 35 view .LVU1032
1290:Middlewares/FreeRTOS/tasks.c ****         }
 3644              		.loc 1 1290 37 view .LVU1033
1293:Middlewares/FreeRTOS/tasks.c ****     }
 3645              		.loc 1 1293 9 view .LVU1034
 3646              		.thumb
 3647              		.syntax unified
 3648              	.L235:
1294:Middlewares/FreeRTOS/tasks.c **** 
 3649              		.loc 1 1294 5 is_stmt 0 view .LVU1035
 3650 009c 2046     		mov	r0, r4
 3651              	.LVL255:
1294:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 180


 3652              		.loc 1 1294 5 view .LVU1036
 3653 009e 38BD     		pop	{r3, r4, r5, pc}
 3654              	.LVL256:
 3655              	.L248:
 3656              	.LBB234:
1265:Middlewares/FreeRTOS/tasks.c **** 
 3657              		.loc 1 1265 13 is_stmt 1 view .LVU1037
1265:Middlewares/FreeRTOS/tasks.c **** 
 3658              		.loc 1 1265 33 is_stmt 0 view .LVU1038
 3659 00a0 2C60     		str	r4, [r5]
1267:Middlewares/FreeRTOS/tasks.c ****             {
 3660              		.loc 1 1267 13 is_stmt 1 view .LVU1039
 3661              	.LBE234:
1218:Middlewares/FreeRTOS/tasks.c **** 
 3662              		.loc 1 1218 37 is_stmt 0 view .LVU1040
 3663 00a2 0024     		movs	r4, #0
 3664              	.LVL257:
1218:Middlewares/FreeRTOS/tasks.c **** 
 3665              		.loc 1 1218 37 view .LVU1041
 3666 00a4 EDE7     		b	.L244
 3667              	.L253:
 3668 00a6 00BF     		.align	2
 3669              	.L252:
 3670 00a8 00000000 		.word	uxSchedulerSuspended
 3671 00ac 00000000 		.word	xTickCount
 3672              		.cfi_endproc
 3673              	.LFE10:
 3675              		.section	.text.vTaskDelay,"ax",%progbits
 3676              		.align	1
 3677              		.global	vTaskDelay
 3678              		.syntax unified
 3679              		.thumb
 3680              		.thumb_func
 3682              	vTaskDelay:
 3683              	.LVL258:
 3684              	.LFB11:
1302:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 3685              		.loc 1 1302 5 is_stmt 1 view -0
 3686              		.cfi_startproc
 3687              		@ args = 0, pretend = 0, frame = 0
 3688              		@ frame_needed = 0, uses_anonymous_args = 0
1302:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 3689              		.loc 1 1302 5 is_stmt 0 view .LVU1043
 3690 0000 10B5     		push	{r4, lr}
 3691              	.LCFI28:
 3692              		.cfi_def_cfa_offset 8
 3693              		.cfi_offset 4, -8
 3694              		.cfi_offset 14, -4
1303:Middlewares/FreeRTOS/tasks.c **** 
 3695              		.loc 1 1303 9 is_stmt 1 view .LVU1044
 3696              	.LVL259:
1306:Middlewares/FreeRTOS/tasks.c ****         {
 3697              		.loc 1 1306 9 view .LVU1045
1306:Middlewares/FreeRTOS/tasks.c ****         {
 3698              		.loc 1 1306 11 is_stmt 0 view .LVU1046
 3699 0002 A8B1     		cbz	r0, .L255
 3700 0004 0446     		mov	r4, r0
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 181


1308:Middlewares/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3701              		.loc 1 1308 13 is_stmt 1 view .LVU1047
 3702 0006 104B     		ldr	r3, .L260
 3703 0008 1B68     		ldr	r3, [r3]
 3704 000a 43B1     		cbz	r3, .L256
1308:Middlewares/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3705              		.loc 1 1308 13 view .LVU1048
 3706              	.LBB235:
 3707              	.LBI235:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3708              		.loc 2 196 34 view .LVU1049
 3709              	.LBB236:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3710              		.loc 2 198 9 view .LVU1050
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3711              		.loc 2 200 9 view .LVU1051
 3712              		.syntax unified
 3713              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3714 000c 4FF01003 			mov r3, #16												
 3715 0010 83F31188 		msr basepri, r3											
 3716 0014 BFF36F8F 		isb														
 3717 0018 BFF34F8F 		dsb														
 3718              	
 3719              	@ 0 "" 2
 3720              	.LVL260:
 3721              		.thumb
 3722              		.syntax unified
 3723              	.L257:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3724              		.loc 2 200 9 is_stmt 0 view .LVU1052
 3725              	.LBE236:
 3726              	.LBE235:
1308:Middlewares/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3727              		.loc 1 1308 13 is_stmt 1 discriminator 1 view .LVU1053
1308:Middlewares/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3728              		.loc 1 1308 13 discriminator 1 view .LVU1054
 3729 001c FEE7     		b	.L257
 3730              	.L256:
1308:Middlewares/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3731              		.loc 1 1308 54 discriminator 2 view .LVU1055
1309:Middlewares/FreeRTOS/tasks.c ****             {
 3732              		.loc 1 1309 13 discriminator 2 view .LVU1056
 3733 001e FFF7FEFF 		bl	vTaskSuspendAll
 3734              	.LVL261:
1311:Middlewares/FreeRTOS/tasks.c **** 
 3735              		.loc 1 1311 34 discriminator 2 view .LVU1057
1320:Middlewares/FreeRTOS/tasks.c ****             }
 3736              		.loc 1 1320 17 discriminator 2 view .LVU1058
 3737 0022 0021     		movs	r1, #0
 3738 0024 2046     		mov	r0, r4
 3739 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3740              	.LVL262:
1322:Middlewares/FreeRTOS/tasks.c ****         }
 3741              		.loc 1 1322 13 discriminator 2 view .LVU1059
1322:Middlewares/FreeRTOS/tasks.c ****         }
 3742              		.loc 1 1322 31 is_stmt 0 discriminator 2 view .LVU1060
 3743 002a FFF7FEFF 		bl	xTaskResumeAll
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 182


 3744              	.LVL263:
1326:Middlewares/FreeRTOS/tasks.c ****         }
 3745              		.loc 1 1326 37 is_stmt 1 discriminator 2 view .LVU1061
1331:Middlewares/FreeRTOS/tasks.c ****         {
 3746              		.loc 1 1331 9 discriminator 2 view .LVU1062
1331:Middlewares/FreeRTOS/tasks.c ****         {
 3747              		.loc 1 1331 11 is_stmt 0 discriminator 2 view .LVU1063
 3748 002e 48B9     		cbnz	r0, .L254
 3749              	.LVL264:
 3750              	.L255:
1333:Middlewares/FreeRTOS/tasks.c ****         }
 3751              		.loc 1 1333 13 is_stmt 1 view .LVU1064
 3752 0030 4FF0E023 		mov	r3, #-536813568
 3753 0034 4FF08052 		mov	r2, #268435456
 3754 0038 C3F8042D 		str	r2, [r3, #3332]
1333:Middlewares/FreeRTOS/tasks.c ****         }
 3755              		.loc 1 1333 13 view .LVU1065
 3756              		.syntax unified
 3757              	@ 1333 "Middlewares/FreeRTOS/tasks.c" 1
 3758 003c BFF34F8F 		dsb
 3759              	@ 0 "" 2
1333:Middlewares/FreeRTOS/tasks.c ****         }
 3760              		.loc 1 1333 13 view .LVU1066
 3761              	@ 1333 "Middlewares/FreeRTOS/tasks.c" 1
 3762 0040 BFF36F8F 		isb
 3763              	@ 0 "" 2
1333:Middlewares/FreeRTOS/tasks.c ****         }
 3764              		.loc 1 1333 35 view .LVU1067
1337:Middlewares/FreeRTOS/tasks.c ****         }
 3765              		.loc 1 1337 37 view .LVU1068
 3766              		.thumb
 3767              		.syntax unified
 3768              	.L254:
1339:Middlewares/FreeRTOS/tasks.c **** 
 3769              		.loc 1 1339 5 is_stmt 0 view .LVU1069
 3770 0044 10BD     		pop	{r4, pc}
 3771              	.L261:
 3772 0046 00BF     		.align	2
 3773              	.L260:
 3774 0048 00000000 		.word	uxSchedulerSuspended
 3775              		.cfi_endproc
 3776              	.LFE11:
 3778              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3779              		.align	1
 3780              		.global	xTaskCatchUpTicks
 3781              		.syntax unified
 3782              		.thumb
 3783              		.thumb_func
 3785              	xTaskCatchUpTicks:
 3786              	.LVL265:
 3787              	.LFB27:
2617:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
 3788              		.loc 1 2617 1 is_stmt 1 view -0
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 0
 3791              		@ frame_needed = 0, uses_anonymous_args = 0
2618:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 183


 3792              		.loc 1 2618 5 view .LVU1071
2622:Middlewares/FreeRTOS/tasks.c **** 
 3793              		.loc 1 2622 5 view .LVU1072
 3794 0000 0D4B     		ldr	r3, .L267
 3795 0002 1B68     		ldr	r3, [r3]
 3796 0004 43B1     		cbz	r3, .L263
2622:Middlewares/FreeRTOS/tasks.c **** 
 3797              		.loc 1 2622 5 view .LVU1073
 3798              	.LBB237:
 3799              	.LBI237:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3800              		.loc 2 196 34 view .LVU1074
 3801              	.LBB238:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3802              		.loc 2 198 9 view .LVU1075
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3803              		.loc 2 200 9 view .LVU1076
 3804              		.syntax unified
 3805              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3806 0006 4FF01003 			mov r3, #16												
 3807 000a 83F31188 		msr basepri, r3											
 3808 000e BFF36F8F 		isb														
 3809 0012 BFF34F8F 		dsb														
 3810              	
 3811              	@ 0 "" 2
 3812              	.LVL266:
 3813              		.thumb
 3814              		.syntax unified
 3815              	.L264:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3816              		.loc 2 200 9 is_stmt 0 view .LVU1077
 3817              	.LBE238:
 3818              	.LBE237:
2622:Middlewares/FreeRTOS/tasks.c **** 
 3819              		.loc 1 2622 5 is_stmt 1 discriminator 1 view .LVU1078
2622:Middlewares/FreeRTOS/tasks.c **** 
 3820              		.loc 1 2622 5 discriminator 1 view .LVU1079
 3821 0016 FEE7     		b	.L264
 3822              	.L263:
2617:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
 3823              		.loc 1 2617 1 is_stmt 0 discriminator 2 view .LVU1080
 3824 0018 10B5     		push	{r4, lr}
 3825              	.LCFI29:
 3826              		.cfi_def_cfa_offset 8
 3827              		.cfi_offset 4, -8
 3828              		.cfi_offset 14, -4
 3829 001a 0446     		mov	r4, r0
2622:Middlewares/FreeRTOS/tasks.c **** 
 3830              		.loc 1 2622 46 is_stmt 1 discriminator 2 view .LVU1081
2626:Middlewares/FreeRTOS/tasks.c **** 
 3831              		.loc 1 2626 5 discriminator 2 view .LVU1082
 3832 001c FFF7FEFF 		bl	vTaskSuspendAll
 3833              	.LVL267:
2629:Middlewares/FreeRTOS/tasks.c ****     {
 3834              		.loc 1 2629 5 discriminator 2 view .LVU1083
 3835 0020 FFF7FEFF 		bl	vPortEnterCritical
 3836              	.LVL268:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 184


2631:Middlewares/FreeRTOS/tasks.c ****     }
 3837              		.loc 1 2631 9 discriminator 2 view .LVU1084
2631:Middlewares/FreeRTOS/tasks.c ****     }
 3838              		.loc 1 2631 22 is_stmt 0 discriminator 2 view .LVU1085
 3839 0024 054A     		ldr	r2, .L267+4
 3840 0026 1368     		ldr	r3, [r2]
 3841 0028 2344     		add	r3, r3, r4
 3842 002a 1360     		str	r3, [r2]
2633:Middlewares/FreeRTOS/tasks.c ****     xYieldOccurred = xTaskResumeAll();
 3843              		.loc 1 2633 5 is_stmt 1 discriminator 2 view .LVU1086
 3844 002c FFF7FEFF 		bl	vPortExitCritical
 3845              	.LVL269:
2634:Middlewares/FreeRTOS/tasks.c **** 
 3846              		.loc 1 2634 5 discriminator 2 view .LVU1087
2634:Middlewares/FreeRTOS/tasks.c **** 
 3847              		.loc 1 2634 22 is_stmt 0 discriminator 2 view .LVU1088
 3848 0030 FFF7FEFF 		bl	xTaskResumeAll
 3849              	.LVL270:
2636:Middlewares/FreeRTOS/tasks.c **** }
 3850              		.loc 1 2636 5 is_stmt 1 discriminator 2 view .LVU1089
2637:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 3851              		.loc 1 2637 1 is_stmt 0 discriminator 2 view .LVU1090
 3852 0034 10BD     		pop	{r4, pc}
 3853              	.LVL271:
 3854              	.L268:
2637:Middlewares/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 3855              		.loc 1 2637 1 discriminator 2 view .LVU1091
 3856 0036 00BF     		.align	2
 3857              	.L267:
 3858 0038 00000000 		.word	uxSchedulerSuspended
 3859 003c 00000000 		.word	xPendedTicks
 3860              		.cfi_endproc
 3861              	.LFE27:
 3863              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3864              		.align	1
 3865              		.global	vTaskSwitchContext
 3866              		.syntax unified
 3867              		.thumb
 3868              		.thumb_func
 3870              	vTaskSwitchContext:
 3871              	.LFB29:
3010:Middlewares/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3872              		.loc 1 3010 1 is_stmt 1 view -0
 3873              		.cfi_startproc
 3874              		@ args = 0, pretend = 0, frame = 0
 3875              		@ frame_needed = 0, uses_anonymous_args = 0
 3876              		@ link register save eliminated.
3011:Middlewares/FreeRTOS/tasks.c ****     {
 3877              		.loc 1 3011 5 view .LVU1093
3011:Middlewares/FreeRTOS/tasks.c ****     {
 3878              		.loc 1 3011 30 is_stmt 0 view .LVU1094
 3879 0000 204B     		ldr	r3, .L276
 3880 0002 1B68     		ldr	r3, [r3]
3011:Middlewares/FreeRTOS/tasks.c ****     {
 3881              		.loc 1 3011 7 view .LVU1095
 3882 0004 1BB1     		cbz	r3, .L270
3015:Middlewares/FreeRTOS/tasks.c ****     }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 185


 3883              		.loc 1 3015 9 is_stmt 1 view .LVU1096
3015:Middlewares/FreeRTOS/tasks.c ****     }
 3884              		.loc 1 3015 23 is_stmt 0 view .LVU1097
 3885 0006 204B     		ldr	r3, .L276+4
 3886 0008 0122     		movs	r2, #1
 3887 000a 1A60     		str	r2, [r3]
 3888 000c 7047     		bx	lr
 3889              	.L270:
3019:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
 3890              		.loc 1 3019 9 is_stmt 1 view .LVU1098
3019:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
 3891              		.loc 1 3019 23 is_stmt 0 view .LVU1099
 3892 000e 1E4B     		ldr	r3, .L276+4
 3893 0010 0022     		movs	r2, #0
 3894 0012 1A60     		str	r2, [r3]
3020:Middlewares/FreeRTOS/tasks.c **** 
 3895              		.loc 1 3020 33 is_stmt 1 view .LVU1100
3051:Middlewares/FreeRTOS/tasks.c **** 
 3896              		.loc 1 3051 39 view .LVU1101
 3897              	.LBB239:
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3898              		.loc 1 3062 9 view .LVU1102
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3899              		.loc 1 3062 9 view .LVU1103
 3900 0014 1D4B     		ldr	r3, .L276+8
 3901 0016 1B68     		ldr	r3, [r3]
 3902              	.LVL272:
 3903              	.LBB240:
 3904              	.LBI240:
 134:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 3905              		.loc 2 134 66 view .LVU1104
 3906              	.LBB241:
 136:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3907              		.loc 2 136 13 view .LVU1105
 138:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3908              		.loc 2 138 13 view .LVU1106
 3909              		.syntax unified
 3910              	@ 138 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3911 0018 B3FA83F3 		clz r3, r3
 3912              	@ 0 "" 2
 3913              	.LVL273:
 138:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3914              		.loc 2 138 13 is_stmt 0 view .LVU1107
 3915              		.thumb
 3916              		.syntax unified
 3917 001c DBB2     		uxtb	r3, r3
 3918              	.LVL274:
 140:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 3919              		.loc 2 140 13 is_stmt 1 view .LVU1108
 140:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 3920              		.loc 2 140 13 is_stmt 0 view .LVU1109
 3921              	.LBE241:
 3922              	.LBE240:
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3923              		.loc 1 3062 9 view .LVU1110
 3924 001e C3F11F03 		rsb	r3, r3, #31
 3925              	.LVL275:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 186


3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3926              		.loc 1 3062 9 is_stmt 1 view .LVU1111
 3927 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3928 0026 8A00     		lsls	r2, r1, #2
 3929 0028 1949     		ldr	r1, .L276+12
 3930 002a 8A58     		ldr	r2, [r1, r2]
 3931 002c 42B9     		cbnz	r2, .L272
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3932              		.loc 1 3062 9 view .LVU1112
 3933              	.LBB242:
 3934              	.LBI242:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3935              		.loc 2 196 34 view .LVU1113
 3936              	.LBB243:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3937              		.loc 2 198 9 view .LVU1114
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3938              		.loc 2 200 9 view .LVU1115
 3939              		.syntax unified
 3940              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3941 002e 4FF01003 			mov r3, #16												
 3942 0032 83F31188 		msr basepri, r3											
 3943 0036 BFF36F8F 		isb														
 3944 003a BFF34F8F 		dsb														
 3945              	
 3946              	@ 0 "" 2
 3947              	.LVL276:
 3948              		.thumb
 3949              		.syntax unified
 3950              	.L273:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3951              		.loc 2 200 9 is_stmt 0 view .LVU1116
 3952              	.LBE243:
 3953              	.LBE242:
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3954              		.loc 1 3062 9 is_stmt 1 discriminator 1 view .LVU1117
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3955              		.loc 1 3062 9 discriminator 1 view .LVU1118
 3956 003e FEE7     		b	.L273
 3957              	.LVL277:
 3958              	.L272:
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3959              		.loc 1 3062 9 discriminator 2 view .LVU1119
 3960              	.LBB244:
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3961              		.loc 1 3062 9 discriminator 2 view .LVU1120
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3962              		.loc 1 3062 9 discriminator 2 view .LVU1121
 3963 0040 1348     		ldr	r0, .L276+12
 3964 0042 03EB8301 		add	r1, r3, r3, lsl #2
 3965 0046 8A00     		lsls	r2, r1, #2
 3966 0048 0244     		add	r2, r2, r0
 3967 004a 5168     		ldr	r1, [r2, #4]
 3968 004c 4968     		ldr	r1, [r1, #4]
 3969 004e 5160     		str	r1, [r2, #4]
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3970              		.loc 1 3062 9 discriminator 2 view .LVU1122
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 187


 3971 0050 03EB830C 		add	ip, r3, r3, lsl #2
 3972 0054 4FEA8C02 		lsl	r2, ip, #2
 3973 0058 0832     		adds	r2, r2, #8
 3974 005a 0244     		add	r2, r2, r0
 3975 005c 9142     		cmp	r1, r2
 3976 005e 09D0     		beq	.L275
 3977              	.L274:
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3978              		.loc 1 3062 9 discriminator 6 view .LVU1123
 3979 0060 03EB8303 		add	r3, r3, r3, lsl #2
 3980              	.LVL278:
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3981              		.loc 1 3062 9 is_stmt 0 discriminator 6 view .LVU1124
 3982 0064 9A00     		lsls	r2, r3, #2
 3983 0066 0A4B     		ldr	r3, .L276+12
 3984 0068 1344     		add	r3, r3, r2
 3985 006a 5B68     		ldr	r3, [r3, #4]
 3986 006c DA68     		ldr	r2, [r3, #12]
 3987 006e 094B     		ldr	r3, .L276+16
 3988 0070 1A60     		str	r2, [r3]
 3989              	.LBE244:
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3990              		.loc 1 3062 9 is_stmt 1 discriminator 6 view .LVU1125
 3991              	.LBE239:
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3992              		.loc 1 3062 43 discriminator 6 view .LVU1126
3063:Middlewares/FreeRTOS/tasks.c **** 
 3993              		.loc 1 3063 32 discriminator 6 view .LVU1127
3080:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3994              		.loc 1 3080 1 is_stmt 0 discriminator 6 view .LVU1128
 3995 0072 7047     		bx	lr
 3996              	.LVL279:
 3997              	.L275:
 3998              	.LBB246:
 3999              	.LBB245:
3062:Middlewares/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4000              		.loc 1 3062 9 is_stmt 1 discriminator 4 view .LVU1129
 4001 0074 4868     		ldr	r0, [r1, #4]
 4002 0076 6246     		mov	r2, ip
 4003 0078 9100     		lsls	r1, r2, #2
 4004 007a 054A     		ldr	r2, .L276+12
 4005 007c 0A44     		add	r2, r2, r1
 4006 007e 5060     		str	r0, [r2, #4]
 4007 0080 EEE7     		b	.L274
 4008              	.L277:
 4009 0082 00BF     		.align	2
 4010              	.L276:
 4011 0084 00000000 		.word	uxSchedulerSuspended
 4012 0088 00000000 		.word	xYieldPending
 4013 008c 00000000 		.word	uxTopReadyPriority
 4014 0090 00000000 		.word	pxReadyTasksLists
 4015 0094 00000000 		.word	pxCurrentTCB
 4016              	.LBE245:
 4017              	.LBE246:
 4018              		.cfi_endproc
 4019              	.LFE29:
 4021              		.section	.text.vTaskSuspend,"ax",%progbits
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 188


 4022              		.align	1
 4023              		.global	vTaskSuspend
 4024              		.syntax unified
 4025              		.thumb
 4026              		.thumb_func
 4028              	vTaskSuspend:
 4029              	.LVL280:
 4030              	.LFB15:
1674:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 4031              		.loc 1 1674 5 view -0
 4032              		.cfi_startproc
 4033              		@ args = 0, pretend = 0, frame = 0
 4034              		@ frame_needed = 0, uses_anonymous_args = 0
1674:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 4035              		.loc 1 1674 5 is_stmt 0 view .LVU1131
 4036 0000 38B5     		push	{r3, r4, r5, lr}
 4037              	.LCFI30:
 4038              		.cfi_def_cfa_offset 16
 4039              		.cfi_offset 3, -16
 4040              		.cfi_offset 4, -12
 4041              		.cfi_offset 5, -8
 4042              		.cfi_offset 14, -4
 4043 0002 0446     		mov	r4, r0
1675:Middlewares/FreeRTOS/tasks.c **** 
 4044              		.loc 1 1675 9 is_stmt 1 view .LVU1132
1677:Middlewares/FreeRTOS/tasks.c ****         {
 4045              		.loc 1 1677 9 view .LVU1133
 4046 0004 FFF7FEFF 		bl	vPortEnterCritical
 4047              	.LVL281:
1681:Middlewares/FreeRTOS/tasks.c **** 
 4048              		.loc 1 1681 13 view .LVU1134
1681:Middlewares/FreeRTOS/tasks.c **** 
 4049              		.loc 1 1681 21 is_stmt 0 view .LVU1135
 4050 0008 54B3     		cbz	r4, .L292
 4051              	.LVL282:
 4052              	.L279:
1683:Middlewares/FreeRTOS/tasks.c **** 
 4053              		.loc 1 1683 39 is_stmt 1 discriminator 4 view .LVU1136
1687:Middlewares/FreeRTOS/tasks.c ****             {
 4054              		.loc 1 1687 13 discriminator 4 view .LVU1137
1687:Middlewares/FreeRTOS/tasks.c ****             {
 4055              		.loc 1 1687 17 is_stmt 0 discriminator 4 view .LVU1138
 4056 000a 251D     		adds	r5, r4, #4
 4057 000c 2846     		mov	r0, r5
 4058 000e FFF7FEFF 		bl	uxListRemove
 4059              	.LVL283:
1687:Middlewares/FreeRTOS/tasks.c ****             {
 4060              		.loc 1 1687 15 discriminator 4 view .LVU1139
 4061 0012 70B9     		cbnz	r0, .L280
1689:Middlewares/FreeRTOS/tasks.c ****             }
 4062              		.loc 1 1689 17 is_stmt 1 view .LVU1140
 4063 0014 E26A     		ldr	r2, [r4, #44]
 4064 0016 02EB8203 		add	r3, r2, r2, lsl #2
 4065 001a 9B00     		lsls	r3, r3, #2
 4066 001c 2F49     		ldr	r1, .L296
 4067 001e CB58     		ldr	r3, [r1, r3]
 4068 0020 3BB9     		cbnz	r3, .L280
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 189


1689:Middlewares/FreeRTOS/tasks.c ****             }
 4069              		.loc 1 1689 17 discriminator 1 view .LVU1141
 4070 0022 0123     		movs	r3, #1
 4071 0024 03FA02F2 		lsl	r2, r3, r2
 4072 0028 2D49     		ldr	r1, .L296+4
 4073 002a 0B68     		ldr	r3, [r1]
 4074 002c 23EA0203 		bic	r3, r3, r2
 4075 0030 0B60     		str	r3, [r1]
 4076              	.L280:
1693:Middlewares/FreeRTOS/tasks.c ****             }
 4077              		.loc 1 1693 41 view .LVU1142
1697:Middlewares/FreeRTOS/tasks.c ****             {
 4078              		.loc 1 1697 13 view .LVU1143
1697:Middlewares/FreeRTOS/tasks.c ****             {
 4079              		.loc 1 1697 17 is_stmt 0 view .LVU1144
 4080 0032 A36A     		ldr	r3, [r4, #40]
1697:Middlewares/FreeRTOS/tasks.c ****             {
 4081              		.loc 1 1697 15 view .LVU1145
 4082 0034 1BB1     		cbz	r3, .L281
1699:Middlewares/FreeRTOS/tasks.c ****             }
 4083              		.loc 1 1699 17 is_stmt 1 view .LVU1146
1699:Middlewares/FreeRTOS/tasks.c ****             }
 4084              		.loc 1 1699 26 is_stmt 0 view .LVU1147
 4085 0036 04F11800 		add	r0, r4, #24
 4086 003a FFF7FEFF 		bl	uxListRemove
 4087              	.LVL284:
 4088              	.L281:
1703:Middlewares/FreeRTOS/tasks.c ****             }
 4089              		.loc 1 1703 41 is_stmt 1 view .LVU1148
1706:Middlewares/FreeRTOS/tasks.c **** 
 4090              		.loc 1 1706 13 view .LVU1149
 4091 003e 2946     		mov	r1, r5
 4092 0040 2848     		ldr	r0, .L296+8
 4093 0042 FFF7FEFF 		bl	vListInsertEnd
 4094              	.LVL285:
 4095              	.LBB247:
1710:Middlewares/FreeRTOS/tasks.c **** 
 4096              		.loc 1 1710 17 view .LVU1150
1712:Middlewares/FreeRTOS/tasks.c ****                 {
 4097              		.loc 1 1712 17 view .LVU1151
1712:Middlewares/FreeRTOS/tasks.c ****                 {
 4098              		.loc 1 1712 24 is_stmt 0 view .LVU1152
 4099 0046 0023     		movs	r3, #0
 4100              	.LVL286:
 4101              	.L282:
1712:Middlewares/FreeRTOS/tasks.c ****                 {
 4102              		.loc 1 1712 31 is_stmt 1 discriminator 1 view .LVU1153
 4103 0048 002B     		cmp	r3, #0
 4104 004a 0CDD     		ble	.L284
 4105              	.LBE247:
1724:Middlewares/FreeRTOS/tasks.c **** 
 4106              		.loc 1 1724 9 view .LVU1154
 4107 004c FFF7FEFF 		bl	vPortExitCritical
 4108              	.LVL287:
1726:Middlewares/FreeRTOS/tasks.c ****         {
 4109              		.loc 1 1726 9 view .LVU1155
1726:Middlewares/FreeRTOS/tasks.c ****         {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 190


 4110              		.loc 1 1726 31 is_stmt 0 view .LVU1156
 4111 0050 254B     		ldr	r3, .L296+12
 4112 0052 1B68     		ldr	r3, [r3]
1726:Middlewares/FreeRTOS/tasks.c ****         {
 4113              		.loc 1 1726 11 view .LVU1157
 4114 0054 A3B9     		cbnz	r3, .L293
 4115              	.L285:
1738:Middlewares/FreeRTOS/tasks.c ****         }
 4116              		.loc 1 1738 37 is_stmt 1 view .LVU1158
1741:Middlewares/FreeRTOS/tasks.c ****         {
 4117              		.loc 1 1741 9 view .LVU1159
1741:Middlewares/FreeRTOS/tasks.c ****         {
 4118              		.loc 1 1741 19 is_stmt 0 view .LVU1160
 4119 0056 254B     		ldr	r3, .L296+16
 4120 0058 1B68     		ldr	r3, [r3]
1741:Middlewares/FreeRTOS/tasks.c ****         {
 4121              		.loc 1 1741 11 view .LVU1161
 4122 005a A342     		cmp	r3, r4
 4123 005c 17D0     		beq	.L294
 4124              	.L278:
1772:Middlewares/FreeRTOS/tasks.c **** 
 4125              		.loc 1 1772 5 view .LVU1162
 4126 005e 38BD     		pop	{r3, r4, r5, pc}
 4127              	.LVL288:
 4128              	.L292:
1681:Middlewares/FreeRTOS/tasks.c **** 
 4129              		.loc 1 1681 21 discriminator 1 view .LVU1163
 4130 0060 224B     		ldr	r3, .L296+16
 4131 0062 1C68     		ldr	r4, [r3]
 4132              	.LVL289:
1681:Middlewares/FreeRTOS/tasks.c **** 
 4133              		.loc 1 1681 21 discriminator 1 view .LVU1164
 4134 0064 D1E7     		b	.L279
 4135              	.LVL290:
 4136              	.L284:
 4137              	.LBB248:
1714:Middlewares/FreeRTOS/tasks.c ****                     {
 4138              		.loc 1 1714 21 is_stmt 1 view .LVU1165
1714:Middlewares/FreeRTOS/tasks.c ****                     {
 4139              		.loc 1 1714 45 is_stmt 0 view .LVU1166
 4140 0066 E218     		adds	r2, r4, r3
 4141 0068 92F85020 		ldrb	r2, [r2, #80]	@ zero_extendqisi2
 4142 006c D2B2     		uxtb	r2, r2
1714:Middlewares/FreeRTOS/tasks.c ****                     {
 4143              		.loc 1 1714 23 view .LVU1167
 4144 006e 012A     		cmp	r2, #1
 4145 0070 01D0     		beq	.L295
 4146              	.L283:
1712:Middlewares/FreeRTOS/tasks.c ****                 {
 4147              		.loc 1 1712 73 is_stmt 1 discriminator 2 view .LVU1168
 4148 0072 0133     		adds	r3, r3, #1
 4149              	.LVL291:
1712:Middlewares/FreeRTOS/tasks.c ****                 {
 4150              		.loc 1 1712 73 is_stmt 0 discriminator 2 view .LVU1169
 4151 0074 E8E7     		b	.L282
 4152              	.L295:
1718:Middlewares/FreeRTOS/tasks.c ****                     }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 191


 4153              		.loc 1 1718 25 is_stmt 1 view .LVU1170
1718:Middlewares/FreeRTOS/tasks.c ****                     }
 4154              		.loc 1 1718 51 is_stmt 0 view .LVU1171
 4155 0076 E218     		adds	r2, r4, r3
 4156 0078 0021     		movs	r1, #0
 4157 007a 82F85010 		strb	r1, [r2, #80]
 4158 007e F8E7     		b	.L283
 4159              	.LVL292:
 4160              	.L293:
1718:Middlewares/FreeRTOS/tasks.c ****                     }
 4161              		.loc 1 1718 51 view .LVU1172
 4162              	.LBE248:
1730:Middlewares/FreeRTOS/tasks.c ****             {
 4163              		.loc 1 1730 13 is_stmt 1 view .LVU1173
 4164 0080 FFF7FEFF 		bl	vPortEnterCritical
 4165              	.LVL293:
1732:Middlewares/FreeRTOS/tasks.c ****             }
 4166              		.loc 1 1732 17 view .LVU1174
 4167 0084 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 4168              	.LVL294:
1734:Middlewares/FreeRTOS/tasks.c ****         }
 4169              		.loc 1 1734 13 view .LVU1175
 4170 0088 FFF7FEFF 		bl	vPortExitCritical
 4171              	.LVL295:
 4172 008c E3E7     		b	.L285
 4173              	.L294:
1743:Middlewares/FreeRTOS/tasks.c ****             {
 4174              		.loc 1 1743 13 view .LVU1176
1743:Middlewares/FreeRTOS/tasks.c ****             {
 4175              		.loc 1 1743 35 is_stmt 0 view .LVU1177
 4176 008e 164B     		ldr	r3, .L296+12
 4177 0090 1B68     		ldr	r3, [r3]
1743:Middlewares/FreeRTOS/tasks.c ****             {
 4178              		.loc 1 1743 15 view .LVU1178
 4179 0092 B3B1     		cbz	r3, .L287
1746:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4180              		.loc 1 1746 17 is_stmt 1 view .LVU1179
 4181 0094 164B     		ldr	r3, .L296+20
 4182 0096 1B68     		ldr	r3, [r3]
 4183 0098 43B1     		cbz	r3, .L288
1746:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4184              		.loc 1 1746 17 view .LVU1180
 4185              	.LBB249:
 4186              	.LBI249:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4187              		.loc 2 196 34 view .LVU1181
 4188              	.LBB250:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4189              		.loc 2 198 9 view .LVU1182
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4190              		.loc 2 200 9 view .LVU1183
 4191              		.syntax unified
 4192              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4193 009a 4FF01003 			mov r3, #16												
 4194 009e 83F31188 		msr basepri, r3											
 4195 00a2 BFF36F8F 		isb														
 4196 00a6 BFF34F8F 		dsb														
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 192


 4197              	
 4198              	@ 0 "" 2
 4199              	.LVL296:
 4200              		.thumb
 4201              		.syntax unified
 4202              	.L289:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4203              		.loc 2 200 9 is_stmt 0 view .LVU1184
 4204              	.LBE250:
 4205              	.LBE249:
1746:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4206              		.loc 1 1746 17 is_stmt 1 discriminator 1 view .LVU1185
1746:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4207              		.loc 1 1746 17 discriminator 1 view .LVU1186
 4208 00aa FEE7     		b	.L289
 4209              	.L288:
1746:Middlewares/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4210              		.loc 1 1746 58 discriminator 2 view .LVU1187
1747:Middlewares/FreeRTOS/tasks.c ****             }
 4211              		.loc 1 1747 17 discriminator 2 view .LVU1188
 4212 00ac 4FF0E023 		mov	r3, #-536813568
 4213 00b0 4FF08052 		mov	r2, #268435456
 4214 00b4 C3F8042D 		str	r2, [r3, #3332]
1747:Middlewares/FreeRTOS/tasks.c ****             }
 4215              		.loc 1 1747 17 discriminator 2 view .LVU1189
 4216              		.syntax unified
 4217              	@ 1747 "Middlewares/FreeRTOS/tasks.c" 1
 4218 00b8 BFF34F8F 		dsb
 4219              	@ 0 "" 2
1747:Middlewares/FreeRTOS/tasks.c ****             }
 4220              		.loc 1 1747 17 discriminator 2 view .LVU1190
 4221              	@ 1747 "Middlewares/FreeRTOS/tasks.c" 1
 4222 00bc BFF36F8F 		isb
 4223              	@ 0 "" 2
1747:Middlewares/FreeRTOS/tasks.c ****             }
 4224              		.loc 1 1747 39 discriminator 2 view .LVU1191
 4225              		.thumb
 4226              		.syntax unified
 4227 00c0 CDE7     		b	.L278
 4228              	.L287:
1754:Middlewares/FreeRTOS/tasks.c ****                 {
 4229              		.loc 1 1754 17 view .LVU1192
1754:Middlewares/FreeRTOS/tasks.c ****                 {
 4230              		.loc 1 1754 21 is_stmt 0 view .LVU1193
 4231 00c2 084B     		ldr	r3, .L296+8
 4232 00c4 1A68     		ldr	r2, [r3]
1754:Middlewares/FreeRTOS/tasks.c ****                 {
 4233              		.loc 1 1754 68 view .LVU1194
 4234 00c6 0B4B     		ldr	r3, .L296+24
 4235 00c8 1B68     		ldr	r3, [r3]
1754:Middlewares/FreeRTOS/tasks.c ****                 {
 4236              		.loc 1 1754 19 view .LVU1195
 4237 00ca 9A42     		cmp	r2, r3
 4238 00cc 03D1     		bne	.L290
1760:Middlewares/FreeRTOS/tasks.c ****                 }
 4239              		.loc 1 1760 21 is_stmt 1 view .LVU1196
1760:Middlewares/FreeRTOS/tasks.c ****                 }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 193


 4240              		.loc 1 1760 34 is_stmt 0 view .LVU1197
 4241 00ce 074B     		ldr	r3, .L296+16
 4242 00d0 0022     		movs	r2, #0
 4243 00d2 1A60     		str	r2, [r3]
 4244 00d4 C3E7     		b	.L278
 4245              	.L290:
1764:Middlewares/FreeRTOS/tasks.c ****                 }
 4246              		.loc 1 1764 21 is_stmt 1 view .LVU1198
 4247 00d6 FFF7FEFF 		bl	vTaskSwitchContext
 4248              	.LVL297:
1770:Middlewares/FreeRTOS/tasks.c ****         }
 4249              		.loc 1 1770 37 view .LVU1199
1772:Middlewares/FreeRTOS/tasks.c **** 
 4250              		.loc 1 1772 5 is_stmt 0 view .LVU1200
 4251 00da C0E7     		b	.L278
 4252              	.L297:
 4253              		.align	2
 4254              	.L296:
 4255 00dc 00000000 		.word	pxReadyTasksLists
 4256 00e0 00000000 		.word	uxTopReadyPriority
 4257 00e4 00000000 		.word	xSuspendedTaskList
 4258 00e8 00000000 		.word	xSchedulerRunning
 4259 00ec 00000000 		.word	pxCurrentTCB
 4260 00f0 00000000 		.word	uxSchedulerSuspended
 4261 00f4 00000000 		.word	uxCurrentNumberOfTasks
 4262              		.cfi_endproc
 4263              	.LFE15:
 4265              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 4266              		.align	1
 4267              		.global	vTaskPlaceOnEventList
 4268              		.syntax unified
 4269              		.thumb
 4270              		.thumb_func
 4272              	vTaskPlaceOnEventList:
 4273              	.LVL298:
 4274              	.LFB30:
3085:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4275              		.loc 1 3085 1 is_stmt 1 view -0
 4276              		.cfi_startproc
 4277              		@ args = 0, pretend = 0, frame = 0
 4278              		@ frame_needed = 0, uses_anonymous_args = 0
3086:Middlewares/FreeRTOS/tasks.c **** 
 4279              		.loc 1 3086 5 view .LVU1202
 4280 0000 58B1     		cbz	r0, .L303
3085:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4281              		.loc 1 3085 1 is_stmt 0 discriminator 2 view .LVU1203
 4282 0002 10B5     		push	{r4, lr}
 4283              	.LCFI31:
 4284              		.cfi_def_cfa_offset 8
 4285              		.cfi_offset 4, -8
 4286              		.cfi_offset 14, -4
 4287 0004 0C46     		mov	r4, r1
3086:Middlewares/FreeRTOS/tasks.c **** 
 4288              		.loc 1 3086 32 is_stmt 1 discriminator 2 view .LVU1204
3102:Middlewares/FreeRTOS/tasks.c **** 
 4289              		.loc 1 3102 5 discriminator 2 view .LVU1205
3102:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 194


 4290              		.loc 1 3102 46 is_stmt 0 discriminator 2 view .LVU1206
 4291 0006 094A     		ldr	r2, .L304
 4292 0008 1168     		ldr	r1, [r2]
 4293              	.LVL299:
3102:Middlewares/FreeRTOS/tasks.c **** 
 4294              		.loc 1 3102 5 discriminator 2 view .LVU1207
 4295 000a 1831     		adds	r1, r1, #24
 4296 000c FFF7FEFF 		bl	vListInsert
 4297              	.LVL300:
3104:Middlewares/FreeRTOS/tasks.c **** }
 4298              		.loc 1 3104 5 is_stmt 1 discriminator 2 view .LVU1208
 4299 0010 0121     		movs	r1, #1
 4300 0012 2046     		mov	r0, r4
 4301 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4302              	.LVL301:
3105:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4303              		.loc 1 3105 1 is_stmt 0 discriminator 2 view .LVU1209
 4304 0018 10BD     		pop	{r4, pc}
 4305              	.LVL302:
 4306              	.L303:
 4307              	.LCFI32:
 4308              		.cfi_def_cfa_offset 0
 4309              		.cfi_restore 4
 4310              		.cfi_restore 14
3086:Middlewares/FreeRTOS/tasks.c **** 
 4311              		.loc 1 3086 5 is_stmt 1 view .LVU1210
 4312              	.LBB251:
 4313              	.LBI251:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4314              		.loc 2 196 34 view .LVU1211
 4315              	.LBB252:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4316              		.loc 2 198 9 view .LVU1212
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4317              		.loc 2 200 9 view .LVU1213
 4318              		.syntax unified
 4319              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4320 001a 4FF01003 			mov r3, #16												
 4321 001e 83F31188 		msr basepri, r3											
 4322 0022 BFF36F8F 		isb														
 4323 0026 BFF34F8F 		dsb														
 4324              	
 4325              	@ 0 "" 2
 4326              	.LVL303:
 4327              		.thumb
 4328              		.syntax unified
 4329              	.L300:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4330              		.loc 2 200 9 is_stmt 0 view .LVU1214
 4331              	.LBE252:
 4332              	.LBE251:
3086:Middlewares/FreeRTOS/tasks.c **** 
 4333              		.loc 1 3086 5 is_stmt 1 discriminator 1 view .LVU1215
3086:Middlewares/FreeRTOS/tasks.c **** 
 4334              		.loc 1 3086 5 discriminator 1 view .LVU1216
 4335 002a FEE7     		b	.L300
 4336              	.L305:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 195


 4337              		.align	2
 4338              	.L304:
 4339 002c 00000000 		.word	pxCurrentTCB
 4340              		.cfi_endproc
 4341              	.LFE30:
 4343              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 4344              		.align	1
 4345              		.global	vTaskPlaceOnUnorderedEventList
 4346              		.syntax unified
 4347              		.thumb
 4348              		.thumb_func
 4350              	vTaskPlaceOnUnorderedEventList:
 4351              	.LVL304:
 4352              	.LFB31:
3111:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4353              		.loc 1 3111 1 view -0
 4354              		.cfi_startproc
 4355              		@ args = 0, pretend = 0, frame = 0
 4356              		@ frame_needed = 0, uses_anonymous_args = 0
3111:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4357              		.loc 1 3111 1 is_stmt 0 view .LVU1218
 4358 0000 38B5     		push	{r3, r4, r5, lr}
 4359              	.LCFI33:
 4360              		.cfi_def_cfa_offset 16
 4361              		.cfi_offset 3, -16
 4362              		.cfi_offset 4, -12
 4363              		.cfi_offset 5, -8
 4364              		.cfi_offset 14, -4
3112:Middlewares/FreeRTOS/tasks.c **** 
 4365              		.loc 1 3112 5 is_stmt 1 view .LVU1219
 4366 0002 60B1     		cbz	r0, .L312
 4367 0004 0346     		mov	r3, r0
3112:Middlewares/FreeRTOS/tasks.c **** 
 4368              		.loc 1 3112 32 discriminator 2 view .LVU1220
3116:Middlewares/FreeRTOS/tasks.c **** 
 4369              		.loc 1 3116 5 discriminator 2 view .LVU1221
 4370 0006 1848     		ldr	r0, .L313
 4371              	.LVL305:
3116:Middlewares/FreeRTOS/tasks.c **** 
 4372              		.loc 1 3116 5 is_stmt 0 discriminator 2 view .LVU1222
 4373 0008 0068     		ldr	r0, [r0]
 4374 000a 88B9     		cbnz	r0, .L309
3116:Middlewares/FreeRTOS/tasks.c **** 
 4375              		.loc 1 3116 5 is_stmt 1 view .LVU1223
 4376              	.LBB253:
 4377              	.LBI253:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4378              		.loc 2 196 34 view .LVU1224
 4379              	.LBB254:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4380              		.loc 2 198 9 view .LVU1225
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4381              		.loc 2 200 9 view .LVU1226
 4382              		.syntax unified
 4383              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4384 000c 4FF01003 			mov r3, #16												
 4385 0010 83F31188 		msr basepri, r3											
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 196


 4386 0014 BFF36F8F 		isb														
 4387 0018 BFF34F8F 		dsb														
 4388              	
 4389              	@ 0 "" 2
 4390              	.LVL306:
 4391              		.thumb
 4392              		.syntax unified
 4393              	.L310:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4394              		.loc 2 200 9 is_stmt 0 view .LVU1227
 4395              	.LBE254:
 4396              	.LBE253:
3116:Middlewares/FreeRTOS/tasks.c **** 
 4397              		.loc 1 3116 5 is_stmt 1 discriminator 2 view .LVU1228
3116:Middlewares/FreeRTOS/tasks.c **** 
 4398              		.loc 1 3116 5 discriminator 2 view .LVU1229
 4399 001c FEE7     		b	.L310
 4400              	.LVL307:
 4401              	.L312:
3112:Middlewares/FreeRTOS/tasks.c **** 
 4402              		.loc 1 3112 5 view .LVU1230
 4403              	.LBB255:
 4404              	.LBI255:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4405              		.loc 2 196 34 view .LVU1231
 4406              	.LBB256:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4407              		.loc 2 198 9 view .LVU1232
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4408              		.loc 2 200 9 view .LVU1233
 4409              		.syntax unified
 4410              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4411 001e 4FF01003 			mov r3, #16												
 4412 0022 83F31188 		msr basepri, r3											
 4413 0026 BFF36F8F 		isb														
 4414 002a BFF34F8F 		dsb														
 4415              	
 4416              	@ 0 "" 2
 4417              	.LVL308:
 4418              		.thumb
 4419              		.syntax unified
 4420              	.L308:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4421              		.loc 2 200 9 is_stmt 0 view .LVU1234
 4422              	.LBE256:
 4423              	.LBE255:
3112:Middlewares/FreeRTOS/tasks.c **** 
 4424              		.loc 1 3112 5 is_stmt 1 discriminator 1 view .LVU1235
3112:Middlewares/FreeRTOS/tasks.c **** 
 4425              		.loc 1 3112 5 discriminator 1 view .LVU1236
 4426 002e FEE7     		b	.L308
 4427              	.LVL309:
 4428              	.L309:
3116:Middlewares/FreeRTOS/tasks.c **** 
 4429              		.loc 1 3116 46 discriminator 2 view .LVU1237
3121:Middlewares/FreeRTOS/tasks.c **** 
 4430              		.loc 1 3121 5 discriminator 2 view .LVU1238
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 197


 4431 0030 0E48     		ldr	r0, .L313+4
 4432 0032 0468     		ldr	r4, [r0]
 4433 0034 41F00041 		orr	r1, r1, #-2147483648
 4434              	.LVL310:
3121:Middlewares/FreeRTOS/tasks.c **** 
 4435              		.loc 1 3121 5 is_stmt 0 discriminator 2 view .LVU1239
 4436 0038 A161     		str	r1, [r4, #24]
 4437              	.LBB257:
3128:Middlewares/FreeRTOS/tasks.c **** 
 4438              		.loc 1 3128 5 is_stmt 1 discriminator 2 view .LVU1240
 4439 003a 5968     		ldr	r1, [r3, #4]
 4440              	.LVL311:
3128:Middlewares/FreeRTOS/tasks.c **** 
 4441              		.loc 1 3128 5 discriminator 2 view .LVU1241
3128:Middlewares/FreeRTOS/tasks.c **** 
 4442              		.loc 1 3128 5 discriminator 2 view .LVU1242
3128:Middlewares/FreeRTOS/tasks.c **** 
 4443              		.loc 1 3128 5 discriminator 2 view .LVU1243
 4444 003c 0468     		ldr	r4, [r0]
 4445 003e E161     		str	r1, [r4, #28]
3128:Middlewares/FreeRTOS/tasks.c **** 
 4446              		.loc 1 3128 5 discriminator 2 view .LVU1244
 4447 0040 0568     		ldr	r5, [r0]
 4448 0042 8C68     		ldr	r4, [r1, #8]
 4449 0044 2C62     		str	r4, [r5, #32]
3128:Middlewares/FreeRTOS/tasks.c **** 
 4450              		.loc 1 3128 5 discriminator 2 view .LVU1245
 4451 0046 0568     		ldr	r5, [r0]
 4452 0048 1835     		adds	r5, r5, #24
 4453 004a 6560     		str	r5, [r4, #4]
3128:Middlewares/FreeRTOS/tasks.c **** 
 4454              		.loc 1 3128 5 discriminator 2 view .LVU1246
 4455 004c 0468     		ldr	r4, [r0]
 4456 004e 1834     		adds	r4, r4, #24
 4457 0050 8C60     		str	r4, [r1, #8]
3128:Middlewares/FreeRTOS/tasks.c **** 
 4458              		.loc 1 3128 5 discriminator 2 view .LVU1247
 4459 0052 0168     		ldr	r1, [r0]
 4460              	.LVL312:
3128:Middlewares/FreeRTOS/tasks.c **** 
 4461              		.loc 1 3128 5 is_stmt 0 discriminator 2 view .LVU1248
 4462 0054 8B62     		str	r3, [r1, #40]
3128:Middlewares/FreeRTOS/tasks.c **** 
 4463              		.loc 1 3128 5 is_stmt 1 discriminator 2 view .LVU1249
 4464 0056 1968     		ldr	r1, [r3]
 4465 0058 0131     		adds	r1, r1, #1
 4466 005a 1960     		str	r1, [r3]
 4467              	.LBE257:
3128:Middlewares/FreeRTOS/tasks.c **** 
 4468              		.loc 1 3128 69 discriminator 2 view .LVU1250
3130:Middlewares/FreeRTOS/tasks.c **** }
 4469              		.loc 1 3130 5 discriminator 2 view .LVU1251
 4470 005c 0121     		movs	r1, #1
 4471 005e 1046     		mov	r0, r2
 4472 0060 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4473              	.LVL313:
3131:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 198


 4474              		.loc 1 3131 1 is_stmt 0 discriminator 2 view .LVU1252
 4475 0064 38BD     		pop	{r3, r4, r5, pc}
 4476              	.L314:
 4477 0066 00BF     		.align	2
 4478              	.L313:
 4479 0068 00000000 		.word	uxSchedulerSuspended
 4480 006c 00000000 		.word	pxCurrentTCB
 4481              		.cfi_endproc
 4482              	.LFE31:
 4484              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 4485              		.align	1
 4486              		.global	xTaskRemoveFromEventList
 4487              		.syntax unified
 4488              		.thumb
 4489              		.thumb_func
 4491              	xTaskRemoveFromEventList:
 4492              	.LVL314:
 4493              	.LFB32:
3170:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4494              		.loc 1 3170 1 is_stmt 1 view -0
 4495              		.cfi_startproc
 4496              		@ args = 0, pretend = 0, frame = 0
 4497              		@ frame_needed = 0, uses_anonymous_args = 0
 4498              		@ link register save eliminated.
3171:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 4499              		.loc 1 3171 5 view .LVU1254
3172:Middlewares/FreeRTOS/tasks.c **** 
 4500              		.loc 1 3172 5 view .LVU1255
3187:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4501              		.loc 1 3187 5 view .LVU1256
3187:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4502              		.loc 1 3187 22 is_stmt 0 view .LVU1257
 4503 0000 C368     		ldr	r3, [r0, #12]
3187:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4504              		.loc 1 3187 20 view .LVU1258
 4505 0002 DB68     		ldr	r3, [r3, #12]
 4506              	.LVL315:
3188:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4507              		.loc 1 3188 5 is_stmt 1 view .LVU1259
 4508 0004 002B     		cmp	r3, #0
 4509 0006 4AD0     		beq	.L326
3170:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4510              		.loc 1 3170 1 is_stmt 0 discriminator 2 view .LVU1260
 4511 0008 30B4     		push	{r4, r5}
 4512              	.LCFI34:
 4513              		.cfi_def_cfa_offset 8
 4514              		.cfi_offset 4, -8
 4515              		.cfi_offset 5, -4
3188:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4516              		.loc 1 3188 35 is_stmt 1 discriminator 2 view .LVU1261
 4517              	.LBB258:
3189:Middlewares/FreeRTOS/tasks.c **** 
 4518              		.loc 1 3189 5 discriminator 2 view .LVU1262
 4519 000a 9A6A     		ldr	r2, [r3, #40]
 4520              	.LVL316:
3189:Middlewares/FreeRTOS/tasks.c **** 
 4521              		.loc 1 3189 5 discriminator 2 view .LVU1263
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 199


 4522 000c D869     		ldr	r0, [r3, #28]
 4523              	.LVL317:
3189:Middlewares/FreeRTOS/tasks.c **** 
 4524              		.loc 1 3189 5 is_stmt 0 discriminator 2 view .LVU1264
 4525 000e 196A     		ldr	r1, [r3, #32]
 4526 0010 8160     		str	r1, [r0, #8]
3189:Middlewares/FreeRTOS/tasks.c **** 
 4527              		.loc 1 3189 5 is_stmt 1 discriminator 2 view .LVU1265
 4528 0012 D869     		ldr	r0, [r3, #28]
 4529 0014 4860     		str	r0, [r1, #4]
3189:Middlewares/FreeRTOS/tasks.c **** 
 4530              		.loc 1 3189 5 discriminator 2 view .LVU1266
 4531 0016 5168     		ldr	r1, [r2, #4]
 4532 0018 03F11800 		add	r0, r3, #24
 4533 001c 8142     		cmp	r1, r0
 4534 001e 47D0     		beq	.L327
 4535              	.L318:
3189:Middlewares/FreeRTOS/tasks.c **** 
 4536              		.loc 1 3189 5 discriminator 3 view .LVU1267
 4537 0020 0021     		movs	r1, #0
 4538 0022 9962     		str	r1, [r3, #40]
3189:Middlewares/FreeRTOS/tasks.c **** 
 4539              		.loc 1 3189 5 discriminator 3 view .LVU1268
 4540 0024 1168     		ldr	r1, [r2]
 4541 0026 0139     		subs	r1, r1, #1
 4542 0028 1160     		str	r1, [r2]
 4543              	.LBE258:
3189:Middlewares/FreeRTOS/tasks.c **** 
 4544              		.loc 1 3189 59 discriminator 3 view .LVU1269
3191:Middlewares/FreeRTOS/tasks.c ****     {
 4545              		.loc 1 3191 5 discriminator 3 view .LVU1270
3191:Middlewares/FreeRTOS/tasks.c ****     {
 4546              		.loc 1 3191 30 is_stmt 0 discriminator 3 view .LVU1271
 4547 002a 2B4A     		ldr	r2, .L329
 4548              	.LVL318:
3191:Middlewares/FreeRTOS/tasks.c ****     {
 4549              		.loc 1 3191 30 discriminator 3 view .LVU1272
 4550 002c 1268     		ldr	r2, [r2]
3191:Middlewares/FreeRTOS/tasks.c ****     {
 4551              		.loc 1 3191 7 discriminator 3 view .LVU1273
 4552 002e 002A     		cmp	r2, #0
 4553 0030 44D1     		bne	.L319
 4554              	.LBB259:
3193:Middlewares/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4555              		.loc 1 3193 9 is_stmt 1 view .LVU1274
 4556 0032 5A69     		ldr	r2, [r3, #20]
 4557              	.LVL319:
3193:Middlewares/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4558              		.loc 1 3193 9 view .LVU1275
 4559 0034 9868     		ldr	r0, [r3, #8]
 4560 0036 D968     		ldr	r1, [r3, #12]
 4561 0038 8160     		str	r1, [r0, #8]
3193:Middlewares/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4562              		.loc 1 3193 9 view .LVU1276
 4563 003a 9868     		ldr	r0, [r3, #8]
 4564 003c 4860     		str	r0, [r1, #4]
3193:Middlewares/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 200


 4565              		.loc 1 3193 9 view .LVU1277
 4566 003e 5168     		ldr	r1, [r2, #4]
 4567 0040 181D     		adds	r0, r3, #4
 4568 0042 8142     		cmp	r1, r0
 4569 0044 37D0     		beq	.L328
 4570              	.L320:
3193:Middlewares/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4571              		.loc 1 3193 9 discriminator 3 view .LVU1278
 4572 0046 0021     		movs	r1, #0
 4573 0048 5961     		str	r1, [r3, #20]
3193:Middlewares/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4574              		.loc 1 3193 9 discriminator 3 view .LVU1279
 4575 004a 1168     		ldr	r1, [r2]
 4576 004c 0139     		subs	r1, r1, #1
 4577 004e 1160     		str	r1, [r2]
 4578              	.LBE259:
3193:Middlewares/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4579              		.loc 1 3193 63 discriminator 3 view .LVU1280
3194:Middlewares/FreeRTOS/tasks.c **** 
 4580              		.loc 1 3194 9 discriminator 3 view .LVU1281
3194:Middlewares/FreeRTOS/tasks.c **** 
 4581              		.loc 1 3194 9 discriminator 3 view .LVU1282
 4582 0050 DA6A     		ldr	r2, [r3, #44]
 4583              	.LVL320:
3194:Middlewares/FreeRTOS/tasks.c **** 
 4584              		.loc 1 3194 9 is_stmt 0 discriminator 3 view .LVU1283
 4585 0052 0121     		movs	r1, #1
 4586 0054 9140     		lsls	r1, r1, r2
 4587 0056 214C     		ldr	r4, .L329+4
 4588 0058 2568     		ldr	r5, [r4]
 4589 005a 2943     		orrs	r1, r1, r5
 4590 005c 2160     		str	r1, [r4]
 4591              	.LBB260:
3194:Middlewares/FreeRTOS/tasks.c **** 
 4592              		.loc 1 3194 9 is_stmt 1 discriminator 3 view .LVU1284
 4593 005e 2049     		ldr	r1, .L329+8
 4594 0060 02EB8202 		add	r2, r2, r2, lsl #2
 4595 0064 01EB8202 		add	r2, r1, r2, lsl #2
 4596 0068 5268     		ldr	r2, [r2, #4]
 4597              	.LVL321:
3194:Middlewares/FreeRTOS/tasks.c **** 
 4598              		.loc 1 3194 9 discriminator 3 view .LVU1285
3194:Middlewares/FreeRTOS/tasks.c **** 
 4599              		.loc 1 3194 9 discriminator 3 view .LVU1286
3194:Middlewares/FreeRTOS/tasks.c **** 
 4600              		.loc 1 3194 9 discriminator 3 view .LVU1287
 4601 006a 9A60     		str	r2, [r3, #8]
3194:Middlewares/FreeRTOS/tasks.c **** 
 4602              		.loc 1 3194 9 discriminator 3 view .LVU1288
 4603 006c 9468     		ldr	r4, [r2, #8]
 4604 006e DC60     		str	r4, [r3, #12]
3194:Middlewares/FreeRTOS/tasks.c **** 
 4605              		.loc 1 3194 9 discriminator 3 view .LVU1289
 4606 0070 6060     		str	r0, [r4, #4]
3194:Middlewares/FreeRTOS/tasks.c **** 
 4607              		.loc 1 3194 9 discriminator 3 view .LVU1290
 4608 0072 9060     		str	r0, [r2, #8]
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 201


3194:Middlewares/FreeRTOS/tasks.c **** 
 4609              		.loc 1 3194 9 discriminator 3 view .LVU1291
 4610 0074 DA6A     		ldr	r2, [r3, #44]
 4611              	.LVL322:
3194:Middlewares/FreeRTOS/tasks.c **** 
 4612              		.loc 1 3194 9 is_stmt 0 discriminator 3 view .LVU1292
 4613 0076 02EB8200 		add	r0, r2, r2, lsl #2
 4614 007a 8400     		lsls	r4, r0, #2
 4615 007c 01EB8000 		add	r0, r1, r0, lsl #2
 4616 0080 5861     		str	r0, [r3, #20]
3194:Middlewares/FreeRTOS/tasks.c **** 
 4617              		.loc 1 3194 9 is_stmt 1 discriminator 3 view .LVU1293
 4618 0082 0859     		ldr	r0, [r1, r4]
 4619 0084 0130     		adds	r0, r0, #1
 4620 0086 0851     		str	r0, [r1, r4]
 4621              	.LBE260:
3194:Middlewares/FreeRTOS/tasks.c **** 
 4622              		.loc 1 3194 9 discriminator 3 view .LVU1294
3194:Middlewares/FreeRTOS/tasks.c **** 
 4623              		.loc 1 3194 48 discriminator 3 view .LVU1295
 4624              	.LVL323:
 4625              	.L321:
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4626              		.loc 1 3214 86 discriminator 1 view .LVU1296
3217:Middlewares/FreeRTOS/tasks.c ****     {
 4627              		.loc 1 3217 5 discriminator 1 view .LVU1297
3217:Middlewares/FreeRTOS/tasks.c ****     {
 4628              		.loc 1 3217 23 is_stmt 0 discriminator 1 view .LVU1298
 4629 0088 DA6A     		ldr	r2, [r3, #44]
3217:Middlewares/FreeRTOS/tasks.c ****     {
 4630              		.loc 1 3217 50 discriminator 1 view .LVU1299
 4631 008a 164B     		ldr	r3, .L329+12
 4632              	.LVL324:
3217:Middlewares/FreeRTOS/tasks.c ****     {
 4633              		.loc 1 3217 50 discriminator 1 view .LVU1300
 4634 008c 1B68     		ldr	r3, [r3]
 4635 008e DB6A     		ldr	r3, [r3, #44]
3217:Middlewares/FreeRTOS/tasks.c ****     {
 4636              		.loc 1 3217 7 discriminator 1 view .LVU1301
 4637 0090 9A42     		cmp	r2, r3
 4638 0092 1FD9     		bls	.L323
3222:Middlewares/FreeRTOS/tasks.c **** 
 4639              		.loc 1 3222 9 is_stmt 1 view .LVU1302
 4640              	.LVL325:
3226:Middlewares/FreeRTOS/tasks.c ****     }
 4641              		.loc 1 3226 9 view .LVU1303
3226:Middlewares/FreeRTOS/tasks.c ****     }
 4642              		.loc 1 3226 23 is_stmt 0 view .LVU1304
 4643 0094 0120     		movs	r0, #1
 4644 0096 144B     		ldr	r3, .L329+16
 4645 0098 1860     		str	r0, [r3]
 4646              	.LVL326:
 4647              	.L315:
3234:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4648              		.loc 1 3234 1 view .LVU1305
 4649 009a 30BC     		pop	{r4, r5}
 4650              	.LCFI35:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 202


 4651              		.cfi_restore 5
 4652              		.cfi_restore 4
 4653              		.cfi_def_cfa_offset 0
 4654 009c 7047     		bx	lr
 4655              	.LVL327:
 4656              	.L326:
3188:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4657              		.loc 1 3188 5 is_stmt 1 view .LVU1306
 4658              	.LBB261:
 4659              	.LBI261:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4660              		.loc 2 196 34 view .LVU1307
 4661              	.LBB262:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4662              		.loc 2 198 9 view .LVU1308
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4663              		.loc 2 200 9 view .LVU1309
 4664              		.syntax unified
 4665              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4666 009e 4FF01003 			mov r3, #16												
 4667 00a2 83F31188 		msr basepri, r3											
 4668 00a6 BFF36F8F 		isb														
 4669 00aa BFF34F8F 		dsb														
 4670              	
 4671              	@ 0 "" 2
 4672              	.LVL328:
 4673              		.thumb
 4674              		.syntax unified
 4675              	.L317:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4676              		.loc 2 200 9 is_stmt 0 view .LVU1310
 4677              	.LBE262:
 4678              	.LBE261:
3188:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4679              		.loc 1 3188 5 is_stmt 1 discriminator 1 view .LVU1311
3188:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4680              		.loc 1 3188 5 discriminator 1 view .LVU1312
 4681 00ae FEE7     		b	.L317
 4682              	.LVL329:
 4683              	.L327:
 4684              	.LCFI36:
 4685              		.cfi_def_cfa_offset 8
 4686              		.cfi_offset 4, -8
 4687              		.cfi_offset 5, -4
 4688              	.LBB263:
3189:Middlewares/FreeRTOS/tasks.c **** 
 4689              		.loc 1 3189 5 discriminator 1 view .LVU1313
 4690 00b0 196A     		ldr	r1, [r3, #32]
 4691 00b2 5160     		str	r1, [r2, #4]
 4692 00b4 B4E7     		b	.L318
 4693              	.LVL330:
 4694              	.L328:
3189:Middlewares/FreeRTOS/tasks.c **** 
 4695              		.loc 1 3189 5 is_stmt 0 discriminator 1 view .LVU1314
 4696              	.LBE263:
 4697              	.LBB264:
3193:Middlewares/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 203


 4698              		.loc 1 3193 9 is_stmt 1 discriminator 1 view .LVU1315
 4699 00b6 D968     		ldr	r1, [r3, #12]
 4700 00b8 5160     		str	r1, [r2, #4]
 4701 00ba C4E7     		b	.L320
 4702              	.LVL331:
 4703              	.L319:
3193:Middlewares/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4704              		.loc 1 3193 9 is_stmt 0 discriminator 1 view .LVU1316
 4705              	.LBE264:
 4706              	.LBB265:
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4707              		.loc 1 3214 9 is_stmt 1 view .LVU1317
 4708 00bc 0B4A     		ldr	r2, .L329+20
 4709 00be 5168     		ldr	r1, [r2, #4]
 4710              	.LVL332:
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4711              		.loc 1 3214 9 view .LVU1318
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4712              		.loc 1 3214 9 view .LVU1319
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4713              		.loc 1 3214 9 view .LVU1320
 4714 00c0 D961     		str	r1, [r3, #28]
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4715              		.loc 1 3214 9 view .LVU1321
 4716 00c2 8C68     		ldr	r4, [r1, #8]
 4717 00c4 1C62     		str	r4, [r3, #32]
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4718              		.loc 1 3214 9 view .LVU1322
 4719 00c6 6060     		str	r0, [r4, #4]
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4720              		.loc 1 3214 9 view .LVU1323
 4721 00c8 8860     		str	r0, [r1, #8]
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4722              		.loc 1 3214 9 view .LVU1324
 4723 00ca 9A62     		str	r2, [r3, #40]
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4724              		.loc 1 3214 9 view .LVU1325
 4725 00cc 1168     		ldr	r1, [r2]
 4726              	.LVL333:
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4727              		.loc 1 3214 9 is_stmt 0 view .LVU1326
 4728 00ce 0131     		adds	r1, r1, #1
 4729 00d0 1160     		str	r1, [r2]
 4730 00d2 D9E7     		b	.L321
 4731              	.LVL334:
 4732              	.L323:
3214:Middlewares/FreeRTOS/tasks.c ****     }
 4733              		.loc 1 3214 9 view .LVU1327
 4734              	.LBE265:
3230:Middlewares/FreeRTOS/tasks.c ****     }
 4735              		.loc 1 3230 17 view .LVU1328
 4736 00d4 0020     		movs	r0, #0
 4737              	.LVL335:
3233:Middlewares/FreeRTOS/tasks.c **** }
 4738              		.loc 1 3233 5 is_stmt 1 view .LVU1329
3233:Middlewares/FreeRTOS/tasks.c **** }
 4739              		.loc 1 3233 12 is_stmt 0 view .LVU1330
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 204


 4740 00d6 E0E7     		b	.L315
 4741              	.L330:
 4742              		.align	2
 4743              	.L329:
 4744 00d8 00000000 		.word	uxSchedulerSuspended
 4745 00dc 00000000 		.word	uxTopReadyPriority
 4746 00e0 00000000 		.word	pxReadyTasksLists
 4747 00e4 00000000 		.word	pxCurrentTCB
 4748 00e8 00000000 		.word	xYieldPending
 4749 00ec 00000000 		.word	xPendingReadyList
 4750              		.cfi_endproc
 4751              	.LFE32:
 4753              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 4754              		.align	1
 4755              		.global	vTaskRemoveFromUnorderedEventList
 4756              		.syntax unified
 4757              		.thumb
 4758              		.thumb_func
 4760              	vTaskRemoveFromUnorderedEventList:
 4761              	.LVL336:
 4762              	.LFB33:
3239:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4763              		.loc 1 3239 1 is_stmt 1 view -0
 4764              		.cfi_startproc
 4765              		@ args = 0, pretend = 0, frame = 0
 4766              		@ frame_needed = 0, uses_anonymous_args = 0
 4767              		@ link register save eliminated.
3240:Middlewares/FreeRTOS/tasks.c **** 
 4768              		.loc 1 3240 5 view .LVU1332
3244:Middlewares/FreeRTOS/tasks.c **** 
 4769              		.loc 1 3244 5 view .LVU1333
 4770 0000 324B     		ldr	r3, .L344
 4771 0002 1B68     		ldr	r3, [r3]
 4772 0004 43B9     		cbnz	r3, .L332
3244:Middlewares/FreeRTOS/tasks.c **** 
 4773              		.loc 1 3244 5 view .LVU1334
 4774              	.LBB266:
 4775              	.LBI266:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4776              		.loc 2 196 34 view .LVU1335
 4777              	.LBB267:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4778              		.loc 2 198 9 view .LVU1336
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4779              		.loc 2 200 9 view .LVU1337
 4780              		.syntax unified
 4781              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4782 0006 4FF01003 			mov r3, #16												
 4783 000a 83F31188 		msr basepri, r3											
 4784 000e BFF36F8F 		isb														
 4785 0012 BFF34F8F 		dsb														
 4786              	
 4787              	@ 0 "" 2
 4788              	.LVL337:
 4789              		.thumb
 4790              		.syntax unified
 4791              	.L333:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 205


 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4792              		.loc 2 200 9 is_stmt 0 view .LVU1338
 4793              	.LBE267:
 4794              	.LBE266:
3244:Middlewares/FreeRTOS/tasks.c **** 
 4795              		.loc 1 3244 5 is_stmt 1 discriminator 1 view .LVU1339
3244:Middlewares/FreeRTOS/tasks.c **** 
 4796              		.loc 1 3244 5 discriminator 1 view .LVU1340
 4797 0016 FEE7     		b	.L333
 4798              	.L332:
3244:Middlewares/FreeRTOS/tasks.c **** 
 4799              		.loc 1 3244 52 discriminator 2 view .LVU1341
3247:Middlewares/FreeRTOS/tasks.c **** 
 4800              		.loc 1 3247 5 discriminator 2 view .LVU1342
 4801 0018 41F00041 		orr	r1, r1, #-2147483648
 4802              	.LVL338:
3247:Middlewares/FreeRTOS/tasks.c **** 
 4803              		.loc 1 3247 5 is_stmt 0 discriminator 2 view .LVU1343
 4804 001c 0160     		str	r1, [r0]
3251:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4805              		.loc 1 3251 5 is_stmt 1 discriminator 2 view .LVU1344
3251:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4806              		.loc 1 3251 20 is_stmt 0 discriminator 2 view .LVU1345
 4807 001e C268     		ldr	r2, [r0, #12]
 4808              	.LVL339:
3252:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 4809              		.loc 1 3252 5 is_stmt 1 discriminator 2 view .LVU1346
 4810 0020 002A     		cmp	r2, #0
 4811 0022 44D0     		beq	.L341
3239:Middlewares/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4812              		.loc 1 3239 1 is_stmt 0 discriminator 2 view .LVU1347
 4813 0024 30B4     		push	{r4, r5}
 4814              	.LCFI37:
 4815              		.cfi_def_cfa_offset 8
 4816              		.cfi_offset 4, -8
 4817              		.cfi_offset 5, -4
3252:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 4818              		.loc 1 3252 35 is_stmt 1 discriminator 2 view .LVU1348
 4819              	.LBB268:
3253:Middlewares/FreeRTOS/tasks.c **** 
 4820              		.loc 1 3253 5 discriminator 2 view .LVU1349
 4821 0026 0369     		ldr	r3, [r0, #16]
 4822              	.LVL340:
3253:Middlewares/FreeRTOS/tasks.c **** 
 4823              		.loc 1 3253 5 discriminator 2 view .LVU1350
 4824 0028 4468     		ldr	r4, [r0, #4]
 4825 002a 8168     		ldr	r1, [r0, #8]
 4826 002c A160     		str	r1, [r4, #8]
3253:Middlewares/FreeRTOS/tasks.c **** 
 4827              		.loc 1 3253 5 discriminator 2 view .LVU1351
 4828 002e 4468     		ldr	r4, [r0, #4]
 4829 0030 4C60     		str	r4, [r1, #4]
3253:Middlewares/FreeRTOS/tasks.c **** 
 4830              		.loc 1 3253 5 discriminator 2 view .LVU1352
 4831 0032 5968     		ldr	r1, [r3, #4]
 4832 0034 8142     		cmp	r1, r0
 4833 0036 43D0     		beq	.L342
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 206


 4834              	.L336:
3253:Middlewares/FreeRTOS/tasks.c **** 
 4835              		.loc 1 3253 5 discriminator 3 view .LVU1353
 4836 0038 0021     		movs	r1, #0
 4837 003a 0161     		str	r1, [r0, #16]
3253:Middlewares/FreeRTOS/tasks.c **** 
 4838              		.loc 1 3253 5 discriminator 3 view .LVU1354
 4839 003c 1968     		ldr	r1, [r3]
 4840 003e 0139     		subs	r1, r1, #1
 4841 0040 1960     		str	r1, [r3]
 4842              	.LBE268:
3253:Middlewares/FreeRTOS/tasks.c **** 
 4843              		.loc 1 3253 39 discriminator 3 view .LVU1355
 4844              	.LBB269:
3272:Middlewares/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4845              		.loc 1 3272 5 discriminator 3 view .LVU1356
 4846 0042 5369     		ldr	r3, [r2, #20]
 4847              	.LVL341:
3272:Middlewares/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4848              		.loc 1 3272 5 discriminator 3 view .LVU1357
 4849 0044 9068     		ldr	r0, [r2, #8]
 4850              	.LVL342:
3272:Middlewares/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4851              		.loc 1 3272 5 is_stmt 0 discriminator 3 view .LVU1358
 4852 0046 D168     		ldr	r1, [r2, #12]
 4853 0048 8160     		str	r1, [r0, #8]
3272:Middlewares/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4854              		.loc 1 3272 5 is_stmt 1 discriminator 3 view .LVU1359
 4855 004a 9068     		ldr	r0, [r2, #8]
 4856 004c 4860     		str	r0, [r1, #4]
3272:Middlewares/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4857              		.loc 1 3272 5 discriminator 3 view .LVU1360
 4858 004e 5968     		ldr	r1, [r3, #4]
 4859 0050 101D     		adds	r0, r2, #4
 4860 0052 8142     		cmp	r1, r0
 4861 0054 37D0     		beq	.L343
 4862              	.L337:
3272:Middlewares/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4863              		.loc 1 3272 5 discriminator 3 view .LVU1361
 4864 0056 0021     		movs	r1, #0
 4865 0058 5161     		str	r1, [r2, #20]
3272:Middlewares/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4866              		.loc 1 3272 5 discriminator 3 view .LVU1362
 4867 005a 1968     		ldr	r1, [r3]
 4868 005c 0139     		subs	r1, r1, #1
 4869 005e 1960     		str	r1, [r3]
 4870              	.LBE269:
3272:Middlewares/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4871              		.loc 1 3272 59 discriminator 3 view .LVU1363
3273:Middlewares/FreeRTOS/tasks.c **** 
 4872              		.loc 1 3273 5 discriminator 3 view .LVU1364
3273:Middlewares/FreeRTOS/tasks.c **** 
 4873              		.loc 1 3273 5 discriminator 3 view .LVU1365
 4874 0060 D36A     		ldr	r3, [r2, #44]
 4875              	.LVL343:
3273:Middlewares/FreeRTOS/tasks.c **** 
 4876              		.loc 1 3273 5 is_stmt 0 discriminator 3 view .LVU1366
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 207


 4877 0062 0121     		movs	r1, #1
 4878 0064 9940     		lsls	r1, r1, r3
 4879 0066 1A4C     		ldr	r4, .L344+4
 4880 0068 2568     		ldr	r5, [r4]
 4881 006a 2943     		orrs	r1, r1, r5
 4882 006c 2160     		str	r1, [r4]
 4883              	.LBB270:
3273:Middlewares/FreeRTOS/tasks.c **** 
 4884              		.loc 1 3273 5 is_stmt 1 discriminator 3 view .LVU1367
 4885 006e 1949     		ldr	r1, .L344+8
 4886 0070 03EB8303 		add	r3, r3, r3, lsl #2
 4887 0074 01EB8303 		add	r3, r1, r3, lsl #2
 4888 0078 5B68     		ldr	r3, [r3, #4]
 4889              	.LVL344:
3273:Middlewares/FreeRTOS/tasks.c **** 
 4890              		.loc 1 3273 5 discriminator 3 view .LVU1368
3273:Middlewares/FreeRTOS/tasks.c **** 
 4891              		.loc 1 3273 5 discriminator 3 view .LVU1369
3273:Middlewares/FreeRTOS/tasks.c **** 
 4892              		.loc 1 3273 5 discriminator 3 view .LVU1370
 4893 007a 9360     		str	r3, [r2, #8]
3273:Middlewares/FreeRTOS/tasks.c **** 
 4894              		.loc 1 3273 5 discriminator 3 view .LVU1371
 4895 007c 9C68     		ldr	r4, [r3, #8]
 4896 007e D460     		str	r4, [r2, #12]
3273:Middlewares/FreeRTOS/tasks.c **** 
 4897              		.loc 1 3273 5 discriminator 3 view .LVU1372
 4898 0080 6060     		str	r0, [r4, #4]
3273:Middlewares/FreeRTOS/tasks.c **** 
 4899              		.loc 1 3273 5 discriminator 3 view .LVU1373
 4900 0082 9860     		str	r0, [r3, #8]
3273:Middlewares/FreeRTOS/tasks.c **** 
 4901              		.loc 1 3273 5 discriminator 3 view .LVU1374
 4902 0084 D36A     		ldr	r3, [r2, #44]
 4903              	.LVL345:
3273:Middlewares/FreeRTOS/tasks.c **** 
 4904              		.loc 1 3273 5 is_stmt 0 discriminator 3 view .LVU1375
 4905 0086 03EB8300 		add	r0, r3, r3, lsl #2
 4906 008a 8400     		lsls	r4, r0, #2
 4907 008c 01EB8000 		add	r0, r1, r0, lsl #2
 4908 0090 5061     		str	r0, [r2, #20]
3273:Middlewares/FreeRTOS/tasks.c **** 
 4909              		.loc 1 3273 5 is_stmt 1 discriminator 3 view .LVU1376
 4910 0092 0859     		ldr	r0, [r1, r4]
 4911 0094 0130     		adds	r0, r0, #1
 4912 0096 0851     		str	r0, [r1, r4]
 4913              	.LBE270:
3273:Middlewares/FreeRTOS/tasks.c **** 
 4914              		.loc 1 3273 5 discriminator 3 view .LVU1377
3273:Middlewares/FreeRTOS/tasks.c **** 
 4915              		.loc 1 3273 44 discriminator 3 view .LVU1378
3275:Middlewares/FreeRTOS/tasks.c ****     {
 4916              		.loc 1 3275 5 discriminator 3 view .LVU1379
3275:Middlewares/FreeRTOS/tasks.c ****     {
 4917              		.loc 1 3275 23 is_stmt 0 discriminator 3 view .LVU1380
 4918 0098 D26A     		ldr	r2, [r2, #44]
 4919              	.LVL346:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 208


3275:Middlewares/FreeRTOS/tasks.c ****     {
 4920              		.loc 1 3275 50 discriminator 3 view .LVU1381
 4921 009a 0F4B     		ldr	r3, .L344+12
 4922 009c 1B68     		ldr	r3, [r3]
 4923 009e DB6A     		ldr	r3, [r3, #44]
3275:Middlewares/FreeRTOS/tasks.c ****     {
 4924              		.loc 1 3275 7 discriminator 3 view .LVU1382
 4925 00a0 9A42     		cmp	r2, r3
 4926 00a2 02D9     		bls	.L331
3281:Middlewares/FreeRTOS/tasks.c ****     }
 4927              		.loc 1 3281 9 is_stmt 1 view .LVU1383
3281:Middlewares/FreeRTOS/tasks.c ****     }
 4928              		.loc 1 3281 23 is_stmt 0 view .LVU1384
 4929 00a4 0D4B     		ldr	r3, .L344+16
 4930 00a6 0122     		movs	r2, #1
 4931 00a8 1A60     		str	r2, [r3]
 4932              	.L331:
3283:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4933              		.loc 1 3283 1 view .LVU1385
 4934 00aa 30BC     		pop	{r4, r5}
 4935              	.LCFI38:
 4936              		.cfi_restore 5
 4937              		.cfi_restore 4
 4938              		.cfi_def_cfa_offset 0
 4939 00ac 7047     		bx	lr
 4940              	.LVL347:
 4941              	.L341:
3252:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 4942              		.loc 1 3252 5 is_stmt 1 view .LVU1386
 4943              	.LBB271:
 4944              	.LBI271:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4945              		.loc 2 196 34 view .LVU1387
 4946              	.LBB272:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4947              		.loc 2 198 9 view .LVU1388
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4948              		.loc 2 200 9 view .LVU1389
 4949              		.syntax unified
 4950              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4951 00ae 4FF01003 			mov r3, #16												
 4952 00b2 83F31188 		msr basepri, r3											
 4953 00b6 BFF36F8F 		isb														
 4954 00ba BFF34F8F 		dsb														
 4955              	
 4956              	@ 0 "" 2
 4957              	.LVL348:
 4958              		.thumb
 4959              		.syntax unified
 4960              	.L335:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4961              		.loc 2 200 9 is_stmt 0 view .LVU1390
 4962              	.LBE272:
 4963              	.LBE271:
3252:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 4964              		.loc 1 3252 5 is_stmt 1 discriminator 2 view .LVU1391
3252:Middlewares/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 209


 4965              		.loc 1 3252 5 discriminator 2 view .LVU1392
 4966 00be FEE7     		b	.L335
 4967              	.LVL349:
 4968              	.L342:
 4969              	.LCFI39:
 4970              		.cfi_def_cfa_offset 8
 4971              		.cfi_offset 4, -8
 4972              		.cfi_offset 5, -4
 4973              	.LBB273:
3253:Middlewares/FreeRTOS/tasks.c **** 
 4974              		.loc 1 3253 5 discriminator 1 view .LVU1393
 4975 00c0 8168     		ldr	r1, [r0, #8]
 4976 00c2 5960     		str	r1, [r3, #4]
 4977 00c4 B8E7     		b	.L336
 4978              	.LVL350:
 4979              	.L343:
3253:Middlewares/FreeRTOS/tasks.c **** 
 4980              		.loc 1 3253 5 is_stmt 0 discriminator 1 view .LVU1394
 4981              	.LBE273:
 4982              	.LBB274:
3272:Middlewares/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4983              		.loc 1 3272 5 is_stmt 1 discriminator 1 view .LVU1395
 4984 00c6 D168     		ldr	r1, [r2, #12]
 4985 00c8 5960     		str	r1, [r3, #4]
 4986 00ca C4E7     		b	.L337
 4987              	.L345:
 4988              		.align	2
 4989              	.L344:
 4990 00cc 00000000 		.word	uxSchedulerSuspended
 4991 00d0 00000000 		.word	uxTopReadyPriority
 4992 00d4 00000000 		.word	pxReadyTasksLists
 4993 00d8 00000000 		.word	pxCurrentTCB
 4994 00dc 00000000 		.word	xYieldPending
 4995              	.LBE274:
 4996              		.cfi_endproc
 4997              	.LFE33:
 4999              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 5000              		.align	1
 5001              		.global	vTaskSetTimeOutState
 5002              		.syntax unified
 5003              		.thumb
 5004              		.thumb_func
 5006              	vTaskSetTimeOutState:
 5007              	.LVL351:
 5008              	.LFB34:
3287:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
 5009              		.loc 1 3287 1 view -0
 5010              		.cfi_startproc
 5011              		@ args = 0, pretend = 0, frame = 0
 5012              		@ frame_needed = 0, uses_anonymous_args = 0
3288:Middlewares/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5013              		.loc 1 3288 5 view .LVU1397
 5014 0000 60B1     		cbz	r0, .L351
3287:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
 5015              		.loc 1 3287 1 is_stmt 0 discriminator 2 view .LVU1398
 5016 0002 10B5     		push	{r4, lr}
 5017              	.LCFI40:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 210


 5018              		.cfi_def_cfa_offset 8
 5019              		.cfi_offset 4, -8
 5020              		.cfi_offset 14, -4
 5021 0004 0446     		mov	r4, r0
3288:Middlewares/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5022              		.loc 1 3288 30 is_stmt 1 discriminator 2 view .LVU1399
3289:Middlewares/FreeRTOS/tasks.c ****     {
 5023              		.loc 1 3289 5 discriminator 2 view .LVU1400
 5024 0006 FFF7FEFF 		bl	vPortEnterCritical
 5025              	.LVL352:
3291:Middlewares/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
 5026              		.loc 1 3291 9 discriminator 2 view .LVU1401
3291:Middlewares/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
 5027              		.loc 1 3291 35 is_stmt 0 discriminator 2 view .LVU1402
 5028 000a 094B     		ldr	r3, .L352
 5029 000c 1B68     		ldr	r3, [r3]
 5030 000e 2360     		str	r3, [r4]
3292:Middlewares/FreeRTOS/tasks.c ****     }
 5031              		.loc 1 3292 9 is_stmt 1 discriminator 2 view .LVU1403
3292:Middlewares/FreeRTOS/tasks.c ****     }
 5032              		.loc 1 3292 36 is_stmt 0 discriminator 2 view .LVU1404
 5033 0010 084B     		ldr	r3, .L352+4
 5034 0012 1B68     		ldr	r3, [r3]
 5035 0014 6360     		str	r3, [r4, #4]
3294:Middlewares/FreeRTOS/tasks.c **** }
 5036              		.loc 1 3294 5 is_stmt 1 discriminator 2 view .LVU1405
 5037 0016 FFF7FEFF 		bl	vPortExitCritical
 5038              	.LVL353:
3295:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5039              		.loc 1 3295 1 is_stmt 0 discriminator 2 view .LVU1406
 5040 001a 10BD     		pop	{r4, pc}
 5041              	.LVL354:
 5042              	.L351:
 5043              	.LCFI41:
 5044              		.cfi_def_cfa_offset 0
 5045              		.cfi_restore 4
 5046              		.cfi_restore 14
3288:Middlewares/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5047              		.loc 1 3288 5 is_stmt 1 view .LVU1407
 5048              	.LBB275:
 5049              	.LBI275:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5050              		.loc 2 196 34 view .LVU1408
 5051              	.LBB276:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5052              		.loc 2 198 9 view .LVU1409
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5053              		.loc 2 200 9 view .LVU1410
 5054              		.syntax unified
 5055              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5056 001c 4FF01003 			mov r3, #16												
 5057 0020 83F31188 		msr basepri, r3											
 5058 0024 BFF36F8F 		isb														
 5059 0028 BFF34F8F 		dsb														
 5060              	
 5061              	@ 0 "" 2
 5062              	.LVL355:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 211


 5063              		.thumb
 5064              		.syntax unified
 5065              	.L348:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5066              		.loc 2 200 9 is_stmt 0 view .LVU1411
 5067              	.LBE276:
 5068              	.LBE275:
3288:Middlewares/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5069              		.loc 1 3288 5 is_stmt 1 discriminator 1 view .LVU1412
3288:Middlewares/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5070              		.loc 1 3288 5 discriminator 1 view .LVU1413
 5071 002c FEE7     		b	.L348
 5072              	.L353:
 5073 002e 00BF     		.align	2
 5074              	.L352:
 5075 0030 00000000 		.word	xNumOfOverflows
 5076 0034 00000000 		.word	xTickCount
 5077              		.cfi_endproc
 5078              	.LFE34:
 5080              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 5081              		.align	1
 5082              		.global	vTaskInternalSetTimeOutState
 5083              		.syntax unified
 5084              		.thumb
 5085              		.thumb_func
 5087              	vTaskInternalSetTimeOutState:
 5088              	.LVL356:
 5089              	.LFB35:
3299:Middlewares/FreeRTOS/tasks.c ****     /* For internal use only as it does not use a critical section. */
 5090              		.loc 1 3299 1 view -0
 5091              		.cfi_startproc
 5092              		@ args = 0, pretend = 0, frame = 0
 5093              		@ frame_needed = 0, uses_anonymous_args = 0
 5094              		@ link register save eliminated.
3301:Middlewares/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 5095              		.loc 1 3301 5 view .LVU1415
3301:Middlewares/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 5096              		.loc 1 3301 31 is_stmt 0 view .LVU1416
 5097 0000 034B     		ldr	r3, .L355
 5098 0002 1B68     		ldr	r3, [r3]
 5099 0004 0360     		str	r3, [r0]
3302:Middlewares/FreeRTOS/tasks.c **** }
 5100              		.loc 1 3302 5 is_stmt 1 view .LVU1417
3302:Middlewares/FreeRTOS/tasks.c **** }
 5101              		.loc 1 3302 32 is_stmt 0 view .LVU1418
 5102 0006 034B     		ldr	r3, .L355+4
 5103 0008 1B68     		ldr	r3, [r3]
 5104 000a 4360     		str	r3, [r0, #4]
3303:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5105              		.loc 1 3303 1 view .LVU1419
 5106 000c 7047     		bx	lr
 5107              	.L356:
 5108 000e 00BF     		.align	2
 5109              	.L355:
 5110 0010 00000000 		.word	xNumOfOverflows
 5111 0014 00000000 		.word	xTickCount
 5112              		.cfi_endproc
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 212


 5113              	.LFE35:
 5115              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 5116              		.align	1
 5117              		.global	xTaskCheckForTimeOut
 5118              		.syntax unified
 5119              		.thumb
 5120              		.thumb_func
 5122              	xTaskCheckForTimeOut:
 5123              	.LVL357:
 5124              	.LFB36:
3308:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 5125              		.loc 1 3308 1 is_stmt 1 view -0
 5126              		.cfi_startproc
 5127              		@ args = 0, pretend = 0, frame = 0
 5128              		@ frame_needed = 0, uses_anonymous_args = 0
3308:Middlewares/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 5129              		.loc 1 3308 1 is_stmt 0 view .LVU1421
 5130 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5131              	.LCFI42:
 5132              		.cfi_def_cfa_offset 24
 5133              		.cfi_offset 3, -24
 5134              		.cfi_offset 4, -20
 5135              		.cfi_offset 5, -16
 5136              		.cfi_offset 6, -12
 5137              		.cfi_offset 7, -8
 5138              		.cfi_offset 14, -4
3309:Middlewares/FreeRTOS/tasks.c **** 
 5139              		.loc 1 3309 5 is_stmt 1 view .LVU1422
3311:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5140              		.loc 1 3311 5 view .LVU1423
 5141 0002 B8B1     		cbz	r0, .L367
 5142 0004 0C46     		mov	r4, r1
 5143 0006 0546     		mov	r5, r0
3311:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5144              		.loc 1 3311 30 discriminator 2 view .LVU1424
3312:Middlewares/FreeRTOS/tasks.c **** 
 5145              		.loc 1 3312 5 discriminator 2 view .LVU1425
 5146 0008 E9B1     		cbz	r1, .L368
3312:Middlewares/FreeRTOS/tasks.c **** 
 5147              		.loc 1 3312 34 discriminator 2 view .LVU1426
3314:Middlewares/FreeRTOS/tasks.c ****     {
 5148              		.loc 1 3314 5 discriminator 2 view .LVU1427
 5149 000a FFF7FEFF 		bl	vPortEnterCritical
 5150              	.LVL358:
 5151              	.LBB277:
3317:Middlewares/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 5152              		.loc 1 3317 9 discriminator 2 view .LVU1428
3317:Middlewares/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 5153              		.loc 1 3317 26 is_stmt 0 discriminator 2 view .LVU1429
 5154 000e 1C4B     		ldr	r3, .L370
 5155 0010 1968     		ldr	r1, [r3]
 5156              	.LVL359:
3318:Middlewares/FreeRTOS/tasks.c **** 
 5157              		.loc 1 3318 9 is_stmt 1 discriminator 2 view .LVU1430
3318:Middlewares/FreeRTOS/tasks.c **** 
 5158              		.loc 1 3318 68 is_stmt 0 discriminator 2 view .LVU1431
 5159 0012 6B68     		ldr	r3, [r5, #4]
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 213


3318:Middlewares/FreeRTOS/tasks.c **** 
 5160              		.loc 1 3318 26 discriminator 2 view .LVU1432
 5161 0014 C81A     		subs	r0, r1, r3
 5162              	.LVL360:
3332:Middlewares/FreeRTOS/tasks.c ****             {
 5163              		.loc 1 3332 13 is_stmt 1 discriminator 2 view .LVU1433
3332:Middlewares/FreeRTOS/tasks.c ****             {
 5164              		.loc 1 3332 17 is_stmt 0 discriminator 2 view .LVU1434
 5165 0016 2268     		ldr	r2, [r4]
3332:Middlewares/FreeRTOS/tasks.c ****             {
 5166              		.loc 1 3332 15 discriminator 2 view .LVU1435
 5167 0018 B2F1FF3F 		cmp	r2, #-1
 5168 001c 2AD0     		beq	.L365
3342:Middlewares/FreeRTOS/tasks.c ****         {
 5169              		.loc 1 3342 9 is_stmt 1 view .LVU1436
3342:Middlewares/FreeRTOS/tasks.c ****         {
 5170              		.loc 1 3342 31 is_stmt 0 view .LVU1437
 5171 001e 194E     		ldr	r6, .L370+4
 5172 0020 3668     		ldr	r6, [r6]
3342:Middlewares/FreeRTOS/tasks.c ****         {
 5173              		.loc 1 3342 11 view .LVU1438
 5174 0022 2F68     		ldr	r7, [r5]
 5175 0024 B742     		cmp	r7, r6
 5176 0026 17D0     		beq	.L363
3342:Middlewares/FreeRTOS/tasks.c ****         {
 5177              		.loc 1 3342 62 discriminator 1 view .LVU1439
 5178 0028 8B42     		cmp	r3, r1
 5179 002a 15D8     		bhi	.L363
3349:Middlewares/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 5180              		.loc 1 3349 13 is_stmt 1 view .LVU1440
 5181              	.LVL361:
3350:Middlewares/FreeRTOS/tasks.c ****         }
 5182              		.loc 1 3350 13 view .LVU1441
3350:Middlewares/FreeRTOS/tasks.c ****         }
 5183              		.loc 1 3350 28 is_stmt 0 view .LVU1442
 5184 002c 0023     		movs	r3, #0
 5185 002e 2360     		str	r3, [r4]
3349:Middlewares/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 5186              		.loc 1 3349 21 view .LVU1443
 5187 0030 0124     		movs	r4, #1
 5188              	.LVL362:
3350:Middlewares/FreeRTOS/tasks.c ****         }
 5189              		.loc 1 3350 28 view .LVU1444
 5190 0032 20E0     		b	.L362
 5191              	.LVL363:
 5192              	.L367:
3350:Middlewares/FreeRTOS/tasks.c ****         }
 5193              		.loc 1 3350 28 view .LVU1445
 5194              	.LBE277:
3311:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5195              		.loc 1 3311 5 is_stmt 1 view .LVU1446
 5196              	.LBB278:
 5197              	.LBI278:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5198              		.loc 2 196 34 view .LVU1447
 5199              	.LBB279:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 214


 5200              		.loc 2 198 9 view .LVU1448
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5201              		.loc 2 200 9 view .LVU1449
 5202              		.syntax unified
 5203              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5204 0034 4FF01003 			mov r3, #16												
 5205 0038 83F31188 		msr basepri, r3											
 5206 003c BFF36F8F 		isb														
 5207 0040 BFF34F8F 		dsb														
 5208              	
 5209              	@ 0 "" 2
 5210              	.LVL364:
 5211              		.thumb
 5212              		.syntax unified
 5213              	.L359:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5214              		.loc 2 200 9 is_stmt 0 view .LVU1450
 5215              	.LBE279:
 5216              	.LBE278:
3311:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5217              		.loc 1 3311 5 is_stmt 1 discriminator 1 view .LVU1451
3311:Middlewares/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5218              		.loc 1 3311 5 discriminator 1 view .LVU1452
 5219 0044 FEE7     		b	.L359
 5220              	.L368:
3312:Middlewares/FreeRTOS/tasks.c **** 
 5221              		.loc 1 3312 5 view .LVU1453
 5222              	.LBB280:
 5223              	.LBI280:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5224              		.loc 2 196 34 view .LVU1454
 5225              	.LBB281:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5226              		.loc 2 198 9 view .LVU1455
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5227              		.loc 2 200 9 view .LVU1456
 5228              		.syntax unified
 5229              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5230 0046 4FF01003 			mov r3, #16												
 5231 004a 83F31188 		msr basepri, r3											
 5232 004e BFF36F8F 		isb														
 5233 0052 BFF34F8F 		dsb														
 5234              	
 5235              	@ 0 "" 2
 5236              	.LVL365:
 5237              		.thumb
 5238              		.syntax unified
 5239              	.L361:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5240              		.loc 2 200 9 is_stmt 0 view .LVU1457
 5241              	.LBE281:
 5242              	.LBE280:
3312:Middlewares/FreeRTOS/tasks.c **** 
 5243              		.loc 1 3312 5 is_stmt 1 discriminator 2 view .LVU1458
3312:Middlewares/FreeRTOS/tasks.c **** 
 5244              		.loc 1 3312 5 discriminator 2 view .LVU1459
 5245 0056 FEE7     		b	.L361
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 215


 5246              	.LVL366:
 5247              	.L363:
 5248              	.LBB282:
3352:Middlewares/FreeRTOS/tasks.c ****         {
 5249              		.loc 1 3352 14 view .LVU1460
3352:Middlewares/FreeRTOS/tasks.c ****         {
 5250              		.loc 1 3352 16 is_stmt 0 view .LVU1461
 5251 0058 8242     		cmp	r2, r0
 5252 005a 03D8     		bhi	.L369
3361:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
 5253              		.loc 1 3361 13 is_stmt 1 view .LVU1462
3361:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
 5254              		.loc 1 3361 28 is_stmt 0 view .LVU1463
 5255 005c 0023     		movs	r3, #0
 5256 005e 2360     		str	r3, [r4]
3362:Middlewares/FreeRTOS/tasks.c ****         }
 5257              		.loc 1 3362 13 is_stmt 1 view .LVU1464
 5258              	.LVL367:
3362:Middlewares/FreeRTOS/tasks.c ****         }
 5259              		.loc 1 3362 21 is_stmt 0 view .LVU1465
 5260 0060 0124     		movs	r4, #1
 5261              	.LVL368:
3362:Middlewares/FreeRTOS/tasks.c ****         }
 5262              		.loc 1 3362 21 view .LVU1466
 5263 0062 08E0     		b	.L362
 5264              	.LVL369:
 5265              	.L369:
3355:Middlewares/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 5266              		.loc 1 3355 13 is_stmt 1 view .LVU1467
3355:Middlewares/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 5267              		.loc 1 3355 28 is_stmt 0 view .LVU1468
 5268 0064 5B1A     		subs	r3, r3, r1
 5269 0066 1344     		add	r3, r3, r2
 5270 0068 2360     		str	r3, [r4]
3356:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdFALSE;
 5271              		.loc 1 3356 13 is_stmt 1 view .LVU1469
 5272 006a 2846     		mov	r0, r5
 5273              	.LVL370:
3356:Middlewares/FreeRTOS/tasks.c ****             xReturn = pdFALSE;
 5274              		.loc 1 3356 13 is_stmt 0 view .LVU1470
 5275 006c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 5276              	.LVL371:
3357:Middlewares/FreeRTOS/tasks.c ****         }
 5277              		.loc 1 3357 13 is_stmt 1 view .LVU1471
3357:Middlewares/FreeRTOS/tasks.c ****         }
 5278              		.loc 1 3357 21 is_stmt 0 view .LVU1472
 5279 0070 0024     		movs	r4, #0
 5280              	.LVL372:
3357:Middlewares/FreeRTOS/tasks.c ****         }
 5281              		.loc 1 3357 21 view .LVU1473
 5282 0072 00E0     		b	.L362
 5283              	.LVL373:
 5284              	.L365:
3337:Middlewares/FreeRTOS/tasks.c ****             }
 5285              		.loc 1 3337 25 view .LVU1474
 5286 0074 0024     		movs	r4, #0
 5287              	.LVL374:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 216


 5288              	.L362:
3337:Middlewares/FreeRTOS/tasks.c ****             }
 5289              		.loc 1 3337 25 view .LVU1475
 5290              	.LBE282:
3365:Middlewares/FreeRTOS/tasks.c **** 
 5291              		.loc 1 3365 5 is_stmt 1 view .LVU1476
 5292 0076 FFF7FEFF 		bl	vPortExitCritical
 5293              	.LVL375:
3367:Middlewares/FreeRTOS/tasks.c **** }
 5294              		.loc 1 3367 5 view .LVU1477
3368:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5295              		.loc 1 3368 1 is_stmt 0 view .LVU1478
 5296 007a 2046     		mov	r0, r4
 5297 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5298              	.LVL376:
 5299              	.L371:
3368:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5300              		.loc 1 3368 1 view .LVU1479
 5301 007e 00BF     		.align	2
 5302              	.L370:
 5303 0080 00000000 		.word	xTickCount
 5304 0084 00000000 		.word	xNumOfOverflows
 5305              		.cfi_endproc
 5306              	.LFE36:
 5308              		.section	.text.vTaskMissedYield,"ax",%progbits
 5309              		.align	1
 5310              		.global	vTaskMissedYield
 5311              		.syntax unified
 5312              		.thumb
 5313              		.thumb_func
 5315              	vTaskMissedYield:
 5316              	.LFB37:
3372:Middlewares/FreeRTOS/tasks.c ****     xYieldPending = pdTRUE;
 5317              		.loc 1 3372 1 is_stmt 1 view -0
 5318              		.cfi_startproc
 5319              		@ args = 0, pretend = 0, frame = 0
 5320              		@ frame_needed = 0, uses_anonymous_args = 0
 5321              		@ link register save eliminated.
3373:Middlewares/FreeRTOS/tasks.c **** }
 5322              		.loc 1 3373 5 view .LVU1481
3373:Middlewares/FreeRTOS/tasks.c **** }
 5323              		.loc 1 3373 19 is_stmt 0 view .LVU1482
 5324 0000 014B     		ldr	r3, .L373
 5325 0002 0122     		movs	r2, #1
 5326 0004 1A60     		str	r2, [r3]
3374:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5327              		.loc 1 3374 1 view .LVU1483
 5328 0006 7047     		bx	lr
 5329              	.L374:
 5330              		.align	2
 5331              	.L373:
 5332 0008 00000000 		.word	xYieldPending
 5333              		.cfi_endproc
 5334              	.LFE37:
 5336              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 5337              		.align	1
 5338              		.global	xTaskGetCurrentTaskHandle
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 217


 5339              		.syntax unified
 5340              		.thumb
 5341              		.thumb_func
 5343              	xTaskGetCurrentTaskHandle:
 5344              	.LFB43:
4023:Middlewares/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
 5345              		.loc 1 4023 5 is_stmt 1 view -0
 5346              		.cfi_startproc
 5347              		@ args = 0, pretend = 0, frame = 0
 5348              		@ frame_needed = 0, uses_anonymous_args = 0
 5349              		@ link register save eliminated.
4024:Middlewares/FreeRTOS/tasks.c **** 
 5350              		.loc 1 4024 9 view .LVU1485
4029:Middlewares/FreeRTOS/tasks.c **** 
 5351              		.loc 1 4029 9 view .LVU1486
4029:Middlewares/FreeRTOS/tasks.c **** 
 5352              		.loc 1 4029 17 is_stmt 0 view .LVU1487
 5353 0000 014B     		ldr	r3, .L376
 5354 0002 1868     		ldr	r0, [r3]
 5355              	.LVL377:
4031:Middlewares/FreeRTOS/tasks.c ****     }
 5356              		.loc 1 4031 9 is_stmt 1 view .LVU1488
4032:Middlewares/FreeRTOS/tasks.c **** 
 5357              		.loc 1 4032 5 is_stmt 0 view .LVU1489
 5358 0004 7047     		bx	lr
 5359              	.L377:
 5360 0006 00BF     		.align	2
 5361              	.L376:
 5362 0008 00000000 		.word	pxCurrentTCB
 5363              		.cfi_endproc
 5364              	.LFE43:
 5366              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 5367              		.align	1
 5368              		.global	xTaskGetSchedulerState
 5369              		.syntax unified
 5370              		.thumb
 5371              		.thumb_func
 5373              	xTaskGetSchedulerState:
 5374              	.LFB44:
4040:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 5375              		.loc 1 4040 5 is_stmt 1 view -0
 5376              		.cfi_startproc
 5377              		@ args = 0, pretend = 0, frame = 0
 5378              		@ frame_needed = 0, uses_anonymous_args = 0
 5379              		@ link register save eliminated.
4041:Middlewares/FreeRTOS/tasks.c **** 
 5380              		.loc 1 4041 9 view .LVU1491
4043:Middlewares/FreeRTOS/tasks.c ****         {
 5381              		.loc 1 4043 9 view .LVU1492
4043:Middlewares/FreeRTOS/tasks.c ****         {
 5382              		.loc 1 4043 31 is_stmt 0 view .LVU1493
 5383 0000 054B     		ldr	r3, .L383
 5384 0002 1B68     		ldr	r3, [r3]
4043:Middlewares/FreeRTOS/tasks.c ****         {
 5385              		.loc 1 4043 11 view .LVU1494
 5386 0004 33B1     		cbz	r3, .L380
4049:Middlewares/FreeRTOS/tasks.c ****             {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 218


 5387              		.loc 1 4049 13 is_stmt 1 view .LVU1495
4049:Middlewares/FreeRTOS/tasks.c ****             {
 5388              		.loc 1 4049 38 is_stmt 0 view .LVU1496
 5389 0006 054B     		ldr	r3, .L383+4
 5390 0008 1B68     		ldr	r3, [r3]
4049:Middlewares/FreeRTOS/tasks.c ****             {
 5391              		.loc 1 4049 15 view .LVU1497
 5392 000a 0BB1     		cbz	r3, .L382
4055:Middlewares/FreeRTOS/tasks.c ****             }
 5393              		.loc 1 4055 25 view .LVU1498
 5394 000c 0020     		movs	r0, #0
 5395              	.LVL378:
4059:Middlewares/FreeRTOS/tasks.c ****     }
 5396              		.loc 1 4059 9 is_stmt 1 view .LVU1499
4060:Middlewares/FreeRTOS/tasks.c **** 
 5397              		.loc 1 4060 5 is_stmt 0 view .LVU1500
 5398 000e 7047     		bx	lr
 5399              	.LVL379:
 5400              	.L382:
4051:Middlewares/FreeRTOS/tasks.c ****             }
 5401              		.loc 1 4051 25 view .LVU1501
 5402 0010 0220     		movs	r0, #2
 5403 0012 7047     		bx	lr
 5404              	.L380:
4045:Middlewares/FreeRTOS/tasks.c ****         }
 5405              		.loc 1 4045 21 view .LVU1502
 5406 0014 0120     		movs	r0, #1
 5407 0016 7047     		bx	lr
 5408              	.L384:
 5409              		.align	2
 5410              	.L383:
 5411 0018 00000000 		.word	xSchedulerRunning
 5412 001c 00000000 		.word	uxSchedulerSuspended
 5413              		.cfi_endproc
 5414              	.LFE44:
 5416              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 5417              		.align	1
 5418              		.global	xTaskPriorityInherit
 5419              		.syntax unified
 5420              		.thumb
 5421              		.thumb_func
 5423              	xTaskPriorityInherit:
 5424              	.LVL380:
 5425              	.LFB45:
4068:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 5426              		.loc 1 4068 5 is_stmt 1 view -0
 5427              		.cfi_startproc
 5428              		@ args = 0, pretend = 0, frame = 0
 5429              		@ frame_needed = 0, uses_anonymous_args = 0
4069:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
 5430              		.loc 1 4069 9 view .LVU1504
4070:Middlewares/FreeRTOS/tasks.c **** 
 5431              		.loc 1 4070 9 view .LVU1505
4075:Middlewares/FreeRTOS/tasks.c ****         {
 5432              		.loc 1 4075 9 view .LVU1506
4075:Middlewares/FreeRTOS/tasks.c ****         {
 5433              		.loc 1 4075 11 is_stmt 0 view .LVU1507
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 219


 5434 0000 0028     		cmp	r0, #0
 5435 0002 54D0     		beq	.L391
4068:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 5436              		.loc 1 4068 5 view .LVU1508
 5437 0004 70B5     		push	{r4, r5, r6, lr}
 5438              	.LCFI43:
 5439              		.cfi_def_cfa_offset 16
 5440              		.cfi_offset 4, -16
 5441              		.cfi_offset 5, -12
 5442              		.cfi_offset 6, -8
 5443              		.cfi_offset 14, -4
 5444 0006 0446     		mov	r4, r0
4080:Middlewares/FreeRTOS/tasks.c ****             {
 5445              		.loc 1 4080 13 is_stmt 1 view .LVU1509
4080:Middlewares/FreeRTOS/tasks.c ****             {
 5446              		.loc 1 4080 33 is_stmt 0 view .LVU1510
 5447 0008 C36A     		ldr	r3, [r0, #44]
4080:Middlewares/FreeRTOS/tasks.c ****             {
 5448              		.loc 1 4080 60 view .LVU1511
 5449 000a 2B4A     		ldr	r2, .L398
 5450 000c 1268     		ldr	r2, [r2]
 5451 000e D26A     		ldr	r2, [r2, #44]
4080:Middlewares/FreeRTOS/tasks.c ****             {
 5452              		.loc 1 4080 15 view .LVU1512
 5453 0010 9342     		cmp	r3, r2
 5454 0012 44D2     		bcs	.L387
4085:Middlewares/FreeRTOS/tasks.c ****                 {
 5455              		.loc 1 4085 17 is_stmt 1 view .LVU1513
4085:Middlewares/FreeRTOS/tasks.c ****                 {
 5456              		.loc 1 4085 23 is_stmt 0 view .LVU1514
 5457 0014 8269     		ldr	r2, [r0, #24]
4085:Middlewares/FreeRTOS/tasks.c ****                 {
 5458              		.loc 1 4085 19 view .LVU1515
 5459 0016 002A     		cmp	r2, #0
 5460 0018 05DB     		blt	.L388
4087:Middlewares/FreeRTOS/tasks.c ****                 }
 5461              		.loc 1 4087 21 is_stmt 1 view .LVU1516
 5462 001a 274A     		ldr	r2, .L398
 5463 001c 1268     		ldr	r2, [r2]
 5464 001e D26A     		ldr	r2, [r2, #44]
 5465 0020 C2F10702 		rsb	r2, r2, #7
 5466 0024 8261     		str	r2, [r0, #24]
 5467              	.L388:
4091:Middlewares/FreeRTOS/tasks.c ****                 }
 5468              		.loc 1 4091 45 view .LVU1517
4096:Middlewares/FreeRTOS/tasks.c ****                 {
 5469              		.loc 1 4096 17 view .LVU1518
4096:Middlewares/FreeRTOS/tasks.c ****                 {
 5470              		.loc 1 4096 21 is_stmt 0 view .LVU1519
 5471 0026 6169     		ldr	r1, [r4, #20]
 5472 0028 03EB8303 		add	r3, r3, r3, lsl #2
 5473 002c 234A     		ldr	r2, .L398+4
 5474 002e 02EB8303 		add	r3, r2, r3, lsl #2
4096:Middlewares/FreeRTOS/tasks.c ****                 {
 5475              		.loc 1 4096 19 view .LVU1520
 5476 0032 9942     		cmp	r1, r3
 5477 0034 05D0     		beq	.L397
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 220


4117:Middlewares/FreeRTOS/tasks.c ****                 }
 5478              		.loc 1 4117 21 is_stmt 1 view .LVU1521
4117:Middlewares/FreeRTOS/tasks.c ****                 }
 5479              		.loc 1 4117 64 is_stmt 0 view .LVU1522
 5480 0036 204B     		ldr	r3, .L398
 5481 0038 1B68     		ldr	r3, [r3]
 5482 003a DB6A     		ldr	r3, [r3, #44]
4117:Middlewares/FreeRTOS/tasks.c ****                 }
 5483              		.loc 1 4117 50 view .LVU1523
 5484 003c E362     		str	r3, [r4, #44]
4123:Middlewares/FreeRTOS/tasks.c ****             }
 5485              		.loc 1 4123 25 view .LVU1524
 5486 003e 0120     		movs	r0, #1
 5487              	.LVL381:
 5488              	.L385:
4150:Middlewares/FreeRTOS/tasks.c **** 
 5489              		.loc 1 4150 5 view .LVU1525
 5490 0040 70BD     		pop	{r4, r5, r6, pc}
 5491              	.LVL382:
 5492              	.L397:
4098:Middlewares/FreeRTOS/tasks.c ****                     {
 5493              		.loc 1 4098 21 is_stmt 1 view .LVU1526
4098:Middlewares/FreeRTOS/tasks.c ****                     {
 5494              		.loc 1 4098 25 is_stmt 0 view .LVU1527
 5495 0042 251D     		adds	r5, r4, #4
 5496 0044 2846     		mov	r0, r5
 5497              	.LVL383:
4098:Middlewares/FreeRTOS/tasks.c ****                     {
 5498              		.loc 1 4098 25 view .LVU1528
 5499 0046 FFF7FEFF 		bl	uxListRemove
 5500              	.LVL384:
4098:Middlewares/FreeRTOS/tasks.c ****                     {
 5501              		.loc 1 4098 23 view .LVU1529
 5502 004a 38B9     		cbnz	r0, .L390
4103:Middlewares/FreeRTOS/tasks.c ****                     }
 5503              		.loc 1 4103 25 is_stmt 1 view .LVU1530
 5504 004c E36A     		ldr	r3, [r4, #44]
 5505 004e 0122     		movs	r2, #1
 5506 0050 9A40     		lsls	r2, r2, r3
 5507 0052 1B49     		ldr	r1, .L398+8
 5508 0054 0B68     		ldr	r3, [r1]
 5509 0056 23EA0203 		bic	r3, r3, r2
 5510 005a 0B60     		str	r3, [r1]
 5511              	.L390:
4107:Middlewares/FreeRTOS/tasks.c ****                     }
 5512              		.loc 1 4107 49 view .LVU1531
4111:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 5513              		.loc 1 4111 21 view .LVU1532
4111:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 5514              		.loc 1 4111 64 is_stmt 0 view .LVU1533
 5515 005c 164B     		ldr	r3, .L398
 5516 005e 1B68     		ldr	r3, [r3]
 5517 0060 DB6A     		ldr	r3, [r3, #44]
4111:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 5518              		.loc 1 4111 50 view .LVU1534
 5519 0062 E362     		str	r3, [r4, #44]
4112:Middlewares/FreeRTOS/tasks.c ****                 }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 221


 5520              		.loc 1 4112 21 is_stmt 1 view .LVU1535
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5521              		.loc 1 4112 21 view .LVU1536
 5522 0064 0120     		movs	r0, #1
 5523 0066 00FA03F2 		lsl	r2, r0, r3
 5524 006a 1549     		ldr	r1, .L398+8
 5525 006c 0E68     		ldr	r6, [r1]
 5526 006e 3243     		orrs	r2, r2, r6
 5527 0070 0A60     		str	r2, [r1]
 5528              	.LBB283:
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5529              		.loc 1 4112 21 view .LVU1537
 5530 0072 124A     		ldr	r2, .L398+4
 5531 0074 03EB8303 		add	r3, r3, r3, lsl #2
 5532 0078 02EB8303 		add	r3, r2, r3, lsl #2
 5533 007c 5B68     		ldr	r3, [r3, #4]
 5534              	.LVL385:
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5535              		.loc 1 4112 21 view .LVU1538
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5536              		.loc 1 4112 21 view .LVU1539
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5537              		.loc 1 4112 21 view .LVU1540
 5538 007e A360     		str	r3, [r4, #8]
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5539              		.loc 1 4112 21 view .LVU1541
 5540 0080 9968     		ldr	r1, [r3, #8]
 5541 0082 E160     		str	r1, [r4, #12]
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5542              		.loc 1 4112 21 view .LVU1542
 5543 0084 4D60     		str	r5, [r1, #4]
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5544              		.loc 1 4112 21 view .LVU1543
 5545 0086 9D60     		str	r5, [r3, #8]
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5546              		.loc 1 4112 21 view .LVU1544
 5547 0088 E36A     		ldr	r3, [r4, #44]
 5548              	.LVL386:
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5549              		.loc 1 4112 21 is_stmt 0 view .LVU1545
 5550 008a 03EB8301 		add	r1, r3, r3, lsl #2
 5551 008e 8D00     		lsls	r5, r1, #2
 5552 0090 02EB8101 		add	r1, r2, r1, lsl #2
 5553 0094 6161     		str	r1, [r4, #20]
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5554              		.loc 1 4112 21 is_stmt 1 view .LVU1546
 5555 0096 5159     		ldr	r1, [r2, r5]
 5556 0098 0144     		add	r1, r1, r0
 5557 009a 5151     		str	r1, [r2, r5]
 5558              	.LBE283:
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5559              		.loc 1 4112 21 view .LVU1547
4112:Middlewares/FreeRTOS/tasks.c ****                 }
 5560              		.loc 1 4112 62 view .LVU1548
 5561 009c D0E7     		b	.L385
 5562              	.LVL387:
 5563              	.L387:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 222


4127:Middlewares/FreeRTOS/tasks.c ****                 {
 5564              		.loc 1 4127 17 view .LVU1549
4127:Middlewares/FreeRTOS/tasks.c ****                 {
 5565              		.loc 1 4127 37 is_stmt 0 view .LVU1550
 5566 009e 426C     		ldr	r2, [r0, #68]
4127:Middlewares/FreeRTOS/tasks.c ****                 {
 5567              		.loc 1 4127 68 view .LVU1551
 5568 00a0 054B     		ldr	r3, .L398
 5569 00a2 1B68     		ldr	r3, [r3]
 5570 00a4 DB6A     		ldr	r3, [r3, #44]
4127:Middlewares/FreeRTOS/tasks.c ****                 {
 5571              		.loc 1 4127 19 view .LVU1552
 5572 00a6 9A42     		cmp	r2, r3
 5573 00a8 03D3     		bcc	.L392
4070:Middlewares/FreeRTOS/tasks.c **** 
 5574              		.loc 1 4070 20 view .LVU1553
 5575 00aa 0020     		movs	r0, #0
 5576              	.LVL388:
4070:Middlewares/FreeRTOS/tasks.c **** 
 5577              		.loc 1 4070 20 view .LVU1554
 5578 00ac C8E7     		b	.L385
 5579              	.LVL389:
 5580              	.L391:
 5581              	.LCFI44:
 5582              		.cfi_def_cfa_offset 0
 5583              		.cfi_restore 4
 5584              		.cfi_restore 5
 5585              		.cfi_restore 6
 5586              		.cfi_restore 14
4070:Middlewares/FreeRTOS/tasks.c **** 
 5587              		.loc 1 4070 20 view .LVU1555
 5588 00ae 0020     		movs	r0, #0
 5589              	.LVL390:
4150:Middlewares/FreeRTOS/tasks.c **** 
 5590              		.loc 1 4150 5 view .LVU1556
 5591 00b0 7047     		bx	lr
 5592              	.LVL391:
 5593              	.L392:
 5594              	.LCFI45:
 5595              		.cfi_def_cfa_offset 16
 5596              		.cfi_offset 4, -16
 5597              		.cfi_offset 5, -12
 5598              		.cfi_offset 6, -8
 5599              		.cfi_offset 14, -4
4136:Middlewares/FreeRTOS/tasks.c ****                 }
 5600              		.loc 1 4136 29 view .LVU1557
 5601 00b2 0120     		movs	r0, #1
 5602              	.LVL392:
4146:Middlewares/FreeRTOS/tasks.c ****         }
 5603              		.loc 1 4146 37 is_stmt 1 view .LVU1558
4149:Middlewares/FreeRTOS/tasks.c ****     }
 5604              		.loc 1 4149 9 view .LVU1559
4149:Middlewares/FreeRTOS/tasks.c ****     }
 5605              		.loc 1 4149 16 is_stmt 0 view .LVU1560
 5606 00b4 C4E7     		b	.L385
 5607              	.L399:
 5608 00b6 00BF     		.align	2
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 223


 5609              	.L398:
 5610 00b8 00000000 		.word	pxCurrentTCB
 5611 00bc 00000000 		.word	pxReadyTasksLists
 5612 00c0 00000000 		.word	uxTopReadyPriority
 5613              		.cfi_endproc
 5614              	.LFE45:
 5616              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 5617              		.align	1
 5618              		.global	xTaskPriorityDisinherit
 5619              		.syntax unified
 5620              		.thumb
 5621              		.thumb_func
 5623              	xTaskPriorityDisinherit:
 5624              	.LVL393:
 5625              	.LFB46:
4158:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 5626              		.loc 1 4158 5 is_stmt 1 view -0
 5627              		.cfi_startproc
 5628              		@ args = 0, pretend = 0, frame = 0
 5629              		@ frame_needed = 0, uses_anonymous_args = 0
4159:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
 5630              		.loc 1 4159 9 view .LVU1562
4160:Middlewares/FreeRTOS/tasks.c **** 
 5631              		.loc 1 4160 9 view .LVU1563
4162:Middlewares/FreeRTOS/tasks.c ****         {
 5632              		.loc 1 4162 9 view .LVU1564
4162:Middlewares/FreeRTOS/tasks.c ****         {
 5633              		.loc 1 4162 11 is_stmt 0 view .LVU1565
 5634 0000 0028     		cmp	r0, #0
 5635 0002 51D0     		beq	.L407
4158:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 5636              		.loc 1 4158 5 view .LVU1566
 5637 0004 70B5     		push	{r4, r5, r6, lr}
 5638              	.LCFI46:
 5639              		.cfi_def_cfa_offset 16
 5640              		.cfi_offset 4, -16
 5641              		.cfi_offset 5, -12
 5642              		.cfi_offset 6, -8
 5643              		.cfi_offset 14, -4
 5644 0006 0446     		mov	r4, r0
4168:Middlewares/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 5645              		.loc 1 4168 13 is_stmt 1 view .LVU1567
 5646 0008 294B     		ldr	r3, .L415
 5647 000a 1B68     		ldr	r3, [r3]
 5648 000c 8342     		cmp	r3, r0
 5649 000e 08D0     		beq	.L402
4168:Middlewares/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 5650              		.loc 1 4168 13 view .LVU1568
 5651              	.LBB284:
 5652              	.LBI284:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5653              		.loc 2 196 34 view .LVU1569
 5654              	.LBB285:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5655              		.loc 2 198 9 view .LVU1570
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5656              		.loc 2 200 9 view .LVU1571
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 224


 5657              		.syntax unified
 5658              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5659 0010 4FF01003 			mov r3, #16												
 5660 0014 83F31188 		msr basepri, r3											
 5661 0018 BFF36F8F 		isb														
 5662 001c BFF34F8F 		dsb														
 5663              	
 5664              	@ 0 "" 2
 5665              	.LVL394:
 5666              		.thumb
 5667              		.syntax unified
 5668              	.L403:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5669              		.loc 2 200 9 is_stmt 0 view .LVU1572
 5670              	.LBE285:
 5671              	.LBE284:
4168:Middlewares/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 5672              		.loc 1 4168 13 is_stmt 1 discriminator 1 view .LVU1573
4168:Middlewares/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 5673              		.loc 1 4168 13 discriminator 1 view .LVU1574
 5674 0020 FEE7     		b	.L403
 5675              	.L402:
4168:Middlewares/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 5676              		.loc 1 4168 50 discriminator 2 view .LVU1575
4169:Middlewares/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 5677              		.loc 1 4169 13 discriminator 2 view .LVU1576
 5678 0022 836C     		ldr	r3, [r0, #72]
 5679 0024 43B9     		cbnz	r3, .L404
4169:Middlewares/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 5680              		.loc 1 4169 13 view .LVU1577
 5681              	.LBB286:
 5682              	.LBI286:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5683              		.loc 2 196 34 view .LVU1578
 5684              	.LBB287:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5685              		.loc 2 198 9 view .LVU1579
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5686              		.loc 2 200 9 view .LVU1580
 5687              		.syntax unified
 5688              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5689 0026 4FF01003 			mov r3, #16												
 5690 002a 83F31188 		msr basepri, r3											
 5691 002e BFF36F8F 		isb														
 5692 0032 BFF34F8F 		dsb														
 5693              	
 5694              	@ 0 "" 2
 5695              	.LVL395:
 5696              		.thumb
 5697              		.syntax unified
 5698              	.L405:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5699              		.loc 2 200 9 is_stmt 0 view .LVU1581
 5700              	.LBE287:
 5701              	.LBE286:
4169:Middlewares/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 5702              		.loc 1 4169 13 is_stmt 1 discriminator 2 view .LVU1582
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 225


4169:Middlewares/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 5703              		.loc 1 4169 13 discriminator 2 view .LVU1583
 5704 0036 FEE7     		b	.L405
 5705              	.L404:
4169:Middlewares/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 5706              		.loc 1 4169 49 discriminator 2 view .LVU1584
4170:Middlewares/FreeRTOS/tasks.c **** 
 5707              		.loc 1 4170 13 discriminator 2 view .LVU1585
4170:Middlewares/FreeRTOS/tasks.c **** 
 5708              		.loc 1 4170 37 is_stmt 0 discriminator 2 view .LVU1586
 5709 0038 013B     		subs	r3, r3, #1
 5710 003a 8364     		str	r3, [r0, #72]
4174:Middlewares/FreeRTOS/tasks.c ****             {
 5711              		.loc 1 4174 13 is_stmt 1 discriminator 2 view .LVU1587
4174:Middlewares/FreeRTOS/tasks.c ****             {
 5712              		.loc 1 4174 22 is_stmt 0 discriminator 2 view .LVU1588
 5713 003c C16A     		ldr	r1, [r0, #44]
4174:Middlewares/FreeRTOS/tasks.c ****             {
 5714              		.loc 1 4174 43 discriminator 2 view .LVU1589
 5715 003e 426C     		ldr	r2, [r0, #68]
4174:Middlewares/FreeRTOS/tasks.c ****             {
 5716              		.loc 1 4174 15 discriminator 2 view .LVU1590
 5717 0040 9142     		cmp	r1, r2
 5718 0042 33D0     		beq	.L408
4177:Middlewares/FreeRTOS/tasks.c ****                 {
 5719              		.loc 1 4177 17 is_stmt 1 view .LVU1591
4177:Middlewares/FreeRTOS/tasks.c ****                 {
 5720              		.loc 1 4177 19 is_stmt 0 view .LVU1592
 5721 0044 0BB1     		cbz	r3, .L414
4160:Middlewares/FreeRTOS/tasks.c **** 
 5722              		.loc 1 4160 20 view .LVU1593
 5723 0046 0020     		movs	r0, #0
 5724              	.LVL396:
4226:Middlewares/FreeRTOS/tasks.c ****         }
 5725              		.loc 1 4226 37 is_stmt 1 view .LVU1594
4229:Middlewares/FreeRTOS/tasks.c ****     }
 5726              		.loc 1 4229 9 view .LVU1595
 5727              	.L400:
4230:Middlewares/FreeRTOS/tasks.c **** 
 5728              		.loc 1 4230 5 is_stmt 0 view .LVU1596
 5729 0048 70BD     		pop	{r4, r5, r6, pc}
 5730              	.LVL397:
 5731              	.L414:
4184:Middlewares/FreeRTOS/tasks.c ****                     {
 5732              		.loc 1 4184 21 is_stmt 1 view .LVU1597
4184:Middlewares/FreeRTOS/tasks.c ****                     {
 5733              		.loc 1 4184 25 is_stmt 0 view .LVU1598
 5734 004a 051D     		adds	r5, r0, #4
 5735 004c 2846     		mov	r0, r5
 5736              	.LVL398:
4184:Middlewares/FreeRTOS/tasks.c ****                     {
 5737              		.loc 1 4184 25 view .LVU1599
 5738 004e FFF7FEFF 		bl	uxListRemove
 5739              	.LVL399:
4184:Middlewares/FreeRTOS/tasks.c ****                     {
 5740              		.loc 1 4184 23 view .LVU1600
 5741 0052 38B9     		cbnz	r0, .L406
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 226


4186:Middlewares/FreeRTOS/tasks.c ****                     }
 5742              		.loc 1 4186 25 is_stmt 1 view .LVU1601
 5743 0054 E36A     		ldr	r3, [r4, #44]
 5744 0056 0122     		movs	r2, #1
 5745 0058 9A40     		lsls	r2, r2, r3
 5746 005a 1649     		ldr	r1, .L415+4
 5747 005c 0B68     		ldr	r3, [r1]
 5748 005e 23EA0203 		bic	r3, r3, r2
 5749 0062 0B60     		str	r3, [r1]
 5750              	.L406:
4190:Middlewares/FreeRTOS/tasks.c ****                     }
 5751              		.loc 1 4190 49 view .LVU1602
4195:Middlewares/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = pxTCB->uxBasePriority;
 5752              		.loc 1 4195 82 view .LVU1603
4196:Middlewares/FreeRTOS/tasks.c **** 
 5753              		.loc 1 4196 21 view .LVU1604
4196:Middlewares/FreeRTOS/tasks.c **** 
 5754              		.loc 1 4196 46 is_stmt 0 view .LVU1605
 5755 0064 636C     		ldr	r3, [r4, #68]
4196:Middlewares/FreeRTOS/tasks.c **** 
 5756              		.loc 1 4196 39 view .LVU1606
 5757 0066 E362     		str	r3, [r4, #44]
4201:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5758              		.loc 1 4201 21 is_stmt 1 view .LVU1607
 5759 0068 C3F10702 		rsb	r2, r3, #7
 5760 006c A261     		str	r2, [r4, #24]
4202:Middlewares/FreeRTOS/tasks.c **** 
 5761              		.loc 1 4202 21 view .LVU1608
4202:Middlewares/FreeRTOS/tasks.c **** 
 5762              		.loc 1 4202 21 view .LVU1609
 5763 006e 0120     		movs	r0, #1
 5764 0070 00FA03F2 		lsl	r2, r0, r3
 5765 0074 0F49     		ldr	r1, .L415+4
 5766 0076 0E68     		ldr	r6, [r1]
 5767 0078 3243     		orrs	r2, r2, r6
 5768 007a 0A60     		str	r2, [r1]
 5769              	.LBB288:
4202:Middlewares/FreeRTOS/tasks.c **** 
 5770              		.loc 1 4202 21 view .LVU1610
 5771 007c 0E4A     		ldr	r2, .L415+8
 5772 007e 03EB8303 		add	r3, r3, r3, lsl #2
 5773 0082 02EB8303 		add	r3, r2, r3, lsl #2
 5774 0086 5B68     		ldr	r3, [r3, #4]
 5775              	.LVL400:
4202:Middlewares/FreeRTOS/tasks.c **** 
 5776              		.loc 1 4202 21 view .LVU1611
4202:Middlewares/FreeRTOS/tasks.c **** 
 5777              		.loc 1 4202 21 view .LVU1612
4202:Middlewares/FreeRTOS/tasks.c **** 
 5778              		.loc 1 4202 21 view .LVU1613
 5779 0088 A360     		str	r3, [r4, #8]
4202:Middlewares/FreeRTOS/tasks.c **** 
 5780              		.loc 1 4202 21 view .LVU1614
 5781 008a 9968     		ldr	r1, [r3, #8]
 5782 008c E160     		str	r1, [r4, #12]
4202:Middlewares/FreeRTOS/tasks.c **** 
 5783              		.loc 1 4202 21 view .LVU1615
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 227


 5784 008e 4D60     		str	r5, [r1, #4]
4202:Middlewares/FreeRTOS/tasks.c **** 
 5785              		.loc 1 4202 21 view .LVU1616
 5786 0090 9D60     		str	r5, [r3, #8]
4202:Middlewares/FreeRTOS/tasks.c **** 
 5787              		.loc 1 4202 21 view .LVU1617
 5788 0092 E36A     		ldr	r3, [r4, #44]
 5789              	.LVL401:
4202:Middlewares/FreeRTOS/tasks.c **** 
 5790              		.loc 1 4202 21 is_stmt 0 view .LVU1618
 5791 0094 03EB8301 		add	r1, r3, r3, lsl #2
 5792 0098 8D00     		lsls	r5, r1, #2
 5793 009a 02EB8101 		add	r1, r2, r1, lsl #2
 5794 009e 6161     		str	r1, [r4, #20]
4202:Middlewares/FreeRTOS/tasks.c **** 
 5795              		.loc 1 4202 21 is_stmt 1 view .LVU1619
 5796 00a0 5159     		ldr	r1, [r2, r5]
 5797 00a2 0144     		add	r1, r1, r0
 5798 00a4 5151     		str	r1, [r2, r5]
 5799              	.LBE288:
4202:Middlewares/FreeRTOS/tasks.c **** 
 5800              		.loc 1 4202 21 view .LVU1620
4202:Middlewares/FreeRTOS/tasks.c **** 
 5801              		.loc 1 4202 51 view .LVU1621
4212:Middlewares/FreeRTOS/tasks.c ****                 }
 5802              		.loc 1 4212 21 view .LVU1622
 5803              	.LVL402:
4212:Middlewares/FreeRTOS/tasks.c ****                 }
 5804              		.loc 1 4212 21 is_stmt 0 view .LVU1623
 5805 00a6 CFE7     		b	.L400
 5806              	.LVL403:
 5807              	.L407:
 5808              	.LCFI47:
 5809              		.cfi_def_cfa_offset 0
 5810              		.cfi_restore 4
 5811              		.cfi_restore 5
 5812              		.cfi_restore 6
 5813              		.cfi_restore 14
4160:Middlewares/FreeRTOS/tasks.c **** 
 5814              		.loc 1 4160 20 view .LVU1624
 5815 00a8 0020     		movs	r0, #0
 5816              	.LVL404:
4230:Middlewares/FreeRTOS/tasks.c **** 
 5817              		.loc 1 4230 5 view .LVU1625
 5818 00aa 7047     		bx	lr
 5819              	.LVL405:
 5820              	.L408:
 5821              	.LCFI48:
 5822              		.cfi_def_cfa_offset 16
 5823              		.cfi_offset 4, -16
 5824              		.cfi_offset 5, -12
 5825              		.cfi_offset 6, -8
 5826              		.cfi_offset 14, -4
4160:Middlewares/FreeRTOS/tasks.c **** 
 5827              		.loc 1 4160 20 view .LVU1626
 5828 00ac 0020     		movs	r0, #0
 5829              	.LVL406:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 228


4160:Middlewares/FreeRTOS/tasks.c **** 
 5830              		.loc 1 4160 20 view .LVU1627
 5831 00ae CBE7     		b	.L400
 5832              	.L416:
 5833              		.align	2
 5834              	.L415:
 5835 00b0 00000000 		.word	pxCurrentTCB
 5836 00b4 00000000 		.word	uxTopReadyPriority
 5837 00b8 00000000 		.word	pxReadyTasksLists
 5838              		.cfi_endproc
 5839              	.LFE46:
 5841              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 5842              		.align	1
 5843              		.global	vTaskPriorityDisinheritAfterTimeout
 5844              		.syntax unified
 5845              		.thumb
 5846              		.thumb_func
 5848              	vTaskPriorityDisinheritAfterTimeout:
 5849              	.LVL407:
 5850              	.LFB47:
4239:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 5851              		.loc 1 4239 5 is_stmt 1 view -0
 5852              		.cfi_startproc
 5853              		@ args = 0, pretend = 0, frame = 0
 5854              		@ frame_needed = 0, uses_anonymous_args = 0
4240:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 5855              		.loc 1 4240 9 view .LVU1629
4241:Middlewares/FreeRTOS/tasks.c ****         const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 5856              		.loc 1 4241 9 view .LVU1630
4242:Middlewares/FreeRTOS/tasks.c **** 
 5857              		.loc 1 4242 9 view .LVU1631
4244:Middlewares/FreeRTOS/tasks.c ****         {
 5858              		.loc 1 4244 9 view .LVU1632
4244:Middlewares/FreeRTOS/tasks.c ****         {
 5859              		.loc 1 4244 11 is_stmt 0 view .LVU1633
 5860 0000 0028     		cmp	r0, #0
 5861 0002 5CD0     		beq	.L427
4239:Middlewares/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 5862              		.loc 1 4239 5 view .LVU1634
 5863 0004 38B5     		push	{r3, r4, r5, lr}
 5864              	.LCFI49:
 5865              		.cfi_def_cfa_offset 16
 5866              		.cfi_offset 3, -16
 5867              		.cfi_offset 4, -12
 5868              		.cfi_offset 5, -8
 5869              		.cfi_offset 14, -4
 5870 0006 0446     		mov	r4, r0
4248:Middlewares/FreeRTOS/tasks.c **** 
 5871              		.loc 1 4248 13 is_stmt 1 view .LVU1635
 5872 0008 836C     		ldr	r3, [r0, #72]
 5873 000a 43B9     		cbnz	r3, .L419
4248:Middlewares/FreeRTOS/tasks.c **** 
 5874              		.loc 1 4248 13 view .LVU1636
 5875              	.LBB289:
 5876              	.LBI289:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5877              		.loc 2 196 34 view .LVU1637
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 229


 5878              	.LBB290:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5879              		.loc 2 198 9 view .LVU1638
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5880              		.loc 2 200 9 view .LVU1639
 5881              		.syntax unified
 5882              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5883 000c 4FF01003 			mov r3, #16												
 5884 0010 83F31188 		msr basepri, r3											
 5885 0014 BFF36F8F 		isb														
 5886 0018 BFF34F8F 		dsb														
 5887              	
 5888              	@ 0 "" 2
 5889              	.LVL408:
 5890              		.thumb
 5891              		.syntax unified
 5892              	.L420:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5893              		.loc 2 200 9 is_stmt 0 view .LVU1640
 5894              	.LBE290:
 5895              	.LBE289:
4248:Middlewares/FreeRTOS/tasks.c **** 
 5896              		.loc 1 4248 13 is_stmt 1 discriminator 1 view .LVU1641
4248:Middlewares/FreeRTOS/tasks.c **** 
 5897              		.loc 1 4248 13 discriminator 1 view .LVU1642
 5898 001c FEE7     		b	.L420
 5899              	.L419:
4248:Middlewares/FreeRTOS/tasks.c **** 
 5900              		.loc 1 4248 49 discriminator 2 view .LVU1643
4254:Middlewares/FreeRTOS/tasks.c ****             {
 5901              		.loc 1 4254 13 discriminator 2 view .LVU1644
4254:Middlewares/FreeRTOS/tasks.c ****             {
 5902              		.loc 1 4254 22 is_stmt 0 discriminator 2 view .LVU1645
 5903 001e 426C     		ldr	r2, [r0, #68]
4254:Middlewares/FreeRTOS/tasks.c ****             {
 5904              		.loc 1 4254 15 discriminator 2 view .LVU1646
 5905 0020 8A42     		cmp	r2, r1
 5906 0022 00D2     		bcs	.L421
4256:Middlewares/FreeRTOS/tasks.c ****             }
 5907              		.loc 1 4256 33 view .LVU1647
 5908 0024 0A46     		mov	r2, r1
 5909              	.L421:
 5910              	.LVL409:
4264:Middlewares/FreeRTOS/tasks.c ****             {
 5911              		.loc 1 4264 13 is_stmt 1 view .LVU1648
4264:Middlewares/FreeRTOS/tasks.c ****             {
 5912              		.loc 1 4264 22 is_stmt 0 view .LVU1649
 5913 0026 E16A     		ldr	r1, [r4, #44]
 5914              	.LVL410:
4264:Middlewares/FreeRTOS/tasks.c ****             {
 5915              		.loc 1 4264 15 view .LVU1650
 5916 0028 9142     		cmp	r1, r2
 5917 002a 01D0     		beq	.L417
4270:Middlewares/FreeRTOS/tasks.c ****                 {
 5918              		.loc 1 4270 17 is_stmt 1 view .LVU1651
4270:Middlewares/FreeRTOS/tasks.c ****                 {
 5919              		.loc 1 4270 19 is_stmt 0 view .LVU1652
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 230


 5920 002c 012B     		cmp	r3, #1
 5921 002e 00D0     		beq	.L430
 5922              	.LVL411:
 5923              	.L417:
4336:Middlewares/FreeRTOS/tasks.c **** 
 5924              		.loc 1 4336 5 view .LVU1653
 5925 0030 38BD     		pop	{r3, r4, r5, pc}
 5926              	.LVL412:
 5927              	.L430:
4275:Middlewares/FreeRTOS/tasks.c **** 
 5928              		.loc 1 4275 21 is_stmt 1 view .LVU1654
 5929 0032 234B     		ldr	r3, .L432
 5930 0034 1B68     		ldr	r3, [r3]
 5931 0036 A342     		cmp	r3, r4
 5932 0038 38D0     		beq	.L431
4275:Middlewares/FreeRTOS/tasks.c **** 
 5933              		.loc 1 4275 58 discriminator 2 view .LVU1655
4280:Middlewares/FreeRTOS/tasks.c ****                     uxPriorityUsedOnEntry = pxTCB->uxPriority;
 5934              		.loc 1 4280 76 discriminator 2 view .LVU1656
4281:Middlewares/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxPriorityToUse;
 5935              		.loc 1 4281 21 discriminator 2 view .LVU1657
 5936              	.LVL413:
4282:Middlewares/FreeRTOS/tasks.c **** 
 5937              		.loc 1 4282 21 discriminator 2 view .LVU1658
4282:Middlewares/FreeRTOS/tasks.c **** 
 5938              		.loc 1 4282 39 is_stmt 0 discriminator 2 view .LVU1659
 5939 003a E262     		str	r2, [r4, #44]
4286:Middlewares/FreeRTOS/tasks.c ****                     {
 5940              		.loc 1 4286 21 is_stmt 1 discriminator 2 view .LVU1660
4286:Middlewares/FreeRTOS/tasks.c ****                     {
 5941              		.loc 1 4286 27 is_stmt 0 discriminator 2 view .LVU1661
 5942 003c A369     		ldr	r3, [r4, #24]
4286:Middlewares/FreeRTOS/tasks.c ****                     {
 5943              		.loc 1 4286 23 discriminator 2 view .LVU1662
 5944 003e 002B     		cmp	r3, #0
 5945 0040 02DB     		blt	.L424
4288:Middlewares/FreeRTOS/tasks.c ****                     }
 5946              		.loc 1 4288 25 is_stmt 1 view .LVU1663
 5947 0042 C2F10702 		rsb	r2, r2, #7
 5948              	.LVL414:
4288:Middlewares/FreeRTOS/tasks.c ****                     }
 5949              		.loc 1 4288 25 is_stmt 0 view .LVU1664
 5950 0046 A261     		str	r2, [r4, #24]
 5951              	.L424:
4292:Middlewares/FreeRTOS/tasks.c ****                     }
 5952              		.loc 1 4292 49 is_stmt 1 view .LVU1665
4301:Middlewares/FreeRTOS/tasks.c ****                     {
 5953              		.loc 1 4301 21 view .LVU1666
4301:Middlewares/FreeRTOS/tasks.c ****                     {
 5954              		.loc 1 4301 25 is_stmt 0 view .LVU1667
 5955 0048 6269     		ldr	r2, [r4, #20]
 5956 004a 01EB8101 		add	r1, r1, r1, lsl #2
 5957              	.LVL415:
4301:Middlewares/FreeRTOS/tasks.c ****                     {
 5958              		.loc 1 4301 25 view .LVU1668
 5959 004e 1D4B     		ldr	r3, .L432+4
 5960 0050 03EB8103 		add	r3, r3, r1, lsl #2
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 231


4301:Middlewares/FreeRTOS/tasks.c ****                     {
 5961              		.loc 1 4301 23 view .LVU1669
 5962 0054 9A42     		cmp	r2, r3
 5963 0056 EBD1     		bne	.L417
4303:Middlewares/FreeRTOS/tasks.c ****                         {
 5964              		.loc 1 4303 25 is_stmt 1 view .LVU1670
4303:Middlewares/FreeRTOS/tasks.c ****                         {
 5965              		.loc 1 4303 29 is_stmt 0 view .LVU1671
 5966 0058 251D     		adds	r5, r4, #4
 5967 005a 2846     		mov	r0, r5
 5968              	.LVL416:
4303:Middlewares/FreeRTOS/tasks.c ****                         {
 5969              		.loc 1 4303 29 view .LVU1672
 5970 005c FFF7FEFF 		bl	uxListRemove
 5971              	.LVL417:
4303:Middlewares/FreeRTOS/tasks.c ****                         {
 5972              		.loc 1 4303 27 view .LVU1673
 5973 0060 38B9     		cbnz	r0, .L425
4308:Middlewares/FreeRTOS/tasks.c ****                         }
 5974              		.loc 1 4308 29 is_stmt 1 view .LVU1674
 5975 0062 E36A     		ldr	r3, [r4, #44]
 5976 0064 0122     		movs	r2, #1
 5977 0066 9A40     		lsls	r2, r2, r3
 5978 0068 1749     		ldr	r1, .L432+8
 5979 006a 0B68     		ldr	r3, [r1]
 5980 006c 23EA0203 		bic	r3, r3, r2
 5981 0070 0B60     		str	r3, [r1]
 5982              	.L425:
4312:Middlewares/FreeRTOS/tasks.c ****                         }
 5983              		.loc 1 4312 53 view .LVU1675
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 5984              		.loc 1 4315 25 view .LVU1676
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 5985              		.loc 1 4315 25 view .LVU1677
 5986 0072 E36A     		ldr	r3, [r4, #44]
 5987 0074 0122     		movs	r2, #1
 5988 0076 9A40     		lsls	r2, r2, r3
 5989 0078 1349     		ldr	r1, .L432+8
 5990 007a 0868     		ldr	r0, [r1]
 5991 007c 0243     		orrs	r2, r2, r0
 5992 007e 0A60     		str	r2, [r1]
 5993              	.LBB291:
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 5994              		.loc 1 4315 25 view .LVU1678
 5995 0080 104A     		ldr	r2, .L432+4
 5996 0082 03EB8303 		add	r3, r3, r3, lsl #2
 5997 0086 02EB8303 		add	r3, r2, r3, lsl #2
 5998 008a 5B68     		ldr	r3, [r3, #4]
 5999              	.LVL418:
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 6000              		.loc 1 4315 25 view .LVU1679
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 6001              		.loc 1 4315 25 view .LVU1680
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 6002              		.loc 1 4315 25 view .LVU1681
 6003 008c A360     		str	r3, [r4, #8]
4315:Middlewares/FreeRTOS/tasks.c ****                     }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 232


 6004              		.loc 1 4315 25 view .LVU1682
 6005 008e 9968     		ldr	r1, [r3, #8]
 6006 0090 E160     		str	r1, [r4, #12]
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 6007              		.loc 1 4315 25 view .LVU1683
 6008 0092 4D60     		str	r5, [r1, #4]
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 6009              		.loc 1 4315 25 view .LVU1684
 6010 0094 9D60     		str	r5, [r3, #8]
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 6011              		.loc 1 4315 25 view .LVU1685
 6012 0096 E36A     		ldr	r3, [r4, #44]
 6013              	.LVL419:
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 6014              		.loc 1 4315 25 is_stmt 0 view .LVU1686
 6015 0098 03EB8301 		add	r1, r3, r3, lsl #2
 6016 009c 8800     		lsls	r0, r1, #2
 6017 009e 02EB8101 		add	r1, r2, r1, lsl #2
 6018 00a2 6161     		str	r1, [r4, #20]
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 6019              		.loc 1 4315 25 is_stmt 1 view .LVU1687
 6020 00a4 1158     		ldr	r1, [r2, r0]
 6021 00a6 0131     		adds	r1, r1, #1
 6022 00a8 1150     		str	r1, [r2, r0]
 6023              	.LBE291:
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 6024              		.loc 1 4315 25 view .LVU1688
4315:Middlewares/FreeRTOS/tasks.c ****                     }
 6025              		.loc 1 4315 55 view .LVU1689
4334:Middlewares/FreeRTOS/tasks.c ****         }
 6026              		.loc 1 4334 37 view .LVU1690
4336:Middlewares/FreeRTOS/tasks.c **** 
 6027              		.loc 1 4336 5 is_stmt 0 view .LVU1691
 6028 00aa C1E7     		b	.L417
 6029              	.LVL420:
 6030              	.L431:
4275:Middlewares/FreeRTOS/tasks.c **** 
 6031              		.loc 1 4275 21 is_stmt 1 view .LVU1692
 6032              	.LBB292:
 6033              	.LBI292:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6034              		.loc 2 196 34 view .LVU1693
 6035              	.LBB293:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6036              		.loc 2 198 9 view .LVU1694
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6037              		.loc 2 200 9 view .LVU1695
 6038              		.syntax unified
 6039              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6040 00ac 4FF01003 			mov r3, #16												
 6041 00b0 83F31188 		msr basepri, r3											
 6042 00b4 BFF36F8F 		isb														
 6043 00b8 BFF34F8F 		dsb														
 6044              	
 6045              	@ 0 "" 2
 6046              	.LVL421:
 6047              		.thumb
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 233


 6048              		.syntax unified
 6049              	.L423:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6050              		.loc 2 200 9 is_stmt 0 view .LVU1696
 6051              	.LBE293:
 6052              	.LBE292:
4275:Middlewares/FreeRTOS/tasks.c **** 
 6053              		.loc 1 4275 21 is_stmt 1 discriminator 2 view .LVU1697
4275:Middlewares/FreeRTOS/tasks.c **** 
 6054              		.loc 1 4275 21 discriminator 2 view .LVU1698
 6055 00bc FEE7     		b	.L423
 6056              	.LVL422:
 6057              	.L427:
 6058              	.LCFI50:
 6059              		.cfi_def_cfa_offset 0
 6060              		.cfi_restore 3
 6061              		.cfi_restore 4
 6062              		.cfi_restore 5
 6063              		.cfi_restore 14
4275:Middlewares/FreeRTOS/tasks.c **** 
 6064              		.loc 1 4275 21 is_stmt 0 discriminator 2 view .LVU1699
 6065 00be 7047     		bx	lr
 6066              	.L433:
 6067              		.align	2
 6068              	.L432:
 6069 00c0 00000000 		.word	pxCurrentTCB
 6070 00c4 00000000 		.word	pxReadyTasksLists
 6071 00c8 00000000 		.word	uxTopReadyPriority
 6072              		.cfi_endproc
 6073              	.LFE47:
 6075              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 6076              		.align	1
 6077              		.global	uxTaskResetEventItemValue
 6078              		.syntax unified
 6079              		.thumb
 6080              		.thumb_func
 6082              	uxTaskResetEventItemValue:
 6083              	.LFB48:
4659:Middlewares/FreeRTOS/tasks.c ****     TickType_t uxReturn;
 6084              		.loc 1 4659 1 is_stmt 1 view -0
 6085              		.cfi_startproc
 6086              		@ args = 0, pretend = 0, frame = 0
 6087              		@ frame_needed = 0, uses_anonymous_args = 0
 6088              		@ link register save eliminated.
4660:Middlewares/FreeRTOS/tasks.c **** 
 6089              		.loc 1 4660 5 view .LVU1701
4662:Middlewares/FreeRTOS/tasks.c **** 
 6090              		.loc 1 4662 5 view .LVU1702
4662:Middlewares/FreeRTOS/tasks.c **** 
 6091              		.loc 1 4662 16 is_stmt 0 view .LVU1703
 6092 0000 044A     		ldr	r2, .L435
 6093 0002 1368     		ldr	r3, [r2]
4662:Middlewares/FreeRTOS/tasks.c **** 
 6094              		.loc 1 4662 14 view .LVU1704
 6095 0004 9869     		ldr	r0, [r3, #24]
 6096              	.LVL423:
4666:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 234


 6097              		.loc 1 4666 5 is_stmt 1 view .LVU1705
 6098 0006 1368     		ldr	r3, [r2]
 6099 0008 DB6A     		ldr	r3, [r3, #44]
 6100 000a 1268     		ldr	r2, [r2]
 6101 000c C3F10703 		rsb	r3, r3, #7
 6102 0010 9361     		str	r3, [r2, #24]
4668:Middlewares/FreeRTOS/tasks.c **** }
 6103              		.loc 1 4668 5 view .LVU1706
4669:Middlewares/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 6104              		.loc 1 4669 1 is_stmt 0 view .LVU1707
 6105 0012 7047     		bx	lr
 6106              	.L436:
 6107              		.align	2
 6108              	.L435:
 6109 0014 00000000 		.word	pxCurrentTCB
 6110              		.cfi_endproc
 6111              	.LFE48:
 6113              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 6114              		.align	1
 6115              		.global	pvTaskIncrementMutexHeldCount
 6116              		.syntax unified
 6117              		.thumb
 6118              		.thumb_func
 6120              	pvTaskIncrementMutexHeldCount:
 6121              	.LFB49:
4675:Middlewares/FreeRTOS/tasks.c ****         /* If xSemaphoreCreateMutex() is called before any tasks have been created
 6122              		.loc 1 4675 5 is_stmt 1 view -0
 6123              		.cfi_startproc
 6124              		@ args = 0, pretend = 0, frame = 0
 6125              		@ frame_needed = 0, uses_anonymous_args = 0
 6126              		@ link register save eliminated.
4678:Middlewares/FreeRTOS/tasks.c ****         {
 6127              		.loc 1 4678 9 view .LVU1709
4678:Middlewares/FreeRTOS/tasks.c ****         {
 6128              		.loc 1 4678 26 is_stmt 0 view .LVU1710
 6129 0000 054B     		ldr	r3, .L439
 6130 0002 1B68     		ldr	r3, [r3]
4678:Middlewares/FreeRTOS/tasks.c ****         {
 6131              		.loc 1 4678 11 view .LVU1711
 6132 0004 23B1     		cbz	r3, .L438
4680:Middlewares/FreeRTOS/tasks.c ****         }
 6133              		.loc 1 4680 13 is_stmt 1 view .LVU1712
4680:Middlewares/FreeRTOS/tasks.c ****         }
 6134              		.loc 1 4680 27 is_stmt 0 view .LVU1713
 6135 0006 044B     		ldr	r3, .L439
 6136 0008 1A68     		ldr	r2, [r3]
 6137 000a 936C     		ldr	r3, [r2, #72]
4680:Middlewares/FreeRTOS/tasks.c ****         }
 6138              		.loc 1 4680 44 view .LVU1714
 6139 000c 0133     		adds	r3, r3, #1
 6140 000e 9364     		str	r3, [r2, #72]
 6141              	.L438:
4683:Middlewares/FreeRTOS/tasks.c ****     }
 6142              		.loc 1 4683 9 is_stmt 1 view .LVU1715
4683:Middlewares/FreeRTOS/tasks.c ****     }
 6143              		.loc 1 4683 16 is_stmt 0 view .LVU1716
 6144 0010 014B     		ldr	r3, .L439
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 235


 6145 0012 1868     		ldr	r0, [r3]
4684:Middlewares/FreeRTOS/tasks.c **** 
 6146              		.loc 1 4684 5 view .LVU1717
 6147 0014 7047     		bx	lr
 6148              	.L440:
 6149 0016 00BF     		.align	2
 6150              	.L439:
 6151 0018 00000000 		.word	pxCurrentTCB
 6152              		.cfi_endproc
 6153              	.LFE49:
 6155              		.section	.text.ulTaskGenericNotifyTake,"ax",%progbits
 6156              		.align	1
 6157              		.global	ulTaskGenericNotifyTake
 6158              		.syntax unified
 6159              		.thumb
 6160              		.thumb_func
 6162              	ulTaskGenericNotifyTake:
 6163              	.LVL424:
 6164              	.LFB50:
4694:Middlewares/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 6165              		.loc 1 4694 5 is_stmt 1 view -0
 6166              		.cfi_startproc
 6167              		@ args = 0, pretend = 0, frame = 0
 6168              		@ frame_needed = 0, uses_anonymous_args = 0
4695:Middlewares/FreeRTOS/tasks.c **** 
 6169              		.loc 1 4695 9 view .LVU1719
4697:Middlewares/FreeRTOS/tasks.c **** 
 6170              		.loc 1 4697 9 view .LVU1720
 6171 0000 40B1     		cbz	r0, .L442
4697:Middlewares/FreeRTOS/tasks.c **** 
 6172              		.loc 1 4697 9 view .LVU1721
 6173              	.LBB294:
 6174              	.LBI294:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6175              		.loc 2 196 34 view .LVU1722
 6176              	.LBB295:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6177              		.loc 2 198 9 view .LVU1723
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6178              		.loc 2 200 9 view .LVU1724
 6179              		.syntax unified
 6180              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6181 0002 4FF01003 			mov r3, #16												
 6182 0006 83F31188 		msr basepri, r3											
 6183 000a BFF36F8F 		isb														
 6184 000e BFF34F8F 		dsb														
 6185              	
 6186              	@ 0 "" 2
 6187              	.LVL425:
 6188              		.thumb
 6189              		.syntax unified
 6190              	.L443:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6191              		.loc 2 200 9 is_stmt 0 view .LVU1725
 6192              	.LBE295:
 6193              	.LBE294:
4697:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 236


 6194              		.loc 1 4697 9 is_stmt 1 discriminator 1 view .LVU1726
4697:Middlewares/FreeRTOS/tasks.c **** 
 6195              		.loc 1 4697 9 discriminator 1 view .LVU1727
 6196 0012 FEE7     		b	.L443
 6197              	.L442:
4694:Middlewares/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 6198              		.loc 1 4694 5 is_stmt 0 discriminator 2 view .LVU1728
 6199 0014 70B5     		push	{r4, r5, r6, lr}
 6200              	.LCFI51:
 6201              		.cfi_def_cfa_offset 16
 6202              		.cfi_offset 4, -16
 6203              		.cfi_offset 5, -12
 6204              		.cfi_offset 6, -8
 6205              		.cfi_offset 14, -4
 6206 0016 0E46     		mov	r6, r1
 6207 0018 1446     		mov	r4, r2
 6208 001a 0546     		mov	r5, r0
4697:Middlewares/FreeRTOS/tasks.c **** 
 6209              		.loc 1 4697 78 is_stmt 1 discriminator 2 view .LVU1729
4699:Middlewares/FreeRTOS/tasks.c ****         {
 6210              		.loc 1 4699 9 discriminator 2 view .LVU1730
 6211 001c FFF7FEFF 		bl	vPortEnterCritical
 6212              	.LVL426:
4702:Middlewares/FreeRTOS/tasks.c ****             {
 6213              		.loc 1 4702 13 discriminator 2 view .LVU1731
4702:Middlewares/FreeRTOS/tasks.c ****             {
 6214              		.loc 1 4702 29 is_stmt 0 discriminator 2 view .LVU1732
 6215 0020 214B     		ldr	r3, .L450
 6216 0022 1B68     		ldr	r3, [r3]
4702:Middlewares/FreeRTOS/tasks.c ****             {
 6217              		.loc 1 4702 46 discriminator 2 view .LVU1733
 6218 0024 05F11202 		add	r2, r5, #18
 6219 0028 03EB8203 		add	r3, r3, r2, lsl #2
 6220 002c 5B68     		ldr	r3, [r3, #4]
4702:Middlewares/FreeRTOS/tasks.c ****             {
 6221              		.loc 1 4702 15 discriminator 2 view .LVU1734
 6222 002e 33B9     		cbnz	r3, .L444
4705:Middlewares/FreeRTOS/tasks.c **** 
 6223              		.loc 1 4705 17 is_stmt 1 view .LVU1735
4705:Middlewares/FreeRTOS/tasks.c **** 
 6224              		.loc 1 4705 29 is_stmt 0 view .LVU1736
 6225 0030 1D4B     		ldr	r3, .L450
 6226 0032 1B68     		ldr	r3, [r3]
4705:Middlewares/FreeRTOS/tasks.c **** 
 6227              		.loc 1 4705 62 view .LVU1737
 6228 0034 2B44     		add	r3, r3, r5
 6229 0036 0122     		movs	r2, #1
 6230 0038 83F85020 		strb	r2, [r3, #80]
4707:Middlewares/FreeRTOS/tasks.c ****                 {
 6231              		.loc 1 4707 17 is_stmt 1 view .LVU1738
4707:Middlewares/FreeRTOS/tasks.c ****                 {
 6232              		.loc 1 4707 19 is_stmt 0 view .LVU1739
 6233 003c E4B9     		cbnz	r4, .L449
 6234              	.L444:
4725:Middlewares/FreeRTOS/tasks.c ****             }
 6235              		.loc 1 4725 41 is_stmt 1 view .LVU1740
4728:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 237


 6236              		.loc 1 4728 9 view .LVU1741
 6237 003e FFF7FEFF 		bl	vPortExitCritical
 6238              	.LVL427:
4730:Middlewares/FreeRTOS/tasks.c ****         {
 6239              		.loc 1 4730 9 view .LVU1742
 6240 0042 FFF7FEFF 		bl	vPortEnterCritical
 6241              	.LVL428:
4732:Middlewares/FreeRTOS/tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
 6242              		.loc 1 4732 51 view .LVU1743
4733:Middlewares/FreeRTOS/tasks.c **** 
 6243              		.loc 1 4733 13 view .LVU1744
4733:Middlewares/FreeRTOS/tasks.c **** 
 6244              		.loc 1 4733 36 is_stmt 0 view .LVU1745
 6245 0046 184B     		ldr	r3, .L450
 6246 0048 1B68     		ldr	r3, [r3]
4733:Middlewares/FreeRTOS/tasks.c **** 
 6247              		.loc 1 4733 22 view .LVU1746
 6248 004a 05F11202 		add	r2, r5, #18
 6249 004e 03EB8203 		add	r3, r3, r2, lsl #2
 6250 0052 5C68     		ldr	r4, [r3, #4]
 6251              	.LVL429:
4735:Middlewares/FreeRTOS/tasks.c ****             {
 6252              		.loc 1 4735 13 is_stmt 1 view .LVU1747
4735:Middlewares/FreeRTOS/tasks.c ****             {
 6253              		.loc 1 4735 15 is_stmt 0 view .LVU1748
 6254 0054 34B1     		cbz	r4, .L445
4737:Middlewares/FreeRTOS/tasks.c ****                 {
 6255              		.loc 1 4737 17 is_stmt 1 view .LVU1749
4737:Middlewares/FreeRTOS/tasks.c ****                 {
 6256              		.loc 1 4737 19 is_stmt 0 view .LVU1750
 6257 0056 F6B1     		cbz	r6, .L446
4739:Middlewares/FreeRTOS/tasks.c ****                 }
 6258              		.loc 1 4739 21 is_stmt 1 view .LVU1751
4739:Middlewares/FreeRTOS/tasks.c ****                 }
 6259              		.loc 1 4739 33 is_stmt 0 view .LVU1752
 6260 0058 134B     		ldr	r3, .L450
 6261 005a 1B68     		ldr	r3, [r3]
4739:Middlewares/FreeRTOS/tasks.c ****                 }
 6262              		.loc 1 4739 68 view .LVU1753
 6263 005c 03EB8203 		add	r3, r3, r2, lsl #2
 6264 0060 0022     		movs	r2, #0
 6265 0062 5A60     		str	r2, [r3, #4]
 6266              	.L445:
4748:Middlewares/FreeRTOS/tasks.c ****             }
 6267              		.loc 1 4748 41 is_stmt 1 view .LVU1754
4751:Middlewares/FreeRTOS/tasks.c ****         }
 6268              		.loc 1 4751 13 view .LVU1755
4751:Middlewares/FreeRTOS/tasks.c ****         }
 6269              		.loc 1 4751 25 is_stmt 0 view .LVU1756
 6270 0064 104B     		ldr	r3, .L450
 6271 0066 1B68     		ldr	r3, [r3]
4751:Middlewares/FreeRTOS/tasks.c ****         }
 6272              		.loc 1 4751 58 view .LVU1757
 6273 0068 2B44     		add	r3, r3, r5
 6274 006a 0022     		movs	r2, #0
 6275 006c 83F85020 		strb	r2, [r3, #80]
4753:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 238


 6276              		.loc 1 4753 9 is_stmt 1 view .LVU1758
 6277 0070 FFF7FEFF 		bl	vPortExitCritical
 6278              	.LVL430:
4755:Middlewares/FreeRTOS/tasks.c ****     }
 6279              		.loc 1 4755 9 view .LVU1759
4756:Middlewares/FreeRTOS/tasks.c **** 
 6280              		.loc 1 4756 5 is_stmt 0 view .LVU1760
 6281 0074 2046     		mov	r0, r4
 6282 0076 70BD     		pop	{r4, r5, r6, pc}
 6283              	.LVL431:
 6284              	.L449:
4709:Middlewares/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
 6285              		.loc 1 4709 21 is_stmt 1 view .LVU1761
 6286 0078 1146     		mov	r1, r2
 6287 007a 2046     		mov	r0, r4
 6288 007c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 6289              	.LVL432:
4710:Middlewares/FreeRTOS/tasks.c **** 
 6290              		.loc 1 4710 65 view .LVU1762
4716:Middlewares/FreeRTOS/tasks.c ****                 }
 6291              		.loc 1 4716 21 view .LVU1763
 6292 0080 4FF0E023 		mov	r3, #-536813568
 6293 0084 4FF08052 		mov	r2, #268435456
 6294 0088 C3F8042D 		str	r2, [r3, #3332]
4716:Middlewares/FreeRTOS/tasks.c ****                 }
 6295              		.loc 1 4716 21 view .LVU1764
 6296              		.syntax unified
 6297              	@ 4716 "Middlewares/FreeRTOS/tasks.c" 1
 6298 008c BFF34F8F 		dsb
 6299              	@ 0 "" 2
4716:Middlewares/FreeRTOS/tasks.c ****                 }
 6300              		.loc 1 4716 21 view .LVU1765
 6301              	@ 4716 "Middlewares/FreeRTOS/tasks.c" 1
 6302 0090 BFF36F8F 		isb
 6303              	@ 0 "" 2
4716:Middlewares/FreeRTOS/tasks.c ****                 }
 6304              		.loc 1 4716 43 view .LVU1766
 6305              		.thumb
 6306              		.syntax unified
 6307 0094 D3E7     		b	.L444
 6308              	.LVL433:
 6309              	.L446:
4743:Middlewares/FreeRTOS/tasks.c ****                 }
 6310              		.loc 1 4743 21 view .LVU1767
4743:Middlewares/FreeRTOS/tasks.c ****                 }
 6311              		.loc 1 4743 33 is_stmt 0 view .LVU1768
 6312 0096 044B     		ldr	r3, .L450
 6313 0098 1B68     		ldr	r3, [r3]
4743:Middlewares/FreeRTOS/tasks.c ****                 }
 6314              		.loc 1 4743 79 view .LVU1769
 6315 009a 621E     		subs	r2, r4, #1
4743:Middlewares/FreeRTOS/tasks.c ****                 }
 6316              		.loc 1 4743 68 view .LVU1770
 6317 009c 05F11201 		add	r1, r5, #18
 6318 00a0 03EB8103 		add	r3, r3, r1, lsl #2
 6319 00a4 5A60     		str	r2, [r3, #4]
 6320 00a6 DDE7     		b	.L445
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 239


 6321              	.L451:
 6322              		.align	2
 6323              	.L450:
 6324 00a8 00000000 		.word	pxCurrentTCB
 6325              		.cfi_endproc
 6326              	.LFE50:
 6328              		.section	.text.xTaskGenericNotifyWait,"ax",%progbits
 6329              		.align	1
 6330              		.global	xTaskGenericNotifyWait
 6331              		.syntax unified
 6332              		.thumb
 6333              		.thumb_func
 6335              	xTaskGenericNotifyWait:
 6336              	.LVL434:
 6337              	.LFB51:
4768:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 6338              		.loc 1 4768 5 is_stmt 1 view -0
 6339              		.cfi_startproc
 6340              		@ args = 4, pretend = 0, frame = 0
 6341              		@ frame_needed = 0, uses_anonymous_args = 0
4768:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 6342              		.loc 1 4768 5 is_stmt 0 view .LVU1772
 6343 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6344              	.LCFI52:
 6345              		.cfi_def_cfa_offset 24
 6346              		.cfi_offset 3, -24
 6347              		.cfi_offset 4, -20
 6348              		.cfi_offset 5, -16
 6349              		.cfi_offset 6, -12
 6350              		.cfi_offset 7, -8
 6351              		.cfi_offset 14, -4
4769:Middlewares/FreeRTOS/tasks.c **** 
 6352              		.loc 1 4769 9 is_stmt 1 view .LVU1773
4771:Middlewares/FreeRTOS/tasks.c **** 
 6353              		.loc 1 4771 9 view .LVU1774
 6354 0002 40B1     		cbz	r0, .L453
4771:Middlewares/FreeRTOS/tasks.c **** 
 6355              		.loc 1 4771 9 view .LVU1775
 6356              	.LBB296:
 6357              	.LBI296:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6358              		.loc 2 196 34 view .LVU1776
 6359              	.LBB297:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6360              		.loc 2 198 9 view .LVU1777
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6361              		.loc 2 200 9 view .LVU1778
 6362              		.syntax unified
 6363              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6364 0004 4FF01003 			mov r3, #16												
 6365 0008 83F31188 		msr basepri, r3											
 6366 000c BFF36F8F 		isb														
 6367 0010 BFF34F8F 		dsb														
 6368              	
 6369              	@ 0 "" 2
 6370              	.LVL435:
 6371              		.thumb
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 240


 6372              		.syntax unified
 6373              	.L454:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6374              		.loc 2 200 9 is_stmt 0 view .LVU1779
 6375              	.LBE297:
 6376              	.LBE296:
4771:Middlewares/FreeRTOS/tasks.c **** 
 6377              		.loc 1 4771 9 is_stmt 1 discriminator 1 view .LVU1780
4771:Middlewares/FreeRTOS/tasks.c **** 
 6378              		.loc 1 4771 9 discriminator 1 view .LVU1781
 6379 0014 FEE7     		b	.L454
 6380              	.LVL436:
 6381              	.L453:
4771:Middlewares/FreeRTOS/tasks.c **** 
 6382              		.loc 1 4771 9 is_stmt 0 discriminator 1 view .LVU1782
 6383 0016 0D46     		mov	r5, r1
 6384 0018 1646     		mov	r6, r2
 6385 001a 1C46     		mov	r4, r3
 6386 001c 0746     		mov	r7, r0
4771:Middlewares/FreeRTOS/tasks.c **** 
 6387              		.loc 1 4771 78 is_stmt 1 discriminator 2 view .LVU1783
4773:Middlewares/FreeRTOS/tasks.c ****         {
 6388              		.loc 1 4773 9 discriminator 2 view .LVU1784
 6389 001e FFF7FEFF 		bl	vPortEnterCritical
 6390              	.LVL437:
4776:Middlewares/FreeRTOS/tasks.c ****             {
 6391              		.loc 1 4776 13 discriminator 2 view .LVU1785
4776:Middlewares/FreeRTOS/tasks.c ****             {
 6392              		.loc 1 4776 29 is_stmt 0 discriminator 2 view .LVU1786
 6393 0022 2A4B     		ldr	r3, .L462
 6394 0024 1B68     		ldr	r3, [r3]
4776:Middlewares/FreeRTOS/tasks.c ****             {
 6395              		.loc 1 4776 44 discriminator 2 view .LVU1787
 6396 0026 3B44     		add	r3, r3, r7
 6397 0028 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 6398 002c DBB2     		uxtb	r3, r3
4776:Middlewares/FreeRTOS/tasks.c ****             {
 6399              		.loc 1 4776 15 discriminator 2 view .LVU1788
 6400 002e 022B     		cmp	r3, #2
 6401 0030 10D0     		beq	.L455
4781:Middlewares/FreeRTOS/tasks.c **** 
 6402              		.loc 1 4781 17 is_stmt 1 view .LVU1789
4781:Middlewares/FreeRTOS/tasks.c **** 
 6403              		.loc 1 4781 29 is_stmt 0 view .LVU1790
 6404 0032 2649     		ldr	r1, .L462
 6405 0034 0B68     		ldr	r3, [r1]
4781:Middlewares/FreeRTOS/tasks.c **** 
 6406              		.loc 1 4781 46 view .LVU1791
 6407 0036 07F11202 		add	r2, r7, #18
 6408 003a 03EB8203 		add	r3, r3, r2, lsl #2
 6409 003e 5A68     		ldr	r2, [r3, #4]
4781:Middlewares/FreeRTOS/tasks.c **** 
 6410              		.loc 1 4781 64 view .LVU1792
 6411 0040 22EA0502 		bic	r2, r2, r5
 6412 0044 5A60     		str	r2, [r3, #4]
4784:Middlewares/FreeRTOS/tasks.c **** 
 6413              		.loc 1 4784 17 is_stmt 1 view .LVU1793
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 241


4784:Middlewares/FreeRTOS/tasks.c **** 
 6414              		.loc 1 4784 29 is_stmt 0 view .LVU1794
 6415 0046 0B68     		ldr	r3, [r1]
4784:Middlewares/FreeRTOS/tasks.c **** 
 6416              		.loc 1 4784 62 view .LVU1795
 6417 0048 3B44     		add	r3, r3, r7
 6418 004a 0122     		movs	r2, #1
 6419 004c 83F85020 		strb	r2, [r3, #80]
4786:Middlewares/FreeRTOS/tasks.c ****                 {
 6420              		.loc 1 4786 17 is_stmt 1 view .LVU1796
4786:Middlewares/FreeRTOS/tasks.c ****                 {
 6421              		.loc 1 4786 19 is_stmt 0 view .LVU1797
 6422 0050 069B     		ldr	r3, [sp, #24]
 6423 0052 FBB9     		cbnz	r3, .L460
 6424              	.LVL438:
 6425              	.L455:
4804:Middlewares/FreeRTOS/tasks.c ****             }
 6426              		.loc 1 4804 41 is_stmt 1 view .LVU1798
4807:Middlewares/FreeRTOS/tasks.c **** 
 6427              		.loc 1 4807 9 view .LVU1799
 6428 0054 FFF7FEFF 		bl	vPortExitCritical
 6429              	.LVL439:
4809:Middlewares/FreeRTOS/tasks.c ****         {
 6430              		.loc 1 4809 9 view .LVU1800
 6431 0058 FFF7FEFF 		bl	vPortEnterCritical
 6432              	.LVL440:
4811:Middlewares/FreeRTOS/tasks.c **** 
 6433              		.loc 1 4811 51 view .LVU1801
4813:Middlewares/FreeRTOS/tasks.c ****             {
 6434              		.loc 1 4813 13 view .LVU1802
4813:Middlewares/FreeRTOS/tasks.c ****             {
 6435              		.loc 1 4813 15 is_stmt 0 view .LVU1803
 6436 005c 3CB1     		cbz	r4, .L456
4817:Middlewares/FreeRTOS/tasks.c ****             }
 6437              		.loc 1 4817 17 is_stmt 1 view .LVU1804
4817:Middlewares/FreeRTOS/tasks.c ****             }
 6438              		.loc 1 4817 53 is_stmt 0 view .LVU1805
 6439 005e 1B4B     		ldr	r3, .L462
 6440 0060 1B68     		ldr	r3, [r3]
4817:Middlewares/FreeRTOS/tasks.c ****             }
 6441              		.loc 1 4817 70 view .LVU1806
 6442 0062 07F11202 		add	r2, r7, #18
 6443 0066 03EB8203 		add	r3, r3, r2, lsl #2
 6444 006a 5B68     		ldr	r3, [r3, #4]
4817:Middlewares/FreeRTOS/tasks.c ****             }
 6445              		.loc 1 4817 39 view .LVU1807
 6446 006c 2360     		str	r3, [r4]
 6447              	.L456:
4824:Middlewares/FreeRTOS/tasks.c ****             {
 6448              		.loc 1 4824 13 is_stmt 1 view .LVU1808
4824:Middlewares/FreeRTOS/tasks.c ****             {
 6449              		.loc 1 4824 29 is_stmt 0 view .LVU1809
 6450 006e 174B     		ldr	r3, .L462
 6451 0070 1B68     		ldr	r3, [r3]
4824:Middlewares/FreeRTOS/tasks.c ****             {
 6452              		.loc 1 4824 44 view .LVU1810
 6453 0072 3B44     		add	r3, r3, r7
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 242


 6454 0074 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 6455 0078 DBB2     		uxtb	r3, r3
4824:Middlewares/FreeRTOS/tasks.c ****             {
 6456              		.loc 1 4824 15 view .LVU1811
 6457 007a 022B     		cmp	r3, #2
 6458 007c 19D0     		beq	.L461
4827:Middlewares/FreeRTOS/tasks.c ****             }
 6459              		.loc 1 4827 25 view .LVU1812
 6460 007e 0024     		movs	r4, #0
 6461              	.LVL441:
 6462              	.L457:
4837:Middlewares/FreeRTOS/tasks.c ****         }
 6463              		.loc 1 4837 13 is_stmt 1 view .LVU1813
4837:Middlewares/FreeRTOS/tasks.c ****         }
 6464              		.loc 1 4837 25 is_stmt 0 view .LVU1814
 6465 0080 124B     		ldr	r3, .L462
 6466 0082 1B68     		ldr	r3, [r3]
4837:Middlewares/FreeRTOS/tasks.c ****         }
 6467              		.loc 1 4837 58 view .LVU1815
 6468 0084 3B44     		add	r3, r3, r7
 6469 0086 0022     		movs	r2, #0
 6470 0088 83F85020 		strb	r2, [r3, #80]
4839:Middlewares/FreeRTOS/tasks.c **** 
 6471              		.loc 1 4839 9 is_stmt 1 view .LVU1816
 6472 008c FFF7FEFF 		bl	vPortExitCritical
 6473              	.LVL442:
4841:Middlewares/FreeRTOS/tasks.c ****     }
 6474              		.loc 1 4841 9 view .LVU1817
4842:Middlewares/FreeRTOS/tasks.c **** 
 6475              		.loc 1 4842 5 is_stmt 0 view .LVU1818
 6476 0090 2046     		mov	r0, r4
 6477 0092 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6478              	.LVL443:
 6479              	.L460:
4788:Middlewares/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
 6480              		.loc 1 4788 21 is_stmt 1 view .LVU1819
 6481 0094 1146     		mov	r1, r2
 6482 0096 1846     		mov	r0, r3
 6483 0098 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 6484              	.LVL444:
4789:Middlewares/FreeRTOS/tasks.c **** 
 6485              		.loc 1 4789 65 view .LVU1820
4795:Middlewares/FreeRTOS/tasks.c ****                 }
 6486              		.loc 1 4795 21 view .LVU1821
 6487 009c 4FF0E023 		mov	r3, #-536813568
 6488 00a0 4FF08052 		mov	r2, #268435456
 6489 00a4 C3F8042D 		str	r2, [r3, #3332]
 6490              	.LVL445:
4795:Middlewares/FreeRTOS/tasks.c ****                 }
 6491              		.loc 1 4795 21 view .LVU1822
 6492              		.syntax unified
 6493              	@ 4795 "Middlewares/FreeRTOS/tasks.c" 1
 6494 00a8 BFF34F8F 		dsb
 6495              	@ 0 "" 2
4795:Middlewares/FreeRTOS/tasks.c ****                 }
 6496              		.loc 1 4795 21 view .LVU1823
 6497              	@ 4795 "Middlewares/FreeRTOS/tasks.c" 1
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 243


 6498 00ac BFF36F8F 		isb
 6499              	@ 0 "" 2
4795:Middlewares/FreeRTOS/tasks.c ****                 }
 6500              		.loc 1 4795 43 view .LVU1824
 6501              		.thumb
 6502              		.syntax unified
 6503 00b0 D0E7     		b	.L455
 6504              	.L461:
4833:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 6505              		.loc 1 4833 17 view .LVU1825
4833:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 6506              		.loc 1 4833 29 is_stmt 0 view .LVU1826
 6507 00b2 064B     		ldr	r3, .L462
 6508 00b4 1B68     		ldr	r3, [r3]
4833:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 6509              		.loc 1 4833 46 view .LVU1827
 6510 00b6 07F11202 		add	r2, r7, #18
 6511 00ba 03EB8203 		add	r3, r3, r2, lsl #2
 6512 00be 5A68     		ldr	r2, [r3, #4]
4833:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 6513              		.loc 1 4833 64 view .LVU1828
 6514 00c0 22EA0602 		bic	r2, r2, r6
 6515 00c4 5A60     		str	r2, [r3, #4]
4834:Middlewares/FreeRTOS/tasks.c ****             }
 6516              		.loc 1 4834 17 is_stmt 1 view .LVU1829
 6517              	.LVL446:
4834:Middlewares/FreeRTOS/tasks.c ****             }
 6518              		.loc 1 4834 25 is_stmt 0 view .LVU1830
 6519 00c6 0124     		movs	r4, #1
 6520              	.LVL447:
4834:Middlewares/FreeRTOS/tasks.c ****             }
 6521              		.loc 1 4834 25 view .LVU1831
 6522 00c8 DAE7     		b	.L457
 6523              	.L463:
 6524 00ca 00BF     		.align	2
 6525              	.L462:
 6526 00cc 00000000 		.word	pxCurrentTCB
 6527              		.cfi_endproc
 6528              	.LFE51:
 6530              		.section	.text.xTaskGenericNotify,"ax",%progbits
 6531              		.align	1
 6532              		.global	xTaskGenericNotify
 6533              		.syntax unified
 6534              		.thumb
 6535              		.thumb_func
 6537              	xTaskGenericNotify:
 6538              	.LVL448:
 6539              	.LFB52:
4854:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 6540              		.loc 1 4854 5 is_stmt 1 view -0
 6541              		.cfi_startproc
 6542              		@ args = 4, pretend = 0, frame = 0
 6543              		@ frame_needed = 0, uses_anonymous_args = 0
4854:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 6544              		.loc 1 4854 5 is_stmt 0 view .LVU1833
 6545 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6546              	.LCFI53:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 244


 6547              		.cfi_def_cfa_offset 24
 6548              		.cfi_offset 3, -24
 6549              		.cfi_offset 4, -20
 6550              		.cfi_offset 5, -16
 6551              		.cfi_offset 6, -12
 6552              		.cfi_offset 7, -8
 6553              		.cfi_offset 14, -4
4855:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
 6554              		.loc 1 4855 9 is_stmt 1 view .LVU1834
4856:Middlewares/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 6555              		.loc 1 4856 9 view .LVU1835
 6556              	.LVL449:
4857:Middlewares/FreeRTOS/tasks.c **** 
 6557              		.loc 1 4857 9 view .LVU1836
4859:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 6558              		.loc 1 4859 9 view .LVU1837
 6559 0002 41B1     		cbz	r1, .L465
4859:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 6560              		.loc 1 4859 9 view .LVU1838
 6561              	.LBB298:
 6562              	.LBI298:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6563              		.loc 2 196 34 view .LVU1839
 6564              	.LBB299:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6565              		.loc 2 198 9 view .LVU1840
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6566              		.loc 2 200 9 view .LVU1841
 6567              		.syntax unified
 6568              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6569 0004 4FF01003 			mov r3, #16												
 6570 0008 83F31188 		msr basepri, r3											
 6571 000c BFF36F8F 		isb														
 6572 0010 BFF34F8F 		dsb														
 6573              	
 6574              	@ 0 "" 2
 6575              	.LVL450:
 6576              		.thumb
 6577              		.syntax unified
 6578              	.L466:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6579              		.loc 2 200 9 is_stmt 0 view .LVU1842
 6580              	.LBE299:
 6581              	.LBE298:
4859:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 6582              		.loc 1 4859 9 is_stmt 1 discriminator 1 view .LVU1843
4859:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 6583              		.loc 1 4859 9 discriminator 1 view .LVU1844
 6584 0014 FEE7     		b	.L466
 6585              	.LVL451:
 6586              	.L465:
4859:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 6587              		.loc 1 4859 9 is_stmt 0 discriminator 1 view .LVU1845
 6588 0016 0446     		mov	r4, r0
 6589 0018 1746     		mov	r7, r2
 6590 001a 1E46     		mov	r6, r3
 6591 001c 0D46     		mov	r5, r1
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 245


4859:Middlewares/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 6592              		.loc 1 4859 80 is_stmt 1 discriminator 2 view .LVU1846
4860:Middlewares/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 6593              		.loc 1 4860 9 discriminator 2 view .LVU1847
 6594 001e C0B1     		cbz	r0, .L487
4860:Middlewares/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 6595              		.loc 1 4860 38 discriminator 2 view .LVU1848
4861:Middlewares/FreeRTOS/tasks.c **** 
 6596              		.loc 1 4861 9 discriminator 2 view .LVU1849
 6597              	.LVL452:
4863:Middlewares/FreeRTOS/tasks.c ****         {
 6598              		.loc 1 4863 9 discriminator 2 view .LVU1850
 6599 0020 FFF7FEFF 		bl	vPortEnterCritical
 6600              	.LVL453:
4865:Middlewares/FreeRTOS/tasks.c ****             {
 6601              		.loc 1 4865 13 discriminator 2 view .LVU1851
4865:Middlewares/FreeRTOS/tasks.c ****             {
 6602              		.loc 1 4865 15 is_stmt 0 discriminator 2 view .LVU1852
 6603 0024 069B     		ldr	r3, [sp, #24]
 6604 0026 33B1     		cbz	r3, .L469
4867:Middlewares/FreeRTOS/tasks.c ****             }
 6605              		.loc 1 4867 17 is_stmt 1 view .LVU1853
4867:Middlewares/FreeRTOS/tasks.c ****             }
 6606              		.loc 1 4867 71 is_stmt 0 view .LVU1854
 6607 0028 05F11203 		add	r3, r5, #18
 6608 002c 04EB8303 		add	r3, r4, r3, lsl #2
 6609 0030 5B68     		ldr	r3, [r3, #4]
4867:Middlewares/FreeRTOS/tasks.c ****             }
 6610              		.loc 1 4867 47 view .LVU1855
 6611 0032 069A     		ldr	r2, [sp, #24]
 6612 0034 1360     		str	r3, [r2]
 6613              	.L469:
4870:Middlewares/FreeRTOS/tasks.c **** 
 6614              		.loc 1 4870 13 is_stmt 1 view .LVU1856
4870:Middlewares/FreeRTOS/tasks.c **** 
 6615              		.loc 1 4870 35 is_stmt 0 view .LVU1857
 6616 0036 6319     		adds	r3, r4, r5
 6617 0038 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 6618 003c D2B2     		uxtb	r2, r2
 6619              	.LVL454:
4872:Middlewares/FreeRTOS/tasks.c **** 
 6620              		.loc 1 4872 13 is_stmt 1 view .LVU1858
4872:Middlewares/FreeRTOS/tasks.c **** 
 6621              		.loc 1 4872 53 is_stmt 0 view .LVU1859
 6622 003e 0221     		movs	r1, #2
 6623 0040 83F85010 		strb	r1, [r3, #80]
4874:Middlewares/FreeRTOS/tasks.c ****             {
 6624              		.loc 1 4874 13 is_stmt 1 view .LVU1860
 6625 0044 042E     		cmp	r6, #4
 6626 0046 31D8     		bhi	.L470
 6627 0048 DFE806F0 		tbb	[pc, r6]
 6628              	.L472:
 6629 004c 13       		.byte	(.L476-.L472)/2
 6630 004d 0C       		.byte	(.L475-.L472)/2
 6631 004e 1A       		.byte	(.L474-.L472)/2
 6632 004f 22       		.byte	(.L473-.L472)/2
 6633 0050 28       		.byte	(.L471-.L472)/2
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 246


 6634              	.LVL455:
 6635 0051 00       		.p2align 1
 6636              	.L487:
4860:Middlewares/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 6637              		.loc 1 4860 9 view .LVU1861
 6638              	.LBB300:
 6639              	.LBI300:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6640              		.loc 2 196 34 view .LVU1862
 6641              	.LBB301:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6642              		.loc 2 198 9 view .LVU1863
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6643              		.loc 2 200 9 view .LVU1864
 6644              		.syntax unified
 6645              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6646 0052 4FF01003 			mov r3, #16												
 6647 0056 83F31188 		msr basepri, r3											
 6648 005a BFF36F8F 		isb														
 6649 005e BFF34F8F 		dsb														
 6650              	
 6651              	@ 0 "" 2
 6652              	.LVL456:
 6653              		.thumb
 6654              		.syntax unified
 6655              	.L468:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6656              		.loc 2 200 9 is_stmt 0 view .LVU1865
 6657              	.LBE301:
 6658              	.LBE300:
4860:Middlewares/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 6659              		.loc 1 4860 9 is_stmt 1 discriminator 2 view .LVU1866
4860:Middlewares/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 6660              		.loc 1 4860 9 discriminator 2 view .LVU1867
 6661 0062 FEE7     		b	.L468
 6662              	.LVL457:
 6663              	.L475:
4877:Middlewares/FreeRTOS/tasks.c ****                     break;
 6664              		.loc 1 4877 21 view .LVU1868
4877:Middlewares/FreeRTOS/tasks.c ****                     break;
 6665              		.loc 1 4877 43 is_stmt 0 view .LVU1869
 6666 0064 05F11203 		add	r3, r5, #18
 6667 0068 04EB8303 		add	r3, r4, r3, lsl #2
 6668 006c 5968     		ldr	r1, [r3, #4]
4877:Middlewares/FreeRTOS/tasks.c ****                     break;
 6669              		.loc 1 4877 63 view .LVU1870
 6670 006e 3943     		orrs	r1, r1, r7
 6671 0070 5960     		str	r1, [r3, #4]
4878:Middlewares/FreeRTOS/tasks.c **** 
 6672              		.loc 1 4878 21 is_stmt 1 view .LVU1871
 6673              	.L476:
4918:Middlewares/FreeRTOS/tasks.c **** 
 6674              		.loc 1 4918 48 view .LVU1872
4922:Middlewares/FreeRTOS/tasks.c ****             {
 6675              		.loc 1 4922 13 view .LVU1873
4922:Middlewares/FreeRTOS/tasks.c ****             {
 6676              		.loc 1 4922 15 is_stmt 0 view .LVU1874
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 247


 6677 0072 012A     		cmp	r2, #1
 6678 0074 27D0     		beq	.L488
 6679 0076 0124     		movs	r4, #1
 6680              	.LVL458:
 6681              	.L477:
4959:Middlewares/FreeRTOS/tasks.c ****             }
 6682              		.loc 1 4959 41 is_stmt 1 view .LVU1875
4962:Middlewares/FreeRTOS/tasks.c **** 
 6683              		.loc 1 4962 9 view .LVU1876
 6684 0078 FFF7FEFF 		bl	vPortExitCritical
 6685              	.LVL459:
4964:Middlewares/FreeRTOS/tasks.c ****     }
 6686              		.loc 1 4964 9 view .LVU1877
4965:Middlewares/FreeRTOS/tasks.c **** 
 6687              		.loc 1 4965 5 is_stmt 0 view .LVU1878
 6688 007c 2046     		mov	r0, r4
 6689 007e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6690              	.LVL460:
 6691              	.L474:
4881:Middlewares/FreeRTOS/tasks.c ****                     break;
 6692              		.loc 1 4881 21 is_stmt 1 view .LVU1879
4881:Middlewares/FreeRTOS/tasks.c ****                     break;
 6693              		.loc 1 4881 45 is_stmt 0 view .LVU1880
 6694 0080 05F11203 		add	r3, r5, #18
 6695 0084 04EB8303 		add	r3, r4, r3, lsl #2
 6696 0088 5968     		ldr	r1, [r3, #4]
4881:Middlewares/FreeRTOS/tasks.c ****                     break;
 6697              		.loc 1 4881 66 view .LVU1881
 6698 008a 0131     		adds	r1, r1, #1
 6699 008c 5960     		str	r1, [r3, #4]
4882:Middlewares/FreeRTOS/tasks.c **** 
 6700              		.loc 1 4882 21 is_stmt 1 view .LVU1882
 6701 008e F0E7     		b	.L476
 6702              	.L473:
4885:Middlewares/FreeRTOS/tasks.c ****                     break;
 6703              		.loc 1 4885 21 view .LVU1883
4885:Middlewares/FreeRTOS/tasks.c ****                     break;
 6704              		.loc 1 4885 63 is_stmt 0 view .LVU1884
 6705 0090 05F11203 		add	r3, r5, #18
 6706 0094 04EB8303 		add	r3, r4, r3, lsl #2
 6707 0098 5F60     		str	r7, [r3, #4]
4886:Middlewares/FreeRTOS/tasks.c **** 
 6708              		.loc 1 4886 21 is_stmt 1 view .LVU1885
 6709 009a EAE7     		b	.L476
 6710              	.L471:
4890:Middlewares/FreeRTOS/tasks.c ****                     {
 6711              		.loc 1 4890 21 view .LVU1886
4890:Middlewares/FreeRTOS/tasks.c ****                     {
 6712              		.loc 1 4890 23 is_stmt 0 view .LVU1887
 6713 009c 022A     		cmp	r2, #2
 6714 009e 5DD0     		beq	.L482
4892:Middlewares/FreeRTOS/tasks.c ****                     }
 6715              		.loc 1 4892 25 is_stmt 1 view .LVU1888
4892:Middlewares/FreeRTOS/tasks.c ****                     }
 6716              		.loc 1 4892 67 is_stmt 0 view .LVU1889
 6717 00a0 05F11203 		add	r3, r5, #18
 6718 00a4 04EB8303 		add	r3, r4, r3, lsl #2
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 248


 6719 00a8 5F60     		str	r7, [r3, #4]
 6720 00aa E2E7     		b	.L476
 6721              	.L470:
4913:Middlewares/FreeRTOS/tasks.c **** 
 6722              		.loc 1 4913 21 is_stmt 1 view .LVU1890
 6723 00ac 2D4B     		ldr	r3, .L490
 6724 00ae 1B68     		ldr	r3, [r3]
 6725 00b0 002B     		cmp	r3, #0
 6726 00b2 DED0     		beq	.L476
4913:Middlewares/FreeRTOS/tasks.c **** 
 6727              		.loc 1 4913 21 view .LVU1891
 6728              	.LBB302:
 6729              	.LBI302:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6730              		.loc 2 196 34 view .LVU1892
 6731              	.LBB303:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6732              		.loc 2 198 9 view .LVU1893
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6733              		.loc 2 200 9 view .LVU1894
 6734              		.syntax unified
 6735              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6736 00b4 4FF01003 			mov r3, #16												
 6737 00b8 83F31188 		msr basepri, r3											
 6738 00bc BFF36F8F 		isb														
 6739 00c0 BFF34F8F 		dsb														
 6740              	
 6741              	@ 0 "" 2
 6742              	.LVL461:
 6743              		.thumb
 6744              		.syntax unified
 6745              	.L478:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6746              		.loc 2 200 9 is_stmt 0 view .LVU1895
 6747              	.LBE303:
 6748              	.LBE302:
4913:Middlewares/FreeRTOS/tasks.c **** 
 6749              		.loc 1 4913 21 is_stmt 1 discriminator 3 view .LVU1896
4913:Middlewares/FreeRTOS/tasks.c **** 
 6750              		.loc 1 4913 21 discriminator 3 view .LVU1897
 6751 00c4 FEE7     		b	.L478
 6752              	.L488:
 6753              	.LBB304:
4924:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 6754              		.loc 1 4924 17 view .LVU1898
 6755 00c6 6369     		ldr	r3, [r4, #20]
 6756              	.LVL462:
4924:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 6757              		.loc 1 4924 17 view .LVU1899
 6758 00c8 A168     		ldr	r1, [r4, #8]
 6759 00ca E268     		ldr	r2, [r4, #12]
 6760              	.LVL463:
4924:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 6761              		.loc 1 4924 17 is_stmt 0 view .LVU1900
 6762 00cc 8A60     		str	r2, [r1, #8]
4924:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 6763              		.loc 1 4924 17 is_stmt 1 view .LVU1901
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 249


 6764 00ce A168     		ldr	r1, [r4, #8]
 6765 00d0 5160     		str	r1, [r2, #4]
4924:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 6766              		.loc 1 4924 17 view .LVU1902
 6767 00d2 5A68     		ldr	r2, [r3, #4]
 6768 00d4 211D     		adds	r1, r4, #4
 6769 00d6 8A42     		cmp	r2, r1
 6770 00d8 2BD0     		beq	.L489
 6771              	.L479:
4924:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 6772              		.loc 1 4924 17 discriminator 3 view .LVU1903
 6773 00da 0022     		movs	r2, #0
 6774 00dc 6261     		str	r2, [r4, #20]
4924:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 6775              		.loc 1 4924 17 discriminator 3 view .LVU1904
 6776 00de 1A68     		ldr	r2, [r3]
 6777 00e0 013A     		subs	r2, r2, #1
 6778 00e2 1A60     		str	r2, [r3]
 6779              	.LBE304:
4924:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 6780              		.loc 1 4924 62 discriminator 3 view .LVU1905
4925:Middlewares/FreeRTOS/tasks.c **** 
 6781              		.loc 1 4925 17 discriminator 3 view .LVU1906
4925:Middlewares/FreeRTOS/tasks.c **** 
 6782              		.loc 1 4925 17 discriminator 3 view .LVU1907
 6783 00e4 E36A     		ldr	r3, [r4, #44]
 6784              	.LVL464:
4925:Middlewares/FreeRTOS/tasks.c **** 
 6785              		.loc 1 4925 17 is_stmt 0 discriminator 3 view .LVU1908
 6786 00e6 0122     		movs	r2, #1
 6787 00e8 9A40     		lsls	r2, r2, r3
 6788 00ea 1F48     		ldr	r0, .L490+4
 6789 00ec 0568     		ldr	r5, [r0]
 6790              	.LVL465:
4925:Middlewares/FreeRTOS/tasks.c **** 
 6791              		.loc 1 4925 17 discriminator 3 view .LVU1909
 6792 00ee 2A43     		orrs	r2, r2, r5
 6793 00f0 0260     		str	r2, [r0]
 6794              	.LBB305:
4925:Middlewares/FreeRTOS/tasks.c **** 
 6795              		.loc 1 4925 17 is_stmt 1 discriminator 3 view .LVU1910
 6796 00f2 1E4A     		ldr	r2, .L490+8
 6797 00f4 03EB8303 		add	r3, r3, r3, lsl #2
 6798 00f8 02EB8303 		add	r3, r2, r3, lsl #2
 6799 00fc 5B68     		ldr	r3, [r3, #4]
 6800              	.LVL466:
4925:Middlewares/FreeRTOS/tasks.c **** 
 6801              		.loc 1 4925 17 discriminator 3 view .LVU1911
4925:Middlewares/FreeRTOS/tasks.c **** 
 6802              		.loc 1 4925 17 discriminator 3 view .LVU1912
4925:Middlewares/FreeRTOS/tasks.c **** 
 6803              		.loc 1 4925 17 discriminator 3 view .LVU1913
 6804 00fe A360     		str	r3, [r4, #8]
4925:Middlewares/FreeRTOS/tasks.c **** 
 6805              		.loc 1 4925 17 discriminator 3 view .LVU1914
 6806 0100 9868     		ldr	r0, [r3, #8]
 6807 0102 E060     		str	r0, [r4, #12]
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 250


4925:Middlewares/FreeRTOS/tasks.c **** 
 6808              		.loc 1 4925 17 discriminator 3 view .LVU1915
 6809 0104 4160     		str	r1, [r0, #4]
4925:Middlewares/FreeRTOS/tasks.c **** 
 6810              		.loc 1 4925 17 discriminator 3 view .LVU1916
 6811 0106 9960     		str	r1, [r3, #8]
4925:Middlewares/FreeRTOS/tasks.c **** 
 6812              		.loc 1 4925 17 discriminator 3 view .LVU1917
 6813 0108 E36A     		ldr	r3, [r4, #44]
 6814              	.LVL467:
4925:Middlewares/FreeRTOS/tasks.c **** 
 6815              		.loc 1 4925 17 is_stmt 0 discriminator 3 view .LVU1918
 6816 010a 03EB8301 		add	r1, r3, r3, lsl #2
 6817 010e 8800     		lsls	r0, r1, #2
 6818 0110 02EB8101 		add	r1, r2, r1, lsl #2
 6819 0114 6161     		str	r1, [r4, #20]
4925:Middlewares/FreeRTOS/tasks.c **** 
 6820              		.loc 1 4925 17 is_stmt 1 discriminator 3 view .LVU1919
 6821 0116 1158     		ldr	r1, [r2, r0]
 6822 0118 0131     		adds	r1, r1, #1
 6823 011a 1150     		str	r1, [r2, r0]
 6824              	.LBE305:
4925:Middlewares/FreeRTOS/tasks.c **** 
 6825              		.loc 1 4925 17 discriminator 3 view .LVU1920
4925:Middlewares/FreeRTOS/tasks.c **** 
 6826              		.loc 1 4925 47 discriminator 3 view .LVU1921
4928:Middlewares/FreeRTOS/tasks.c **** 
 6827              		.loc 1 4928 17 discriminator 3 view .LVU1922
 6828 011c A36A     		ldr	r3, [r4, #40]
 6829 011e 5BB1     		cbz	r3, .L480
4928:Middlewares/FreeRTOS/tasks.c **** 
 6830              		.loc 1 4928 17 view .LVU1923
 6831              	.LBB306:
 6832              	.LBI306:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6833              		.loc 2 196 34 view .LVU1924
 6834              	.LBB307:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6835              		.loc 2 198 9 view .LVU1925
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6836              		.loc 2 200 9 view .LVU1926
 6837              		.syntax unified
 6838              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6839 0120 4FF01003 			mov r3, #16												
 6840 0124 83F31188 		msr basepri, r3											
 6841 0128 BFF36F8F 		isb														
 6842 012c BFF34F8F 		dsb														
 6843              	
 6844              	@ 0 "" 2
 6845              	.LVL468:
 6846              		.thumb
 6847              		.syntax unified
 6848              	.L481:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6849              		.loc 2 200 9 is_stmt 0 view .LVU1927
 6850              	.LBE307:
 6851              	.LBE306:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 251


4928:Middlewares/FreeRTOS/tasks.c **** 
 6852              		.loc 1 4928 17 is_stmt 1 discriminator 4 view .LVU1928
4928:Middlewares/FreeRTOS/tasks.c **** 
 6853              		.loc 1 4928 17 discriminator 4 view .LVU1929
 6854 0130 FEE7     		b	.L481
 6855              	.LVL469:
 6856              	.L489:
 6857              	.LBB308:
4924:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 6858              		.loc 1 4924 17 discriminator 1 view .LVU1930
 6859 0132 E268     		ldr	r2, [r4, #12]
 6860 0134 5A60     		str	r2, [r3, #4]
 6861 0136 D0E7     		b	.L479
 6862              	.LVL470:
 6863              	.L480:
4924:Middlewares/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 6864              		.loc 1 4924 17 is_stmt 0 discriminator 1 view .LVU1931
 6865              	.LBE308:
4928:Middlewares/FreeRTOS/tasks.c **** 
 6866              		.loc 1 4928 94 is_stmt 1 discriminator 2 view .LVU1932
4946:Middlewares/FreeRTOS/tasks.c ****                 {
 6867              		.loc 1 4946 17 discriminator 2 view .LVU1933
4946:Middlewares/FreeRTOS/tasks.c ****                 {
 6868              		.loc 1 4946 26 is_stmt 0 discriminator 2 view .LVU1934
 6869 0138 E26A     		ldr	r2, [r4, #44]
4946:Middlewares/FreeRTOS/tasks.c ****                 {
 6870              		.loc 1 4946 53 discriminator 2 view .LVU1935
 6871 013a 0D4B     		ldr	r3, .L490+12
 6872 013c 1B68     		ldr	r3, [r3]
 6873 013e DB6A     		ldr	r3, [r3, #44]
4946:Middlewares/FreeRTOS/tasks.c ****                 {
 6874              		.loc 1 4946 19 discriminator 2 view .LVU1936
 6875 0140 9A42     		cmp	r2, r3
 6876 0142 0DD9     		bls	.L484
4950:Middlewares/FreeRTOS/tasks.c ****                 }
 6877              		.loc 1 4950 21 is_stmt 1 view .LVU1937
 6878 0144 4FF0E023 		mov	r3, #-536813568
 6879 0148 4FF08052 		mov	r2, #268435456
 6880 014c C3F8042D 		str	r2, [r3, #3332]
 6881              	.LVL471:
4950:Middlewares/FreeRTOS/tasks.c ****                 }
 6882              		.loc 1 4950 21 view .LVU1938
 6883              		.syntax unified
 6884              	@ 4950 "Middlewares/FreeRTOS/tasks.c" 1
 6885 0150 BFF34F8F 		dsb
 6886              	@ 0 "" 2
4950:Middlewares/FreeRTOS/tasks.c ****                 }
 6887              		.loc 1 4950 21 view .LVU1939
 6888              	@ 4950 "Middlewares/FreeRTOS/tasks.c" 1
 6889 0154 BFF36F8F 		isb
 6890              	@ 0 "" 2
4950:Middlewares/FreeRTOS/tasks.c ****                 }
 6891              		.loc 1 4950 52 view .LVU1940
 6892              		.thumb
 6893              		.syntax unified
 6894 0158 0124     		movs	r4, #1
 6895              	.LVL472:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 252


4950:Middlewares/FreeRTOS/tasks.c ****                 }
 6896              		.loc 1 4950 52 is_stmt 0 view .LVU1941
 6897 015a 8DE7     		b	.L477
 6898              	.LVL473:
 6899              	.L482:
4897:Middlewares/FreeRTOS/tasks.c ****                     }
 6900              		.loc 1 4897 33 view .LVU1942
 6901 015c 0024     		movs	r4, #0
 6902              	.LVL474:
4897:Middlewares/FreeRTOS/tasks.c ****                     }
 6903              		.loc 1 4897 33 view .LVU1943
 6904 015e 8BE7     		b	.L477
 6905              	.LVL475:
 6906              	.L484:
4897:Middlewares/FreeRTOS/tasks.c ****                     }
 6907              		.loc 1 4897 33 view .LVU1944
 6908 0160 0124     		movs	r4, #1
 6909              	.LVL476:
4897:Middlewares/FreeRTOS/tasks.c ****                     }
 6910              		.loc 1 4897 33 view .LVU1945
 6911 0162 89E7     		b	.L477
 6912              	.L491:
 6913              		.align	2
 6914              	.L490:
 6915 0164 00000000 		.word	xTickCount
 6916 0168 00000000 		.word	uxTopReadyPriority
 6917 016c 00000000 		.word	pxReadyTasksLists
 6918 0170 00000000 		.word	pxCurrentTCB
 6919              		.cfi_endproc
 6920              	.LFE52:
 6922              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 6923              		.align	1
 6924              		.global	xTaskGenericNotifyFromISR
 6925              		.syntax unified
 6926              		.thumb
 6927              		.thumb_func
 6929              	xTaskGenericNotifyFromISR:
 6930              	.LVL477:
 6931              	.LFB53:
4978:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 6932              		.loc 1 4978 5 is_stmt 1 view -0
 6933              		.cfi_startproc
 6934              		@ args = 8, pretend = 0, frame = 0
 6935              		@ frame_needed = 0, uses_anonymous_args = 0
4978:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 6936              		.loc 1 4978 5 is_stmt 0 view .LVU1947
 6937 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6938              	.LCFI54:
 6939              		.cfi_def_cfa_offset 24
 6940              		.cfi_offset 3, -24
 6941              		.cfi_offset 4, -20
 6942              		.cfi_offset 5, -16
 6943              		.cfi_offset 6, -12
 6944              		.cfi_offset 7, -8
 6945              		.cfi_offset 14, -4
4979:Middlewares/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 6946              		.loc 1 4979 9 is_stmt 1 view .LVU1948
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 253


4980:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
 6947              		.loc 1 4980 9 view .LVU1949
4981:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 6948              		.loc 1 4981 9 view .LVU1950
 6949              	.LVL478:
4982:Middlewares/FreeRTOS/tasks.c **** 
 6950              		.loc 1 4982 9 view .LVU1951
4984:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6951              		.loc 1 4984 9 view .LVU1952
 6952 0002 68B1     		cbz	r0, .L518
 6953 0004 0C46     		mov	r4, r1
 6954 0006 1746     		mov	r7, r2
 6955 0008 1D46     		mov	r5, r3
 6956 000a 0646     		mov	r6, r0
4984:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6957              		.loc 1 4984 38 discriminator 2 view .LVU1953
4985:Middlewares/FreeRTOS/tasks.c **** 
 6958              		.loc 1 4985 9 discriminator 2 view .LVU1954
 6959 000c 89B1     		cbz	r1, .L495
4985:Middlewares/FreeRTOS/tasks.c **** 
 6960              		.loc 1 4985 9 view .LVU1955
 6961              	.LBB309:
 6962              	.LBI309:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6963              		.loc 2 196 34 view .LVU1956
 6964              	.LBB310:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6965              		.loc 2 198 9 view .LVU1957
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6966              		.loc 2 200 9 view .LVU1958
 6967              		.syntax unified
 6968              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6969 000e 4FF01003 			mov r3, #16												
 6970 0012 83F31188 		msr basepri, r3											
 6971 0016 BFF36F8F 		isb														
 6972 001a BFF34F8F 		dsb														
 6973              	
 6974              	@ 0 "" 2
 6975              	.LVL479:
 6976              		.thumb
 6977              		.syntax unified
 6978              	.L496:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6979              		.loc 2 200 9 is_stmt 0 view .LVU1959
 6980              	.LBE310:
 6981              	.LBE309:
4985:Middlewares/FreeRTOS/tasks.c **** 
 6982              		.loc 1 4985 9 is_stmt 1 discriminator 2 view .LVU1960
4985:Middlewares/FreeRTOS/tasks.c **** 
 6983              		.loc 1 4985 9 discriminator 2 view .LVU1961
 6984 001e FEE7     		b	.L496
 6985              	.LVL480:
 6986              	.L518:
4984:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6987              		.loc 1 4984 9 view .LVU1962
 6988              	.LBB311:
 6989              	.LBI311:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 254


 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6990              		.loc 2 196 34 view .LVU1963
 6991              	.LBB312:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6992              		.loc 2 198 9 view .LVU1964
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6993              		.loc 2 200 9 view .LVU1965
 6994              		.syntax unified
 6995              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6996 0020 4FF01003 			mov r3, #16												
 6997 0024 83F31188 		msr basepri, r3											
 6998 0028 BFF36F8F 		isb														
 6999 002c BFF34F8F 		dsb														
 7000              	
 7001              	@ 0 "" 2
 7002              	.LVL481:
 7003              		.thumb
 7004              		.syntax unified
 7005              	.L494:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7006              		.loc 2 200 9 is_stmt 0 view .LVU1966
 7007              	.LBE312:
 7008              	.LBE311:
4984:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7009              		.loc 1 4984 9 is_stmt 1 discriminator 1 view .LVU1967
4984:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7010              		.loc 1 4984 9 discriminator 1 view .LVU1968
 7011 0030 FEE7     		b	.L494
 7012              	.LVL482:
 7013              	.L495:
4985:Middlewares/FreeRTOS/tasks.c **** 
 7014              		.loc 1 4985 80 discriminator 2 view .LVU1969
5003:Middlewares/FreeRTOS/tasks.c **** 
 7015              		.loc 1 5003 9 discriminator 2 view .LVU1970
 7016 0032 FFF7FEFF 		bl	vPortValidateInterruptPriority
 7017              	.LVL483:
5005:Middlewares/FreeRTOS/tasks.c **** 
 7018              		.loc 1 5005 9 discriminator 2 view .LVU1971
5007:Middlewares/FreeRTOS/tasks.c ****         {
 7019              		.loc 1 5007 9 discriminator 2 view .LVU1972
 7020              	.LBB313:
 7021              	.LBI313:
 212:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7022              		.loc 2 212 38 discriminator 2 view .LVU1973
 7023              	.LBB314:
 214:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7024              		.loc 2 214 9 discriminator 2 view .LVU1974
 216:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7025              		.loc 2 216 9 discriminator 2 view .LVU1975
 7026              		.syntax unified
 7027              	@ 216 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7028 0036 EFF31181 			mrs r1, basepri											
 7029 003a 4FF01003 		mov r3, #16												
 7030 003e 83F31188 		msr basepri, r3											
 7031 0042 BFF36F8F 		isb														
 7032 0046 BFF34F8F 		dsb														
 7033              	
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 255


 7034              	@ 0 "" 2
 7035              	.LVL484:
 228:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 7036              		.loc 2 228 9 discriminator 2 view .LVU1976
 228:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 7037              		.loc 2 228 9 is_stmt 0 discriminator 2 view .LVU1977
 7038              		.thumb
 7039              		.syntax unified
 7040              	.LBE314:
 7041              	.LBE313:
5009:Middlewares/FreeRTOS/tasks.c ****             {
 7042              		.loc 1 5009 13 is_stmt 1 discriminator 2 view .LVU1978
5009:Middlewares/FreeRTOS/tasks.c ****             {
 7043              		.loc 1 5009 15 is_stmt 0 discriminator 2 view .LVU1979
 7044 004a 069B     		ldr	r3, [sp, #24]
 7045 004c 33B1     		cbz	r3, .L497
5011:Middlewares/FreeRTOS/tasks.c ****             }
 7046              		.loc 1 5011 17 is_stmt 1 view .LVU1980
5011:Middlewares/FreeRTOS/tasks.c ****             }
 7047              		.loc 1 5011 71 is_stmt 0 view .LVU1981
 7048 004e 04F11203 		add	r3, r4, #18
 7049 0052 06EB8303 		add	r3, r6, r3, lsl #2
 7050 0056 5B68     		ldr	r3, [r3, #4]
5011:Middlewares/FreeRTOS/tasks.c ****             }
 7051              		.loc 1 5011 47 view .LVU1982
 7052 0058 069A     		ldr	r2, [sp, #24]
 7053 005a 1360     		str	r3, [r2]
 7054              	.L497:
5014:Middlewares/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 7055              		.loc 1 5014 13 is_stmt 1 view .LVU1983
5014:Middlewares/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 7056              		.loc 1 5014 35 is_stmt 0 view .LVU1984
 7057 005c 3319     		adds	r3, r6, r4
 7058 005e 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 7059 0062 D2B2     		uxtb	r2, r2
 7060              	.LVL485:
5015:Middlewares/FreeRTOS/tasks.c **** 
 7061              		.loc 1 5015 13 is_stmt 1 view .LVU1985
5015:Middlewares/FreeRTOS/tasks.c **** 
 7062              		.loc 1 5015 53 is_stmt 0 view .LVU1986
 7063 0064 0220     		movs	r0, #2
 7064 0066 83F85000 		strb	r0, [r3, #80]
5017:Middlewares/FreeRTOS/tasks.c ****             {
 7065              		.loc 1 5017 13 is_stmt 1 view .LVU1987
 7066 006a 042D     		cmp	r5, #4
 7067 006c 27D8     		bhi	.L498
 7068 006e DFE805F0 		tbb	[pc, r5]
 7069              	.L500:
 7070 0072 0A       		.byte	(.L504-.L500)/2
 7071 0073 03       		.byte	(.L503-.L500)/2
 7072 0074 10       		.byte	(.L502-.L500)/2
 7073 0075 18       		.byte	(.L501-.L500)/2
 7074 0076 1E       		.byte	(.L499-.L500)/2
 7075 0077 00       		.p2align 1
 7076              	.L503:
5020:Middlewares/FreeRTOS/tasks.c ****                     break;
 7077              		.loc 1 5020 21 view .LVU1988
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 256


5020:Middlewares/FreeRTOS/tasks.c ****                     break;
 7078              		.loc 1 5020 43 is_stmt 0 view .LVU1989
 7079 0078 04F11203 		add	r3, r4, #18
 7080 007c 06EB8303 		add	r3, r6, r3, lsl #2
 7081 0080 5868     		ldr	r0, [r3, #4]
5020:Middlewares/FreeRTOS/tasks.c ****                     break;
 7082              		.loc 1 5020 63 view .LVU1990
 7083 0082 3843     		orrs	r0, r0, r7
 7084 0084 5860     		str	r0, [r3, #4]
5021:Middlewares/FreeRTOS/tasks.c **** 
 7085              		.loc 1 5021 21 is_stmt 1 view .LVU1991
 7086              	.L504:
5060:Middlewares/FreeRTOS/tasks.c **** 
 7087              		.loc 1 5060 57 view .LVU1992
5064:Middlewares/FreeRTOS/tasks.c ****             {
 7088              		.loc 1 5064 13 view .LVU1993
5064:Middlewares/FreeRTOS/tasks.c ****             {
 7089              		.loc 1 5064 15 is_stmt 0 view .LVU1994
 7090 0086 012A     		cmp	r2, #1
 7091 0088 26D0     		beq	.L519
 7092 008a 0120     		movs	r0, #1
 7093              	.LVL486:
 7094              	.L505:
5097:Middlewares/FreeRTOS/tasks.c ****                 }
 7095              		.loc 1 5097 45 is_stmt 1 view .LVU1995
5101:Middlewares/FreeRTOS/tasks.c **** 
 7096              		.loc 1 5101 9 view .LVU1996
 7097              	.LBB315:
 7098              	.LBI315:
 232:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7099              		.loc 2 232 34 view .LVU1997
 7100              	.LBB316:
 7101              		.loc 2 234 9 view .LVU1998
 7102              		.syntax unified
 7103              	@ 234 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7104 008c 81F31188 			msr basepri, r1	
 7105              	@ 0 "" 2
 7106              		.thumb
 7107              		.syntax unified
 7108              	.LBE316:
 7109              	.LBE315:
5103:Middlewares/FreeRTOS/tasks.c ****     }
 7110              		.loc 1 5103 9 view .LVU1999
5104:Middlewares/FreeRTOS/tasks.c **** 
 7111              		.loc 1 5104 5 is_stmt 0 view .LVU2000
 7112 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7113              	.LVL487:
 7114              	.L502:
5024:Middlewares/FreeRTOS/tasks.c ****                     break;
 7115              		.loc 1 5024 21 is_stmt 1 view .LVU2001
5024:Middlewares/FreeRTOS/tasks.c ****                     break;
 7116              		.loc 1 5024 45 is_stmt 0 view .LVU2002
 7117 0092 04F11203 		add	r3, r4, #18
 7118 0096 06EB8303 		add	r3, r6, r3, lsl #2
 7119 009a 5868     		ldr	r0, [r3, #4]
5024:Middlewares/FreeRTOS/tasks.c ****                     break;
 7120              		.loc 1 5024 66 view .LVU2003
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 257


 7121 009c 0130     		adds	r0, r0, #1
 7122 009e 5860     		str	r0, [r3, #4]
5025:Middlewares/FreeRTOS/tasks.c **** 
 7123              		.loc 1 5025 21 is_stmt 1 view .LVU2004
 7124 00a0 F1E7     		b	.L504
 7125              	.L501:
5028:Middlewares/FreeRTOS/tasks.c ****                     break;
 7126              		.loc 1 5028 21 view .LVU2005
5028:Middlewares/FreeRTOS/tasks.c ****                     break;
 7127              		.loc 1 5028 63 is_stmt 0 view .LVU2006
 7128 00a2 04F11203 		add	r3, r4, #18
 7129 00a6 06EB8303 		add	r3, r6, r3, lsl #2
 7130 00aa 5F60     		str	r7, [r3, #4]
5029:Middlewares/FreeRTOS/tasks.c **** 
 7131              		.loc 1 5029 21 is_stmt 1 view .LVU2007
 7132 00ac EBE7     		b	.L504
 7133              	.L499:
5033:Middlewares/FreeRTOS/tasks.c ****                     {
 7134              		.loc 1 5033 21 view .LVU2008
5033:Middlewares/FreeRTOS/tasks.c ****                     {
 7135              		.loc 1 5033 23 is_stmt 0 view .LVU2009
 7136 00ae 022A     		cmp	r2, #2
 7137 00b0 6CD0     		beq	.L513
5035:Middlewares/FreeRTOS/tasks.c ****                     }
 7138              		.loc 1 5035 25 is_stmt 1 view .LVU2010
5035:Middlewares/FreeRTOS/tasks.c ****                     }
 7139              		.loc 1 5035 67 is_stmt 0 view .LVU2011
 7140 00b2 04F11203 		add	r3, r4, #18
 7141 00b6 06EB8303 		add	r3, r6, r3, lsl #2
 7142 00ba 5F60     		str	r7, [r3, #4]
 7143 00bc E3E7     		b	.L504
 7144              	.L498:
5056:Middlewares/FreeRTOS/tasks.c ****                     break;
 7145              		.loc 1 5056 21 is_stmt 1 view .LVU2012
 7146 00be 354B     		ldr	r3, .L521
 7147 00c0 1B68     		ldr	r3, [r3]
 7148 00c2 002B     		cmp	r3, #0
 7149 00c4 DFD0     		beq	.L504
5056:Middlewares/FreeRTOS/tasks.c ****                     break;
 7150              		.loc 1 5056 21 view .LVU2013
 7151              	.LBB317:
 7152              	.LBI317:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7153              		.loc 2 196 34 view .LVU2014
 7154              	.LBB318:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7155              		.loc 2 198 9 view .LVU2015
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7156              		.loc 2 200 9 view .LVU2016
 7157              		.syntax unified
 7158              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7159 00c6 4FF01003 			mov r3, #16												
 7160 00ca 83F31188 		msr basepri, r3											
 7161 00ce BFF36F8F 		isb														
 7162 00d2 BFF34F8F 		dsb														
 7163              	
 7164              	@ 0 "" 2
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 258


 7165              	.LVL488:
 7166              		.thumb
 7167              		.syntax unified
 7168              	.L506:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7169              		.loc 2 200 9 is_stmt 0 view .LVU2017
 7170              	.LBE318:
 7171              	.LBE317:
5056:Middlewares/FreeRTOS/tasks.c ****                     break;
 7172              		.loc 1 5056 21 is_stmt 1 discriminator 3 view .LVU2018
5056:Middlewares/FreeRTOS/tasks.c ****                     break;
 7173              		.loc 1 5056 21 discriminator 3 view .LVU2019
 7174 00d6 FEE7     		b	.L506
 7175              	.L519:
5067:Middlewares/FreeRTOS/tasks.c **** 
 7176              		.loc 1 5067 17 view .LVU2020
 7177 00d8 B36A     		ldr	r3, [r6, #40]
 7178 00da 43B1     		cbz	r3, .L507
5067:Middlewares/FreeRTOS/tasks.c **** 
 7179              		.loc 1 5067 17 view .LVU2021
 7180              	.LBB319:
 7181              	.LBI319:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7182              		.loc 2 196 34 view .LVU2022
 7183              	.LBB320:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7184              		.loc 2 198 9 view .LVU2023
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7185              		.loc 2 200 9 view .LVU2024
 7186              		.syntax unified
 7187              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7188 00dc 4FF01003 			mov r3, #16												
 7189 00e0 83F31188 		msr basepri, r3											
 7190 00e4 BFF36F8F 		isb														
 7191 00e8 BFF34F8F 		dsb														
 7192              	
 7193              	@ 0 "" 2
 7194              	.LVL489:
 7195              		.thumb
 7196              		.syntax unified
 7197              	.L508:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7198              		.loc 2 200 9 is_stmt 0 view .LVU2025
 7199              	.LBE320:
 7200              	.LBE319:
5067:Middlewares/FreeRTOS/tasks.c **** 
 7201              		.loc 1 5067 17 is_stmt 1 discriminator 4 view .LVU2026
5067:Middlewares/FreeRTOS/tasks.c **** 
 7202              		.loc 1 5067 17 discriminator 4 view .LVU2027
 7203 00ec FEE7     		b	.L508
 7204              	.L507:
5067:Middlewares/FreeRTOS/tasks.c **** 
 7205              		.loc 1 5067 94 discriminator 2 view .LVU2028
5069:Middlewares/FreeRTOS/tasks.c ****                 {
 7206              		.loc 1 5069 17 discriminator 2 view .LVU2029
5069:Middlewares/FreeRTOS/tasks.c ****                 {
 7207              		.loc 1 5069 42 is_stmt 0 discriminator 2 view .LVU2030
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 259


 7208 00ee 2A4B     		ldr	r3, .L521+4
 7209 00f0 1B68     		ldr	r3, [r3]
5069:Middlewares/FreeRTOS/tasks.c ****                 {
 7210              		.loc 1 5069 19 discriminator 2 view .LVU2031
 7211 00f2 002B     		cmp	r3, #0
 7212 00f4 3CD1     		bne	.L509
 7213              	.LBB321:
5071:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7214              		.loc 1 5071 21 is_stmt 1 view .LVU2032
 7215 00f6 7369     		ldr	r3, [r6, #20]
 7216              	.LVL490:
5071:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7217              		.loc 1 5071 21 view .LVU2033
 7218 00f8 B068     		ldr	r0, [r6, #8]
 7219 00fa F268     		ldr	r2, [r6, #12]
 7220              	.LVL491:
5071:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7221              		.loc 1 5071 21 is_stmt 0 view .LVU2034
 7222 00fc 8260     		str	r2, [r0, #8]
5071:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7223              		.loc 1 5071 21 is_stmt 1 view .LVU2035
 7224 00fe B068     		ldr	r0, [r6, #8]
 7225 0100 5060     		str	r0, [r2, #4]
5071:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7226              		.loc 1 5071 21 view .LVU2036
 7227 0102 5A68     		ldr	r2, [r3, #4]
 7228 0104 301D     		adds	r0, r6, #4
 7229 0106 8242     		cmp	r2, r0
 7230 0108 2FD0     		beq	.L520
 7231              	.L510:
5071:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7232              		.loc 1 5071 21 discriminator 3 view .LVU2037
 7233 010a 0022     		movs	r2, #0
 7234 010c 7261     		str	r2, [r6, #20]
5071:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7235              		.loc 1 5071 21 discriminator 3 view .LVU2038
 7236 010e 1A68     		ldr	r2, [r3]
 7237 0110 013A     		subs	r2, r2, #1
 7238 0112 1A60     		str	r2, [r3]
 7239              	.LBE321:
5071:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7240              		.loc 1 5071 66 discriminator 3 view .LVU2039
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7241              		.loc 1 5072 21 discriminator 3 view .LVU2040
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7242              		.loc 1 5072 21 discriminator 3 view .LVU2041
 7243 0114 F36A     		ldr	r3, [r6, #44]
 7244              	.LVL492:
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7245              		.loc 1 5072 21 is_stmt 0 discriminator 3 view .LVU2042
 7246 0116 0122     		movs	r2, #1
 7247 0118 9A40     		lsls	r2, r2, r3
 7248 011a 204C     		ldr	r4, .L521+8
 7249              	.LVL493:
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7250              		.loc 1 5072 21 discriminator 3 view .LVU2043
 7251 011c 2568     		ldr	r5, [r4]
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 260


 7252 011e 2A43     		orrs	r2, r2, r5
 7253 0120 2260     		str	r2, [r4]
 7254              	.LBB322:
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7255              		.loc 1 5072 21 is_stmt 1 discriminator 3 view .LVU2044
 7256 0122 1F4A     		ldr	r2, .L521+12
 7257 0124 03EB8303 		add	r3, r3, r3, lsl #2
 7258 0128 02EB8303 		add	r3, r2, r3, lsl #2
 7259 012c 5B68     		ldr	r3, [r3, #4]
 7260              	.LVL494:
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7261              		.loc 1 5072 21 discriminator 3 view .LVU2045
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7262              		.loc 1 5072 21 discriminator 3 view .LVU2046
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7263              		.loc 1 5072 21 discriminator 3 view .LVU2047
 7264 012e B360     		str	r3, [r6, #8]
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7265              		.loc 1 5072 21 discriminator 3 view .LVU2048
 7266 0130 9C68     		ldr	r4, [r3, #8]
 7267 0132 F460     		str	r4, [r6, #12]
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7268              		.loc 1 5072 21 discriminator 3 view .LVU2049
 7269 0134 6060     		str	r0, [r4, #4]
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7270              		.loc 1 5072 21 discriminator 3 view .LVU2050
 7271 0136 9860     		str	r0, [r3, #8]
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7272              		.loc 1 5072 21 discriminator 3 view .LVU2051
 7273 0138 F36A     		ldr	r3, [r6, #44]
 7274              	.LVL495:
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7275              		.loc 1 5072 21 is_stmt 0 discriminator 3 view .LVU2052
 7276 013a 03EB8300 		add	r0, r3, r3, lsl #2
 7277 013e 8400     		lsls	r4, r0, #2
 7278 0140 02EB8000 		add	r0, r2, r0, lsl #2
 7279 0144 7061     		str	r0, [r6, #20]
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7280              		.loc 1 5072 21 is_stmt 1 discriminator 3 view .LVU2053
 7281 0146 1059     		ldr	r0, [r2, r4]
 7282 0148 0130     		adds	r0, r0, #1
 7283 014a 1051     		str	r0, [r2, r4]
 7284              	.LBE322:
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7285              		.loc 1 5072 21 discriminator 3 view .LVU2054
5072:Middlewares/FreeRTOS/tasks.c ****                 }
 7286              		.loc 1 5072 51 discriminator 3 view .LVU2055
 7287              	.LVL496:
 7288              	.L511:
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7289              		.loc 1 5078 89 discriminator 1 view .LVU2056
5081:Middlewares/FreeRTOS/tasks.c ****                 {
 7290              		.loc 1 5081 17 discriminator 1 view .LVU2057
5081:Middlewares/FreeRTOS/tasks.c ****                 {
 7291              		.loc 1 5081 26 is_stmt 0 discriminator 1 view .LVU2058
 7292 014c F26A     		ldr	r2, [r6, #44]
5081:Middlewares/FreeRTOS/tasks.c ****                 {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 261


 7293              		.loc 1 5081 53 discriminator 1 view .LVU2059
 7294 014e 154B     		ldr	r3, .L521+16
 7295 0150 1B68     		ldr	r3, [r3]
 7296 0152 DB6A     		ldr	r3, [r3, #44]
5081:Middlewares/FreeRTOS/tasks.c ****                 {
 7297              		.loc 1 5081 19 discriminator 1 view .LVU2060
 7298 0154 9A42     		cmp	r2, r3
 7299 0156 1BD9     		bls	.L515
5085:Middlewares/FreeRTOS/tasks.c ****                     {
 7300              		.loc 1 5085 21 is_stmt 1 view .LVU2061
5085:Middlewares/FreeRTOS/tasks.c ****                     {
 7301              		.loc 1 5085 23 is_stmt 0 view .LVU2062
 7302 0158 079B     		ldr	r3, [sp, #28]
 7303 015a 13B1     		cbz	r3, .L512
5087:Middlewares/FreeRTOS/tasks.c ****                     }
 7304              		.loc 1 5087 25 is_stmt 1 view .LVU2063
5087:Middlewares/FreeRTOS/tasks.c ****                     }
 7305              		.loc 1 5087 52 is_stmt 0 view .LVU2064
 7306 015c 0123     		movs	r3, #1
 7307 015e 079A     		ldr	r2, [sp, #28]
 7308 0160 1360     		str	r3, [r2]
 7309              	.L512:
5093:Middlewares/FreeRTOS/tasks.c ****                 }
 7310              		.loc 1 5093 21 is_stmt 1 view .LVU2065
5093:Middlewares/FreeRTOS/tasks.c ****                 }
 7311              		.loc 1 5093 35 is_stmt 0 view .LVU2066
 7312 0162 0120     		movs	r0, #1
 7313 0164 104B     		ldr	r3, .L521+20
 7314 0166 1860     		str	r0, [r3]
 7315 0168 90E7     		b	.L505
 7316              	.LVL497:
 7317              	.L520:
 7318              	.LBB323:
5071:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7319              		.loc 1 5071 21 is_stmt 1 discriminator 1 view .LVU2067
 7320 016a F268     		ldr	r2, [r6, #12]
 7321 016c 5A60     		str	r2, [r3, #4]
 7322 016e CCE7     		b	.L510
 7323              	.LVL498:
 7324              	.L509:
5071:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7325              		.loc 1 5071 21 is_stmt 0 discriminator 1 view .LVU2068
 7326              	.LBE323:
 7327              	.LBB324:
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7328              		.loc 1 5078 21 is_stmt 1 view .LVU2069
 7329 0170 0E4B     		ldr	r3, .L521+24
 7330 0172 5A68     		ldr	r2, [r3, #4]
 7331              	.LVL499:
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7332              		.loc 1 5078 21 view .LVU2070
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7333              		.loc 1 5078 21 view .LVU2071
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7334              		.loc 1 5078 21 view .LVU2072
 7335 0174 F261     		str	r2, [r6, #28]
5078:Middlewares/FreeRTOS/tasks.c ****                 }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 262


 7336              		.loc 1 5078 21 view .LVU2073
 7337 0176 9468     		ldr	r4, [r2, #8]
 7338              	.LVL500:
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7339              		.loc 1 5078 21 is_stmt 0 view .LVU2074
 7340 0178 3462     		str	r4, [r6, #32]
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7341              		.loc 1 5078 21 is_stmt 1 view .LVU2075
 7342 017a 06F11800 		add	r0, r6, #24
 7343 017e 6060     		str	r0, [r4, #4]
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7344              		.loc 1 5078 21 view .LVU2076
 7345 0180 9060     		str	r0, [r2, #8]
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7346              		.loc 1 5078 21 view .LVU2077
 7347 0182 B362     		str	r3, [r6, #40]
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7348              		.loc 1 5078 21 view .LVU2078
 7349 0184 1A68     		ldr	r2, [r3]
 7350              	.LVL501:
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7351              		.loc 1 5078 21 is_stmt 0 view .LVU2079
 7352 0186 0132     		adds	r2, r2, #1
 7353 0188 1A60     		str	r2, [r3]
 7354 018a DFE7     		b	.L511
 7355              	.LVL502:
 7356              	.L513:
5078:Middlewares/FreeRTOS/tasks.c ****                 }
 7357              		.loc 1 5078 21 view .LVU2080
 7358              	.LBE324:
5040:Middlewares/FreeRTOS/tasks.c ****                     }
 7359              		.loc 1 5040 33 view .LVU2081
 7360 018c 0020     		movs	r0, #0
 7361 018e 7DE7     		b	.L505
 7362              	.LVL503:
 7363              	.L515:
5040:Middlewares/FreeRTOS/tasks.c ****                     }
 7364              		.loc 1 5040 33 view .LVU2082
 7365 0190 0120     		movs	r0, #1
 7366 0192 7BE7     		b	.L505
 7367              	.L522:
 7368              		.align	2
 7369              	.L521:
 7370 0194 00000000 		.word	xTickCount
 7371 0198 00000000 		.word	uxSchedulerSuspended
 7372 019c 00000000 		.word	uxTopReadyPriority
 7373 01a0 00000000 		.word	pxReadyTasksLists
 7374 01a4 00000000 		.word	pxCurrentTCB
 7375 01a8 00000000 		.word	xYieldPending
 7376 01ac 00000000 		.word	xPendingReadyList
 7377              		.cfi_endproc
 7378              	.LFE53:
 7380              		.section	.text.vTaskGenericNotifyGiveFromISR,"ax",%progbits
 7381              		.align	1
 7382              		.global	vTaskGenericNotifyGiveFromISR
 7383              		.syntax unified
 7384              		.thumb
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 263


 7385              		.thumb_func
 7387              	vTaskGenericNotifyGiveFromISR:
 7388              	.LVL504:
 7389              	.LFB54:
5114:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7390              		.loc 1 5114 5 is_stmt 1 view -0
 7391              		.cfi_startproc
 7392              		@ args = 0, pretend = 0, frame = 0
 7393              		@ frame_needed = 0, uses_anonymous_args = 0
5114:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7394              		.loc 1 5114 5 is_stmt 0 view .LVU2084
 7395 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7396              	.LCFI55:
 7397              		.cfi_def_cfa_offset 24
 7398              		.cfi_offset 3, -24
 7399              		.cfi_offset 4, -20
 7400              		.cfi_offset 5, -16
 7401              		.cfi_offset 6, -12
 7402              		.cfi_offset 7, -8
 7403              		.cfi_offset 14, -4
5115:Middlewares/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 7404              		.loc 1 5115 9 is_stmt 1 view .LVU2085
5116:Middlewares/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 7405              		.loc 1 5116 9 view .LVU2086
5117:Middlewares/FreeRTOS/tasks.c **** 
 7406              		.loc 1 5117 9 view .LVU2087
5119:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7407              		.loc 1 5119 9 view .LVU2088
 7408 0002 60B1     		cbz	r0, .L536
 7409 0004 0C46     		mov	r4, r1
 7410 0006 1546     		mov	r5, r2
 7411 0008 0646     		mov	r6, r0
5119:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7412              		.loc 1 5119 38 discriminator 2 view .LVU2089
5120:Middlewares/FreeRTOS/tasks.c **** 
 7413              		.loc 1 5120 9 discriminator 2 view .LVU2090
 7414 000a 89B1     		cbz	r1, .L526
5120:Middlewares/FreeRTOS/tasks.c **** 
 7415              		.loc 1 5120 9 view .LVU2091
 7416              	.LBB325:
 7417              	.LBI325:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7418              		.loc 2 196 34 view .LVU2092
 7419              	.LBB326:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7420              		.loc 2 198 9 view .LVU2093
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7421              		.loc 2 200 9 view .LVU2094
 7422              		.syntax unified
 7423              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7424 000c 4FF01003 			mov r3, #16												
 7425 0010 83F31188 		msr basepri, r3											
 7426 0014 BFF36F8F 		isb														
 7427 0018 BFF34F8F 		dsb														
 7428              	
 7429              	@ 0 "" 2
 7430              	.LVL505:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 264


 7431              		.thumb
 7432              		.syntax unified
 7433              	.L527:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7434              		.loc 2 200 9 is_stmt 0 view .LVU2095
 7435              	.LBE326:
 7436              	.LBE325:
5120:Middlewares/FreeRTOS/tasks.c **** 
 7437              		.loc 1 5120 9 is_stmt 1 discriminator 2 view .LVU2096
5120:Middlewares/FreeRTOS/tasks.c **** 
 7438              		.loc 1 5120 9 discriminator 2 view .LVU2097
 7439 001c FEE7     		b	.L527
 7440              	.L536:
5119:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7441              		.loc 1 5119 9 view .LVU2098
 7442              	.LBB327:
 7443              	.LBI327:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7444              		.loc 2 196 34 view .LVU2099
 7445              	.LBB328:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7446              		.loc 2 198 9 view .LVU2100
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7447              		.loc 2 200 9 view .LVU2101
 7448              		.syntax unified
 7449              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7450 001e 4FF01003 			mov r3, #16												
 7451 0022 83F31188 		msr basepri, r3											
 7452 0026 BFF36F8F 		isb														
 7453 002a BFF34F8F 		dsb														
 7454              	
 7455              	@ 0 "" 2
 7456              	.LVL506:
 7457              		.thumb
 7458              		.syntax unified
 7459              	.L525:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7460              		.loc 2 200 9 is_stmt 0 view .LVU2102
 7461              	.LBE328:
 7462              	.LBE327:
5119:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7463              		.loc 1 5119 9 is_stmt 1 discriminator 1 view .LVU2103
5119:Middlewares/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7464              		.loc 1 5119 9 discriminator 1 view .LVU2104
 7465 002e FEE7     		b	.L525
 7466              	.L526:
5120:Middlewares/FreeRTOS/tasks.c **** 
 7467              		.loc 1 5120 80 discriminator 2 view .LVU2105
5138:Middlewares/FreeRTOS/tasks.c **** 
 7468              		.loc 1 5138 9 discriminator 2 view .LVU2106
 7469 0030 FFF7FEFF 		bl	vPortValidateInterruptPriority
 7470              	.LVL507:
5140:Middlewares/FreeRTOS/tasks.c **** 
 7471              		.loc 1 5140 9 discriminator 2 view .LVU2107
5142:Middlewares/FreeRTOS/tasks.c ****         {
 7472              		.loc 1 5142 9 discriminator 2 view .LVU2108
 7473              	.LBB329:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 265


 7474              	.LBI329:
 212:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7475              		.loc 2 212 38 discriminator 2 view .LVU2109
 7476              	.LBB330:
 214:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7477              		.loc 2 214 9 discriminator 2 view .LVU2110
 216:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7478              		.loc 2 216 9 discriminator 2 view .LVU2111
 7479              		.syntax unified
 7480              	@ 216 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7481 0034 EFF31180 			mrs r0, basepri											
 7482 0038 4FF01003 		mov r3, #16												
 7483 003c 83F31188 		msr basepri, r3											
 7484 0040 BFF36F8F 		isb														
 7485 0044 BFF34F8F 		dsb														
 7486              	
 7487              	@ 0 "" 2
 7488              	.LVL508:
 228:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 7489              		.loc 2 228 9 discriminator 2 view .LVU2112
 228:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 7490              		.loc 2 228 9 is_stmt 0 discriminator 2 view .LVU2113
 7491              		.thumb
 7492              		.syntax unified
 7493              	.LBE330:
 7494              	.LBE329:
5144:Middlewares/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 7495              		.loc 1 5144 13 is_stmt 1 discriminator 2 view .LVU2114
5144:Middlewares/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 7496              		.loc 1 5144 35 is_stmt 0 discriminator 2 view .LVU2115
 7497 0048 3319     		adds	r3, r6, r4
 7498 004a 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 7499 004e D2B2     		uxtb	r2, r2
 7500              	.LVL509:
5145:Middlewares/FreeRTOS/tasks.c **** 
 7501              		.loc 1 5145 13 is_stmt 1 discriminator 2 view .LVU2116
5145:Middlewares/FreeRTOS/tasks.c **** 
 7502              		.loc 1 5145 53 is_stmt 0 discriminator 2 view .LVU2117
 7503 0050 0221     		movs	r1, #2
 7504 0052 83F85010 		strb	r1, [r3, #80]
5149:Middlewares/FreeRTOS/tasks.c **** 
 7505              		.loc 1 5149 13 is_stmt 1 discriminator 2 view .LVU2118
5149:Middlewares/FreeRTOS/tasks.c **** 
 7506              		.loc 1 5149 37 is_stmt 0 discriminator 2 view .LVU2119
 7507 0056 04F11203 		add	r3, r4, #18
 7508 005a 06EB8303 		add	r3, r6, r3, lsl #2
 7509 005e 5968     		ldr	r1, [r3, #4]
5149:Middlewares/FreeRTOS/tasks.c **** 
 7510              		.loc 1 5149 58 discriminator 2 view .LVU2120
 7511 0060 0131     		adds	r1, r1, #1
 7512 0062 5960     		str	r1, [r3, #4]
5151:Middlewares/FreeRTOS/tasks.c **** 
 7513              		.loc 1 5151 62 is_stmt 1 discriminator 2 view .LVU2121
5155:Middlewares/FreeRTOS/tasks.c ****             {
 7514              		.loc 1 5155 13 discriminator 2 view .LVU2122
5155:Middlewares/FreeRTOS/tasks.c ****             {
 7515              		.loc 1 5155 15 is_stmt 0 discriminator 2 view .LVU2123
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 266


 7516 0064 012A     		cmp	r2, #1
 7517 0066 02D0     		beq	.L537
 7518              	.LVL510:
 7519              	.L528:
5188:Middlewares/FreeRTOS/tasks.c ****                 }
 7520              		.loc 1 5188 45 is_stmt 1 view .LVU2124
5192:Middlewares/FreeRTOS/tasks.c ****     }
 7521              		.loc 1 5192 9 view .LVU2125
 7522              	.LBB331:
 7523              	.LBI331:
 232:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7524              		.loc 2 232 34 view .LVU2126
 7525              	.LBB332:
 7526              		.loc 2 234 9 view .LVU2127
 7527              		.syntax unified
 7528              	@ 234 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7529 0068 80F31188 			msr basepri, r0	
 7530              	@ 0 "" 2
 7531              		.thumb
 7532              		.syntax unified
 7533              	.LBE332:
 7534              	.LBE331:
5193:Middlewares/FreeRTOS/tasks.c **** 
 7535              		.loc 1 5193 5 is_stmt 0 view .LVU2128
 7536 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7537              	.LVL511:
 7538              	.L537:
5158:Middlewares/FreeRTOS/tasks.c **** 
 7539              		.loc 1 5158 17 is_stmt 1 view .LVU2129
 7540 006e B36A     		ldr	r3, [r6, #40]
 7541 0070 43B1     		cbz	r3, .L529
5158:Middlewares/FreeRTOS/tasks.c **** 
 7542              		.loc 1 5158 17 view .LVU2130
 7543              	.LBB333:
 7544              	.LBI333:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7545              		.loc 2 196 34 view .LVU2131
 7546              	.LBB334:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7547              		.loc 2 198 9 view .LVU2132
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7548              		.loc 2 200 9 view .LVU2133
 7549              		.syntax unified
 7550              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7551 0072 4FF01003 			mov r3, #16												
 7552 0076 83F31188 		msr basepri, r3											
 7553 007a BFF36F8F 		isb														
 7554 007e BFF34F8F 		dsb														
 7555              	
 7556              	@ 0 "" 2
 7557              	.LVL512:
 7558              		.thumb
 7559              		.syntax unified
 7560              	.L530:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7561              		.loc 2 200 9 is_stmt 0 view .LVU2134
 7562              	.LBE334:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 267


 7563              	.LBE333:
5158:Middlewares/FreeRTOS/tasks.c **** 
 7564              		.loc 1 5158 17 is_stmt 1 discriminator 3 view .LVU2135
5158:Middlewares/FreeRTOS/tasks.c **** 
 7565              		.loc 1 5158 17 discriminator 3 view .LVU2136
 7566 0082 FEE7     		b	.L530
 7567              	.L529:
5158:Middlewares/FreeRTOS/tasks.c **** 
 7568              		.loc 1 5158 94 discriminator 2 view .LVU2137
5160:Middlewares/FreeRTOS/tasks.c ****                 {
 7569              		.loc 1 5160 17 discriminator 2 view .LVU2138
5160:Middlewares/FreeRTOS/tasks.c ****                 {
 7570              		.loc 1 5160 42 is_stmt 0 discriminator 2 view .LVU2139
 7571 0084 264B     		ldr	r3, .L539
 7572 0086 1B68     		ldr	r3, [r3]
5160:Middlewares/FreeRTOS/tasks.c ****                 {
 7573              		.loc 1 5160 19 discriminator 2 view .LVU2140
 7574 0088 002B     		cmp	r3, #0
 7575 008a 3AD1     		bne	.L531
 7576              	.LBB335:
5162:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7577              		.loc 1 5162 21 is_stmt 1 view .LVU2141
 7578 008c 7369     		ldr	r3, [r6, #20]
 7579              	.LVL513:
5162:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7580              		.loc 1 5162 21 view .LVU2142
 7581 008e B168     		ldr	r1, [r6, #8]
 7582 0090 F268     		ldr	r2, [r6, #12]
 7583              	.LVL514:
5162:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7584              		.loc 1 5162 21 is_stmt 0 view .LVU2143
 7585 0092 8A60     		str	r2, [r1, #8]
5162:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7586              		.loc 1 5162 21 is_stmt 1 view .LVU2144
 7587 0094 B168     		ldr	r1, [r6, #8]
 7588 0096 5160     		str	r1, [r2, #4]
5162:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7589              		.loc 1 5162 21 view .LVU2145
 7590 0098 5A68     		ldr	r2, [r3, #4]
 7591 009a 311D     		adds	r1, r6, #4
 7592 009c 8A42     		cmp	r2, r1
 7593 009e 2DD0     		beq	.L538
 7594              	.L532:
5162:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7595              		.loc 1 5162 21 discriminator 3 view .LVU2146
 7596 00a0 0022     		movs	r2, #0
 7597 00a2 7261     		str	r2, [r6, #20]
5162:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7598              		.loc 1 5162 21 discriminator 3 view .LVU2147
 7599 00a4 1A68     		ldr	r2, [r3]
 7600 00a6 013A     		subs	r2, r2, #1
 7601 00a8 1A60     		str	r2, [r3]
 7602              	.LBE335:
5162:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7603              		.loc 1 5162 66 discriminator 3 view .LVU2148
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7604              		.loc 1 5163 21 discriminator 3 view .LVU2149
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 268


5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7605              		.loc 1 5163 21 discriminator 3 view .LVU2150
 7606 00aa F36A     		ldr	r3, [r6, #44]
 7607              	.LVL515:
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7608              		.loc 1 5163 21 is_stmt 0 discriminator 3 view .LVU2151
 7609 00ac 0122     		movs	r2, #1
 7610 00ae 9A40     		lsls	r2, r2, r3
 7611 00b0 1C4C     		ldr	r4, .L539+4
 7612              	.LVL516:
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7613              		.loc 1 5163 21 discriminator 3 view .LVU2152
 7614 00b2 2768     		ldr	r7, [r4]
 7615 00b4 3A43     		orrs	r2, r2, r7
 7616 00b6 2260     		str	r2, [r4]
 7617              	.LBB336:
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7618              		.loc 1 5163 21 is_stmt 1 discriminator 3 view .LVU2153
 7619 00b8 1B4A     		ldr	r2, .L539+8
 7620 00ba 03EB8303 		add	r3, r3, r3, lsl #2
 7621 00be 02EB8303 		add	r3, r2, r3, lsl #2
 7622 00c2 5B68     		ldr	r3, [r3, #4]
 7623              	.LVL517:
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7624              		.loc 1 5163 21 discriminator 3 view .LVU2154
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7625              		.loc 1 5163 21 discriminator 3 view .LVU2155
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7626              		.loc 1 5163 21 discriminator 3 view .LVU2156
 7627 00c4 B360     		str	r3, [r6, #8]
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7628              		.loc 1 5163 21 discriminator 3 view .LVU2157
 7629 00c6 9C68     		ldr	r4, [r3, #8]
 7630 00c8 F460     		str	r4, [r6, #12]
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7631              		.loc 1 5163 21 discriminator 3 view .LVU2158
 7632 00ca 6160     		str	r1, [r4, #4]
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7633              		.loc 1 5163 21 discriminator 3 view .LVU2159
 7634 00cc 9960     		str	r1, [r3, #8]
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7635              		.loc 1 5163 21 discriminator 3 view .LVU2160
 7636 00ce F36A     		ldr	r3, [r6, #44]
 7637              	.LVL518:
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7638              		.loc 1 5163 21 is_stmt 0 discriminator 3 view .LVU2161
 7639 00d0 03EB8301 		add	r1, r3, r3, lsl #2
 7640 00d4 8C00     		lsls	r4, r1, #2
 7641 00d6 02EB8101 		add	r1, r2, r1, lsl #2
 7642 00da 7161     		str	r1, [r6, #20]
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7643              		.loc 1 5163 21 is_stmt 1 discriminator 3 view .LVU2162
 7644 00dc 1159     		ldr	r1, [r2, r4]
 7645 00de 0131     		adds	r1, r1, #1
 7646 00e0 1151     		str	r1, [r2, r4]
 7647              	.LBE336:
5163:Middlewares/FreeRTOS/tasks.c ****                 }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 269


 7648              		.loc 1 5163 21 discriminator 3 view .LVU2163
5163:Middlewares/FreeRTOS/tasks.c ****                 }
 7649              		.loc 1 5163 51 discriminator 3 view .LVU2164
 7650              	.LVL519:
 7651              	.L533:
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7652              		.loc 1 5169 89 discriminator 1 view .LVU2165
5172:Middlewares/FreeRTOS/tasks.c ****                 {
 7653              		.loc 1 5172 17 discriminator 1 view .LVU2166
5172:Middlewares/FreeRTOS/tasks.c ****                 {
 7654              		.loc 1 5172 26 is_stmt 0 discriminator 1 view .LVU2167
 7655 00e2 F26A     		ldr	r2, [r6, #44]
5172:Middlewares/FreeRTOS/tasks.c ****                 {
 7656              		.loc 1 5172 53 discriminator 1 view .LVU2168
 7657 00e4 114B     		ldr	r3, .L539+12
 7658 00e6 1B68     		ldr	r3, [r3]
 7659 00e8 DB6A     		ldr	r3, [r3, #44]
5172:Middlewares/FreeRTOS/tasks.c ****                 {
 7660              		.loc 1 5172 19 discriminator 1 view .LVU2169
 7661 00ea 9A42     		cmp	r2, r3
 7662 00ec BCD9     		bls	.L528
5176:Middlewares/FreeRTOS/tasks.c ****                     {
 7663              		.loc 1 5176 21 is_stmt 1 view .LVU2170
5176:Middlewares/FreeRTOS/tasks.c ****                     {
 7664              		.loc 1 5176 23 is_stmt 0 view .LVU2171
 7665 00ee 0DB1     		cbz	r5, .L534
5178:Middlewares/FreeRTOS/tasks.c ****                     }
 7666              		.loc 1 5178 25 is_stmt 1 view .LVU2172
5178:Middlewares/FreeRTOS/tasks.c ****                     }
 7667              		.loc 1 5178 52 is_stmt 0 view .LVU2173
 7668 00f0 0123     		movs	r3, #1
 7669 00f2 2B60     		str	r3, [r5]
 7670              	.L534:
5184:Middlewares/FreeRTOS/tasks.c ****                 }
 7671              		.loc 1 5184 21 is_stmt 1 view .LVU2174
5184:Middlewares/FreeRTOS/tasks.c ****                 }
 7672              		.loc 1 5184 35 is_stmt 0 view .LVU2175
 7673 00f4 0E4B     		ldr	r3, .L539+16
 7674 00f6 0122     		movs	r2, #1
 7675 00f8 1A60     		str	r2, [r3]
 7676 00fa B5E7     		b	.L528
 7677              	.LVL520:
 7678              	.L538:
 7679              	.LBB337:
5162:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7680              		.loc 1 5162 21 is_stmt 1 discriminator 1 view .LVU2176
 7681 00fc F268     		ldr	r2, [r6, #12]
 7682 00fe 5A60     		str	r2, [r3, #4]
 7683 0100 CEE7     		b	.L532
 7684              	.LVL521:
 7685              	.L531:
5162:Middlewares/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7686              		.loc 1 5162 21 is_stmt 0 discriminator 1 view .LVU2177
 7687              	.LBE337:
 7688              	.LBB338:
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7689              		.loc 1 5169 21 is_stmt 1 view .LVU2178
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 270


 7690 0102 0C4B     		ldr	r3, .L539+20
 7691 0104 5A68     		ldr	r2, [r3, #4]
 7692              	.LVL522:
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7693              		.loc 1 5169 21 view .LVU2179
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7694              		.loc 1 5169 21 view .LVU2180
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7695              		.loc 1 5169 21 view .LVU2181
 7696 0106 F261     		str	r2, [r6, #28]
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7697              		.loc 1 5169 21 view .LVU2182
 7698 0108 9468     		ldr	r4, [r2, #8]
 7699              	.LVL523:
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7700              		.loc 1 5169 21 is_stmt 0 view .LVU2183
 7701 010a 3462     		str	r4, [r6, #32]
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7702              		.loc 1 5169 21 is_stmt 1 view .LVU2184
 7703 010c 06F11801 		add	r1, r6, #24
 7704 0110 6160     		str	r1, [r4, #4]
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7705              		.loc 1 5169 21 view .LVU2185
 7706 0112 9160     		str	r1, [r2, #8]
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7707              		.loc 1 5169 21 view .LVU2186
 7708 0114 B362     		str	r3, [r6, #40]
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7709              		.loc 1 5169 21 view .LVU2187
 7710 0116 1A68     		ldr	r2, [r3]
 7711              	.LVL524:
5169:Middlewares/FreeRTOS/tasks.c ****                 }
 7712              		.loc 1 5169 21 is_stmt 0 view .LVU2188
 7713 0118 0132     		adds	r2, r2, #1
 7714 011a 1A60     		str	r2, [r3]
 7715 011c E1E7     		b	.L533
 7716              	.L540:
 7717 011e 00BF     		.align	2
 7718              	.L539:
 7719 0120 00000000 		.word	uxSchedulerSuspended
 7720 0124 00000000 		.word	uxTopReadyPriority
 7721 0128 00000000 		.word	pxReadyTasksLists
 7722 012c 00000000 		.word	pxCurrentTCB
 7723 0130 00000000 		.word	xYieldPending
 7724 0134 00000000 		.word	xPendingReadyList
 7725              	.LBE338:
 7726              		.cfi_endproc
 7727              	.LFE54:
 7729              		.section	.text.xTaskGenericNotifyStateClear,"ax",%progbits
 7730              		.align	1
 7731              		.global	xTaskGenericNotifyStateClear
 7732              		.syntax unified
 7733              		.thumb
 7734              		.thumb_func
 7736              	xTaskGenericNotifyStateClear:
 7737              	.LVL525:
 7738              	.LFB55:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 271


5202:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7739              		.loc 1 5202 5 is_stmt 1 view -0
 7740              		.cfi_startproc
 7741              		@ args = 0, pretend = 0, frame = 0
 7742              		@ frame_needed = 0, uses_anonymous_args = 0
5202:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7743              		.loc 1 5202 5 is_stmt 0 view .LVU2190
 7744 0000 38B5     		push	{r3, r4, r5, lr}
 7745              	.LCFI56:
 7746              		.cfi_def_cfa_offset 16
 7747              		.cfi_offset 3, -16
 7748              		.cfi_offset 4, -12
 7749              		.cfi_offset 5, -8
 7750              		.cfi_offset 14, -4
5203:Middlewares/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 7751              		.loc 1 5203 9 is_stmt 1 view .LVU2191
5204:Middlewares/FreeRTOS/tasks.c **** 
 7752              		.loc 1 5204 9 view .LVU2192
5206:Middlewares/FreeRTOS/tasks.c **** 
 7753              		.loc 1 5206 9 view .LVU2193
 7754 0002 41B1     		cbz	r1, .L542
5206:Middlewares/FreeRTOS/tasks.c **** 
 7755              		.loc 1 5206 9 view .LVU2194
 7756              	.LBB339:
 7757              	.LBI339:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7758              		.loc 2 196 34 view .LVU2195
 7759              	.LBB340:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7760              		.loc 2 198 9 view .LVU2196
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7761              		.loc 2 200 9 view .LVU2197
 7762              		.syntax unified
 7763              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7764 0004 4FF01003 			mov r3, #16												
 7765 0008 83F31188 		msr basepri, r3											
 7766 000c BFF36F8F 		isb														
 7767 0010 BFF34F8F 		dsb														
 7768              	
 7769              	@ 0 "" 2
 7770              	.LVL526:
 7771              		.thumb
 7772              		.syntax unified
 7773              	.L543:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7774              		.loc 2 200 9 is_stmt 0 view .LVU2198
 7775              	.LBE340:
 7776              	.LBE339:
5206:Middlewares/FreeRTOS/tasks.c **** 
 7777              		.loc 1 5206 9 is_stmt 1 discriminator 1 view .LVU2199
5206:Middlewares/FreeRTOS/tasks.c **** 
 7778              		.loc 1 5206 9 discriminator 1 view .LVU2200
 7779 0014 FEE7     		b	.L543
 7780              	.L542:
 7781 0016 0446     		mov	r4, r0
 7782 0018 0D46     		mov	r5, r1
5206:Middlewares/FreeRTOS/tasks.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 272


 7783              		.loc 1 5206 79 discriminator 2 view .LVU2201
5210:Middlewares/FreeRTOS/tasks.c **** 
 7784              		.loc 1 5210 9 discriminator 2 view .LVU2202
5210:Middlewares/FreeRTOS/tasks.c **** 
 7785              		.loc 1 5210 17 is_stmt 0 discriminator 2 view .LVU2203
 7786 001a 60B1     		cbz	r0, .L548
 7787              	.LVL527:
 7788              	.L544:
5212:Middlewares/FreeRTOS/tasks.c ****         {
 7789              		.loc 1 5212 9 is_stmt 1 discriminator 4 view .LVU2204
 7790 001c FFF7FEFF 		bl	vPortEnterCritical
 7791              	.LVL528:
5214:Middlewares/FreeRTOS/tasks.c ****             {
 7792              		.loc 1 5214 13 discriminator 4 view .LVU2205
5214:Middlewares/FreeRTOS/tasks.c ****             {
 7793              		.loc 1 5214 37 is_stmt 0 discriminator 4 view .LVU2206
 7794 0020 6319     		adds	r3, r4, r5
 7795 0022 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 7796 0026 DBB2     		uxtb	r3, r3
5214:Middlewares/FreeRTOS/tasks.c ****             {
 7797              		.loc 1 5214 15 discriminator 4 view .LVU2207
 7798 0028 022B     		cmp	r3, #2
 7799 002a 07D0     		beq	.L549
5221:Middlewares/FreeRTOS/tasks.c ****             }
 7800              		.loc 1 5221 25 view .LVU2208
 7801 002c 0024     		movs	r4, #0
 7802              	.LVL529:
 7803              	.L545:
5224:Middlewares/FreeRTOS/tasks.c **** 
 7804              		.loc 1 5224 9 is_stmt 1 view .LVU2209
 7805 002e FFF7FEFF 		bl	vPortExitCritical
 7806              	.LVL530:
5226:Middlewares/FreeRTOS/tasks.c ****     }
 7807              		.loc 1 5226 9 view .LVU2210
5227:Middlewares/FreeRTOS/tasks.c **** 
 7808              		.loc 1 5227 5 is_stmt 0 view .LVU2211
 7809 0032 2046     		mov	r0, r4
 7810 0034 38BD     		pop	{r3, r4, r5, pc}
 7811              	.LVL531:
 7812              	.L548:
5210:Middlewares/FreeRTOS/tasks.c **** 
 7813              		.loc 1 5210 17 discriminator 1 view .LVU2212
 7814 0036 044B     		ldr	r3, .L550
 7815 0038 1C68     		ldr	r4, [r3]
 7816              	.LVL532:
5210:Middlewares/FreeRTOS/tasks.c **** 
 7817              		.loc 1 5210 17 discriminator 1 view .LVU2213
 7818 003a EFE7     		b	.L544
 7819              	.LVL533:
 7820              	.L549:
5216:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 7821              		.loc 1 5216 17 is_stmt 1 view .LVU2214
5216:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 7822              		.loc 1 5216 56 is_stmt 0 view .LVU2215
 7823 003c 2C44     		add	r4, r4, r5
 7824              	.LVL534:
5216:Middlewares/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 273


 7825              		.loc 1 5216 56 view .LVU2216
 7826 003e 0023     		movs	r3, #0
 7827 0040 84F85030 		strb	r3, [r4, #80]
5217:Middlewares/FreeRTOS/tasks.c ****             }
 7828              		.loc 1 5217 17 is_stmt 1 view .LVU2217
 7829              	.LVL535:
5217:Middlewares/FreeRTOS/tasks.c ****             }
 7830              		.loc 1 5217 25 is_stmt 0 view .LVU2218
 7831 0044 0124     		movs	r4, #1
 7832 0046 F2E7     		b	.L545
 7833              	.L551:
 7834              		.align	2
 7835              	.L550:
 7836 0048 00000000 		.word	pxCurrentTCB
 7837              		.cfi_endproc
 7838              	.LFE55:
 7840              		.section	.text.ulTaskGenericNotifyValueClear,"ax",%progbits
 7841              		.align	1
 7842              		.global	ulTaskGenericNotifyValueClear
 7843              		.syntax unified
 7844              		.thumb
 7845              		.thumb_func
 7847              	ulTaskGenericNotifyValueClear:
 7848              	.LVL536:
 7849              	.LFB56:
5237:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7850              		.loc 1 5237 5 is_stmt 1 view -0
 7851              		.cfi_startproc
 7852              		@ args = 0, pretend = 0, frame = 0
 7853              		@ frame_needed = 0, uses_anonymous_args = 0
5237:Middlewares/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7854              		.loc 1 5237 5 is_stmt 0 view .LVU2220
 7855 0000 70B5     		push	{r4, r5, r6, lr}
 7856              	.LCFI57:
 7857              		.cfi_def_cfa_offset 16
 7858              		.cfi_offset 4, -16
 7859              		.cfi_offset 5, -12
 7860              		.cfi_offset 6, -8
 7861              		.cfi_offset 14, -4
 7862 0002 0D46     		mov	r5, r1
 7863 0004 1646     		mov	r6, r2
5238:Middlewares/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 7864              		.loc 1 5238 9 is_stmt 1 view .LVU2221
5239:Middlewares/FreeRTOS/tasks.c **** 
 7865              		.loc 1 5239 9 view .LVU2222
5243:Middlewares/FreeRTOS/tasks.c **** 
 7866              		.loc 1 5243 9 view .LVU2223
5243:Middlewares/FreeRTOS/tasks.c **** 
 7867              		.loc 1 5243 17 is_stmt 0 view .LVU2224
 7868 0006 0446     		mov	r4, r0
 7869 0008 68B1     		cbz	r0, .L555
 7870              	.LVL537:
 7871              	.L553:
5245:Middlewares/FreeRTOS/tasks.c ****         {
 7872              		.loc 1 5245 9 is_stmt 1 discriminator 4 view .LVU2225
 7873 000a FFF7FEFF 		bl	vPortEnterCritical
 7874              	.LVL538:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 274


5249:Middlewares/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 7875              		.loc 1 5249 13 discriminator 4 view .LVU2226
5249:Middlewares/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 7876              		.loc 1 5249 22 is_stmt 0 discriminator 4 view .LVU2227
 7877 000e 1235     		adds	r5, r5, #18
 7878              	.LVL539:
5249:Middlewares/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 7879              		.loc 1 5249 22 discriminator 4 view .LVU2228
 7880 0010 04EB8503 		add	r3, r4, r5, lsl #2
 7881 0014 5C68     		ldr	r4, [r3, #4]
 7882              	.LVL540:
5250:Middlewares/FreeRTOS/tasks.c ****         }
 7883              		.loc 1 5250 13 is_stmt 1 discriminator 4 view .LVU2229
5250:Middlewares/FreeRTOS/tasks.c ****         }
 7884              		.loc 1 5250 35 is_stmt 0 discriminator 4 view .LVU2230
 7885 0016 5968     		ldr	r1, [r3, #4]
5250:Middlewares/FreeRTOS/tasks.c ****         }
 7886              		.loc 1 5250 54 discriminator 4 view .LVU2231
 7887 0018 21EA0601 		bic	r1, r1, r6
 7888 001c 5960     		str	r1, [r3, #4]
5252:Middlewares/FreeRTOS/tasks.c **** 
 7889              		.loc 1 5252 9 is_stmt 1 discriminator 4 view .LVU2232
 7890 001e FFF7FEFF 		bl	vPortExitCritical
 7891              	.LVL541:
5254:Middlewares/FreeRTOS/tasks.c ****     }
 7892              		.loc 1 5254 9 discriminator 4 view .LVU2233
5255:Middlewares/FreeRTOS/tasks.c **** 
 7893              		.loc 1 5255 5 is_stmt 0 discriminator 4 view .LVU2234
 7894 0022 2046     		mov	r0, r4
 7895 0024 70BD     		pop	{r4, r5, r6, pc}
 7896              	.LVL542:
 7897              	.L555:
5243:Middlewares/FreeRTOS/tasks.c **** 
 7898              		.loc 1 5243 17 discriminator 1 view .LVU2235
 7899 0026 014B     		ldr	r3, .L556
 7900 0028 1C68     		ldr	r4, [r3]
 7901              	.LVL543:
5243:Middlewares/FreeRTOS/tasks.c **** 
 7902              		.loc 1 5243 17 discriminator 1 view .LVU2236
 7903 002a EEE7     		b	.L553
 7904              	.L557:
 7905              		.align	2
 7906              	.L556:
 7907 002c 00000000 		.word	pxCurrentTCB
 7908              		.cfi_endproc
 7909              	.LFE56:
 7911              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 7912              		.align	2
 7915              	uxSchedulerSuspended:
 7916 0000 00000000 		.space	4
 7917              		.global	uxTopUsedPriority
 7918              		.section	.data.uxTopUsedPriority,"aw"
 7919              		.align	2
 7922              	uxTopUsedPriority:
 7923 0000 06000000 		.word	6
 7924              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 7925              		.align	2
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 275


 7928              	xIdleTaskHandle:
 7929 0000 00000000 		.space	4
 7930              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 7931              		.align	2
 7934              	xNextTaskUnblockTime:
 7935 0000 00000000 		.space	4
 7936              		.section	.bss.uxTaskNumber,"aw",%nobits
 7937              		.align	2
 7940              	uxTaskNumber:
 7941 0000 00000000 		.space	4
 7942              		.section	.bss.xNumOfOverflows,"aw",%nobits
 7943              		.align	2
 7946              	xNumOfOverflows:
 7947 0000 00000000 		.space	4
 7948              		.section	.bss.xYieldPending,"aw",%nobits
 7949              		.align	2
 7952              	xYieldPending:
 7953 0000 00000000 		.space	4
 7954              		.section	.bss.xPendedTicks,"aw",%nobits
 7955              		.align	2
 7958              	xPendedTicks:
 7959 0000 00000000 		.space	4
 7960              		.section	.bss.xSchedulerRunning,"aw",%nobits
 7961              		.align	2
 7964              	xSchedulerRunning:
 7965 0000 00000000 		.space	4
 7966              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 7967              		.align	2
 7970              	uxTopReadyPriority:
 7971 0000 00000000 		.space	4
 7972              		.section	.bss.xTickCount,"aw",%nobits
 7973              		.align	2
 7976              	xTickCount:
 7977 0000 00000000 		.space	4
 7978              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 7979              		.align	2
 7982              	uxCurrentNumberOfTasks:
 7983 0000 00000000 		.space	4
 7984              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 7985              		.align	2
 7988              	xSuspendedTaskList:
 7989 0000 00000000 		.space	20
 7989      00000000 
 7989      00000000 
 7989      00000000 
 7989      00000000 
 7990              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 7991              		.align	2
 7994              	uxDeletedTasksWaitingCleanUp:
 7995 0000 00000000 		.space	4
 7996              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 7997              		.align	2
 8000              	xTasksWaitingTermination:
 8001 0000 00000000 		.space	20
 8001      00000000 
 8001      00000000 
 8001      00000000 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 276


 8001      00000000 
 8002              		.section	.bss.xPendingReadyList,"aw",%nobits
 8003              		.align	2
 8006              	xPendingReadyList:
 8007 0000 00000000 		.space	20
 8007      00000000 
 8007      00000000 
 8007      00000000 
 8007      00000000 
 8008              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 8009              		.align	2
 8012              	pxOverflowDelayedTaskList:
 8013 0000 00000000 		.space	4
 8014              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 8015              		.align	2
 8018              	pxDelayedTaskList:
 8019 0000 00000000 		.space	4
 8020              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 8021              		.align	2
 8024              	xDelayedTaskList2:
 8025 0000 00000000 		.space	20
 8025      00000000 
 8025      00000000 
 8025      00000000 
 8025      00000000 
 8026              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 8027              		.align	2
 8030              	xDelayedTaskList1:
 8031 0000 00000000 		.space	20
 8031      00000000 
 8031      00000000 
 8031      00000000 
 8031      00000000 
 8032              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 8033              		.align	2
 8036              	pxReadyTasksLists:
 8037 0000 00000000 		.space	140
 8037      00000000 
 8037      00000000 
 8037      00000000 
 8037      00000000 
 8038              		.global	pxCurrentTCB
 8039              		.section	.bss.pxCurrentTCB,"aw",%nobits
 8040              		.align	2
 8043              	pxCurrentTCB:
 8044 0000 00000000 		.space	4
 8045              		.text
 8046              	.Letext0:
 8047              		.file 3 "/Users/echo/Development/arm-gnu-toolchain/arm64-arm-none-eabi12/lib/gcc/arm-none-eabi/12.
 8048              		.file 4 "/Users/echo/Development/arm-gnu-toolchain/arm64-arm-none-eabi12/arm-none-eabi/include/mac
 8049              		.file 5 "/Users/echo/Development/arm-gnu-toolchain/arm64-arm-none-eabi12/arm-none-eabi/include/sys
 8050              		.file 6 "Middlewares/FreeRTOS/include/projdefs.h"
 8051              		.file 7 "Middlewares/FreeRTOS/include/FreeRTOS.h"
 8052              		.file 8 "Middlewares/FreeRTOS/include/list.h"
 8053              		.file 9 "Middlewares/FreeRTOS/include/task.h"
 8054              		.file 10 "Middlewares/FreeRTOS/include/portable.h"
 8055              		.file 11 "/Users/echo/Development/arm-gnu-toolchain/arm64-arm-none-eabi12/arm-none-eabi/include/st
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 277


 8056              		.file 12 "<built-in>"
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 278


DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:21     .text.prvTaskIsTaskSuspended:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:26     .text.prvTaskIsTaskSuspended:00000000 prvTaskIsTaskSuspended
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:114    .text.prvTaskIsTaskSuspended:00000038 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7988   .bss.xSuspendedTaskList:00000000 xSuspendedTaskList
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8006   .bss.xPendingReadyList:00000000 xPendingReadyList
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:120    .text.prvResetNextTaskUnblockTime:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:125    .text.prvResetNextTaskUnblockTime:00000000 prvResetNextTaskUnblockTime
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:160    .text.prvResetNextTaskUnblockTime:00000020 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8018   .bss.pxDelayedTaskList:00000000 pxDelayedTaskList
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7934   .bss.xNextTaskUnblockTime:00000000 xNextTaskUnblockTime
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:166    .text.prvInitialiseNewTask:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:171    .text.prvInitialiseNewTask:00000000 prvInitialiseNewTask
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:330    .text.prvInitialiseTaskLists:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:335    .text.prvInitialiseTaskLists:00000000 prvInitialiseTaskLists
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:408    .text.prvInitialiseTaskLists:00000048 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8036   .bss.pxReadyTasksLists:00000000 pxReadyTasksLists
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8030   .bss.xDelayedTaskList1:00000000 xDelayedTaskList1
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8024   .bss.xDelayedTaskList2:00000000 xDelayedTaskList2
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8000   .bss.xTasksWaitingTermination:00000000 xTasksWaitingTermination
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8012   .bss.pxOverflowDelayedTaskList:00000000 pxOverflowDelayedTaskList
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:420    .text.prvAddNewTaskToReadyList:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:425    .text.prvAddNewTaskToReadyList:00000000 prvAddNewTaskToReadyList
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:587    .text.prvAddNewTaskToReadyList:000000ac $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7982   .bss.uxCurrentNumberOfTasks:00000000 uxCurrentNumberOfTasks
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8043   .bss.pxCurrentTCB:00000000 pxCurrentTCB
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7964   .bss.xSchedulerRunning:00000000 xSchedulerRunning
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7940   .bss.uxTaskNumber:00000000 uxTaskNumber
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7970   .bss.uxTopReadyPriority:00000000 uxTopReadyPriority
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:597    .text.prvDeleteTCB:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:602    .text.prvDeleteTCB:00000000 prvDeleteTCB
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:679    .text.prvCheckTasksWaitingTermination:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:684    .text.prvCheckTasksWaitingTermination:00000000 prvCheckTasksWaitingTermination
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:757    .text.prvCheckTasksWaitingTermination:00000040 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7994   .bss.uxDeletedTasksWaitingCleanUp:00000000 uxDeletedTasksWaitingCleanUp
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:764    .text.prvIdleTask:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:769    .text.prvIdleTask:00000000 prvIdleTask
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:818    .text.prvIdleTask:00000024 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:823    .text.prvAddCurrentTaskToDelayedList:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:828    .text.prvAddCurrentTaskToDelayedList:00000000 prvAddCurrentTaskToDelayedList
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:974    .text.prvAddCurrentTaskToDelayedList:00000094 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7976   .bss.xTickCount:00000000 xTickCount
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:985    .text.xTaskCreateStatic:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:991    .text.xTaskCreateStatic:00000000 xTaskCreateStatic
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1178   .text.xTaskCreate:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1184   .text.xTaskCreate:00000000 xTaskCreate
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1302   .text.vTaskDelete:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1308   .text.vTaskDelete:00000000 vTaskDelete
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1501   .text.vTaskDelete:000000c4 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7915   .bss.uxSchedulerSuspended:00000000 uxSchedulerSuspended
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1514   .text.uxTaskPriorityGet:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1520   .text.uxTaskPriorityGet:00000000 uxTaskPriorityGet
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1566   .text.uxTaskPriorityGet:0000001c $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1571   .text.uxTaskPriorityGetFromISR:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1577   .text.uxTaskPriorityGetFromISR:00000000 uxTaskPriorityGetFromISR
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1656   .text.uxTaskPriorityGetFromISR:0000002c $d
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 279


/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1661   .text.vTaskPrioritySet:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1667   .text.vTaskPrioritySet:00000000 vTaskPrioritySet
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1934   .text.vTaskPrioritySet:000000f4 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1941   .text.vTaskResume:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:1947   .text.vTaskResume:00000000 vTaskResume
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2102   .text.vTaskResume:00000094 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2109   .text.xTaskResumeFromISR:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2115   .text.xTaskResumeFromISR:00000000 xTaskResumeFromISR
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2317   .text.xTaskResumeFromISR:000000b4 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7952   .bss.xYieldPending:00000000 xYieldPending
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2327   .rodata.vTaskStartScheduler.str1.4:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2331   .text.vTaskStartScheduler:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2337   .text.vTaskStartScheduler:00000000 vTaskStartScheduler
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2443   .text.vTaskStartScheduler:00000060 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7928   .bss.xIdleTaskHandle:00000000 xIdleTaskHandle
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7922   .data.uxTopUsedPriority:00000000 uxTopUsedPriority
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2454   .text.vTaskEndScheduler:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2460   .text.vTaskEndScheduler:00000000 vTaskEndScheduler
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2503   .text.vTaskEndScheduler:00000020 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2508   .text.vTaskSuspendAll:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2514   .text.vTaskSuspendAll:00000000 vTaskSuspendAll
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2533   .text.vTaskSuspendAll:0000000c $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2538   .text.xTaskGetTickCount:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2544   .text.xTaskGetTickCount:00000000 xTaskGetTickCount
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2565   .text.xTaskGetTickCount:00000008 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2570   .text.xTaskGetTickCountFromISR:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2576   .text.xTaskGetTickCountFromISR:00000000 xTaskGetTickCountFromISR
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2605   .text.xTaskGetTickCountFromISR:0000000c $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2610   .text.uxTaskGetNumberOfTasks:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2616   .text.uxTaskGetNumberOfTasks:00000000 uxTaskGetNumberOfTasks
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2632   .text.uxTaskGetNumberOfTasks:00000008 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2637   .text.pcTaskGetName:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2643   .text.pcTaskGetName:00000000 pcTaskGetName
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2700   .text.pcTaskGetName:00000024 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2705   .text.xTaskIncrementTick:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:2711   .text.xTaskIncrementTick:00000000 xTaskIncrementTick
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3061   .text.xTaskIncrementTick:0000014c $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7946   .bss.xNumOfOverflows:00000000 xNumOfOverflows
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7958   .bss.xPendedTicks:00000000 xPendedTicks
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3076   .text.xTaskResumeAll:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3082   .text.xTaskResumeAll:00000000 xTaskResumeAll
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3408   .text.xTaskResumeAll:0000012c $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3420   .text.xTaskDelayUntil:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3426   .text.xTaskDelayUntil:00000000 xTaskDelayUntil
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3670   .text.xTaskDelayUntil:000000a8 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3676   .text.vTaskDelay:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3682   .text.vTaskDelay:00000000 vTaskDelay
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3774   .text.vTaskDelay:00000048 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3779   .text.xTaskCatchUpTicks:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3785   .text.xTaskCatchUpTicks:00000000 xTaskCatchUpTicks
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3858   .text.xTaskCatchUpTicks:00000038 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3864   .text.vTaskSwitchContext:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:3870   .text.vTaskSwitchContext:00000000 vTaskSwitchContext
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4011   .text.vTaskSwitchContext:00000084 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4022   .text.vTaskSuspend:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4028   .text.vTaskSuspend:00000000 vTaskSuspend
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4255   .text.vTaskSuspend:000000dc $d
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 280


/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4266   .text.vTaskPlaceOnEventList:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4272   .text.vTaskPlaceOnEventList:00000000 vTaskPlaceOnEventList
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4339   .text.vTaskPlaceOnEventList:0000002c $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4344   .text.vTaskPlaceOnUnorderedEventList:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4350   .text.vTaskPlaceOnUnorderedEventList:00000000 vTaskPlaceOnUnorderedEventList
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4479   .text.vTaskPlaceOnUnorderedEventList:00000068 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4485   .text.xTaskRemoveFromEventList:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4491   .text.xTaskRemoveFromEventList:00000000 xTaskRemoveFromEventList
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4744   .text.xTaskRemoveFromEventList:000000d8 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4754   .text.vTaskRemoveFromUnorderedEventList:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4760   .text.vTaskRemoveFromUnorderedEventList:00000000 vTaskRemoveFromUnorderedEventList
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:4990   .text.vTaskRemoveFromUnorderedEventList:000000cc $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5000   .text.vTaskSetTimeOutState:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5006   .text.vTaskSetTimeOutState:00000000 vTaskSetTimeOutState
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5075   .text.vTaskSetTimeOutState:00000030 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5081   .text.vTaskInternalSetTimeOutState:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5087   .text.vTaskInternalSetTimeOutState:00000000 vTaskInternalSetTimeOutState
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5110   .text.vTaskInternalSetTimeOutState:00000010 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5116   .text.xTaskCheckForTimeOut:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5122   .text.xTaskCheckForTimeOut:00000000 xTaskCheckForTimeOut
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5303   .text.xTaskCheckForTimeOut:00000080 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5309   .text.vTaskMissedYield:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5315   .text.vTaskMissedYield:00000000 vTaskMissedYield
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5332   .text.vTaskMissedYield:00000008 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5337   .text.xTaskGetCurrentTaskHandle:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5343   .text.xTaskGetCurrentTaskHandle:00000000 xTaskGetCurrentTaskHandle
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5362   .text.xTaskGetCurrentTaskHandle:00000008 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5367   .text.xTaskGetSchedulerState:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5373   .text.xTaskGetSchedulerState:00000000 xTaskGetSchedulerState
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5411   .text.xTaskGetSchedulerState:00000018 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5417   .text.xTaskPriorityInherit:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5423   .text.xTaskPriorityInherit:00000000 xTaskPriorityInherit
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5610   .text.xTaskPriorityInherit:000000b8 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5617   .text.xTaskPriorityDisinherit:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5623   .text.xTaskPriorityDisinherit:00000000 xTaskPriorityDisinherit
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5835   .text.xTaskPriorityDisinherit:000000b0 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5842   .text.vTaskPriorityDisinheritAfterTimeout:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:5848   .text.vTaskPriorityDisinheritAfterTimeout:00000000 vTaskPriorityDisinheritAfterTimeout
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6069   .text.vTaskPriorityDisinheritAfterTimeout:000000c0 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6076   .text.uxTaskResetEventItemValue:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6082   .text.uxTaskResetEventItemValue:00000000 uxTaskResetEventItemValue
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6109   .text.uxTaskResetEventItemValue:00000014 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6114   .text.pvTaskIncrementMutexHeldCount:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6120   .text.pvTaskIncrementMutexHeldCount:00000000 pvTaskIncrementMutexHeldCount
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6151   .text.pvTaskIncrementMutexHeldCount:00000018 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6156   .text.ulTaskGenericNotifyTake:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6162   .text.ulTaskGenericNotifyTake:00000000 ulTaskGenericNotifyTake
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6324   .text.ulTaskGenericNotifyTake:000000a8 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6329   .text.xTaskGenericNotifyWait:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6335   .text.xTaskGenericNotifyWait:00000000 xTaskGenericNotifyWait
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6526   .text.xTaskGenericNotifyWait:000000cc $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6531   .text.xTaskGenericNotify:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6537   .text.xTaskGenericNotify:00000000 xTaskGenericNotify
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6629   .text.xTaskGenericNotify:0000004c $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6915   .text.xTaskGenericNotify:00000164 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6923   .text.xTaskGenericNotifyFromISR:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6929   .text.xTaskGenericNotifyFromISR:00000000 xTaskGenericNotifyFromISR
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s 			page 281


/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7070   .text.xTaskGenericNotifyFromISR:00000072 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7370   .text.xTaskGenericNotifyFromISR:00000194 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7381   .text.vTaskGenericNotifyGiveFromISR:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7387   .text.vTaskGenericNotifyGiveFromISR:00000000 vTaskGenericNotifyGiveFromISR
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7719   .text.vTaskGenericNotifyGiveFromISR:00000120 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7730   .text.xTaskGenericNotifyStateClear:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7736   .text.xTaskGenericNotifyStateClear:00000000 xTaskGenericNotifyStateClear
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7836   .text.xTaskGenericNotifyStateClear:00000048 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7841   .text.ulTaskGenericNotifyValueClear:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7847   .text.ulTaskGenericNotifyValueClear:00000000 ulTaskGenericNotifyValueClear
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7907   .text.ulTaskGenericNotifyValueClear:0000002c $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7912   .bss.uxSchedulerSuspended:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7919   .data.uxTopUsedPriority:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7925   .bss.xIdleTaskHandle:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7931   .bss.xNextTaskUnblockTime:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7937   .bss.uxTaskNumber:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7943   .bss.xNumOfOverflows:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7949   .bss.xYieldPending:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7955   .bss.xPendedTicks:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7961   .bss.xSchedulerRunning:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7967   .bss.uxTopReadyPriority:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7973   .bss.xTickCount:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7979   .bss.uxCurrentNumberOfTasks:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7985   .bss.xSuspendedTaskList:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7991   .bss.uxDeletedTasksWaitingCleanUp:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7997   .bss.xTasksWaitingTermination:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8003   .bss.xPendingReadyList:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8009   .bss.pxOverflowDelayedTaskList:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8015   .bss.pxDelayedTaskList:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8021   .bss.xDelayedTaskList2:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8027   .bss.xDelayedTaskList1:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8033   .bss.pxReadyTasksLists:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:8040   .bss.pxCurrentTCB:00000000 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6635   .text.xTaskGenericNotify:00000051 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:6635   .text.xTaskGenericNotify:00000052 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7075   .text.xTaskGenericNotifyFromISR:00000077 $d
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//ccHZL5gY.s:7075   .text.xTaskGenericNotifyFromISR:00000078 $t

UNDEFINED SYMBOLS
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vPortExitCritical
vPortFree
uxListRemove
vListInsert
memset
pvPortMalloc
vListInsertEnd
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
