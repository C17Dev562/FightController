ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"event_groups.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Middlewares/FreeRTOS/event_groups.c"
  20              		.section	.text.prvTestWaitCondition,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	prvTestWaitCondition:
  27              	.LVL0:
  28              	.LFB15:
   1:Middlewares/FreeRTOS/event_groups.c **** /*
   2:Middlewares/FreeRTOS/event_groups.c ****  * FreeRTOS Kernel V10.5.1
   3:Middlewares/FreeRTOS/event_groups.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/FreeRTOS/event_groups.c ****  *
   5:Middlewares/FreeRTOS/event_groups.c ****  * SPDX-License-Identifier: MIT
   6:Middlewares/FreeRTOS/event_groups.c ****  *
   7:Middlewares/FreeRTOS/event_groups.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:Middlewares/FreeRTOS/event_groups.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:Middlewares/FreeRTOS/event_groups.c ****  * the Software without restriction, including without limitation the rights to
  10:Middlewares/FreeRTOS/event_groups.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:Middlewares/FreeRTOS/event_groups.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:Middlewares/FreeRTOS/event_groups.c ****  * subject to the following conditions:
  13:Middlewares/FreeRTOS/event_groups.c ****  *
  14:Middlewares/FreeRTOS/event_groups.c ****  * The above copyright notice and this permission notice shall be included in all
  15:Middlewares/FreeRTOS/event_groups.c ****  * copies or substantial portions of the Software.
  16:Middlewares/FreeRTOS/event_groups.c ****  *
  17:Middlewares/FreeRTOS/event_groups.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Middlewares/FreeRTOS/event_groups.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:Middlewares/FreeRTOS/event_groups.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:Middlewares/FreeRTOS/event_groups.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:Middlewares/FreeRTOS/event_groups.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:Middlewares/FreeRTOS/event_groups.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:Middlewares/FreeRTOS/event_groups.c ****  *
  24:Middlewares/FreeRTOS/event_groups.c ****  * https://www.FreeRTOS.org
  25:Middlewares/FreeRTOS/event_groups.c ****  * https://github.com/FreeRTOS
  26:Middlewares/FreeRTOS/event_groups.c ****  *
  27:Middlewares/FreeRTOS/event_groups.c ****  */
  28:Middlewares/FreeRTOS/event_groups.c **** 
  29:Middlewares/FreeRTOS/event_groups.c **** /* Standard includes. */
  30:Middlewares/FreeRTOS/event_groups.c **** #include <stdlib.h>
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 2


  31:Middlewares/FreeRTOS/event_groups.c **** 
  32:Middlewares/FreeRTOS/event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Middlewares/FreeRTOS/event_groups.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/FreeRTOS/event_groups.c ****  * task.h is included from an application file. */
  35:Middlewares/FreeRTOS/event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/FreeRTOS/event_groups.c **** 
  37:Middlewares/FreeRTOS/event_groups.c **** /* FreeRTOS includes. */
  38:Middlewares/FreeRTOS/event_groups.c **** #include "FreeRTOS.h"
  39:Middlewares/FreeRTOS/event_groups.c **** #include "task.h"
  40:Middlewares/FreeRTOS/event_groups.c **** #include "timers.h"
  41:Middlewares/FreeRTOS/event_groups.c **** #include "event_groups.h"
  42:Middlewares/FreeRTOS/event_groups.c **** 
  43:Middlewares/FreeRTOS/event_groups.c **** /* Lint e961, e750 and e9021 are suppressed as a MISRA exception justified
  44:Middlewares/FreeRTOS/event_groups.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Middlewares/FreeRTOS/event_groups.c ****  * for the header files above, but not in this file, in order to generate the
  46:Middlewares/FreeRTOS/event_groups.c ****  * correct privileged Vs unprivileged linkage and placement. */
  47:Middlewares/FreeRTOS/event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021 See comment above. */
  48:Middlewares/FreeRTOS/event_groups.c **** 
  49:Middlewares/FreeRTOS/event_groups.c **** /* The following bit fields convey control information in a task's event list
  50:Middlewares/FreeRTOS/event_groups.c ****  * item value.  It is important they don't clash with the
  51:Middlewares/FreeRTOS/event_groups.c ****  * taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  52:Middlewares/FreeRTOS/event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  53:Middlewares/FreeRTOS/event_groups.c ****     #define eventCLEAR_EVENTS_ON_EXIT_BIT    0x0100U
  54:Middlewares/FreeRTOS/event_groups.c ****     #define eventUNBLOCKED_DUE_TO_BIT_SET    0x0200U
  55:Middlewares/FreeRTOS/event_groups.c ****     #define eventWAIT_FOR_ALL_BITS           0x0400U
  56:Middlewares/FreeRTOS/event_groups.c ****     #define eventEVENT_BITS_CONTROL_BYTES    0xff00U
  57:Middlewares/FreeRTOS/event_groups.c **** #else
  58:Middlewares/FreeRTOS/event_groups.c ****     #define eventCLEAR_EVENTS_ON_EXIT_BIT    0x01000000UL
  59:Middlewares/FreeRTOS/event_groups.c ****     #define eventUNBLOCKED_DUE_TO_BIT_SET    0x02000000UL
  60:Middlewares/FreeRTOS/event_groups.c ****     #define eventWAIT_FOR_ALL_BITS           0x04000000UL
  61:Middlewares/FreeRTOS/event_groups.c ****     #define eventEVENT_BITS_CONTROL_BYTES    0xff000000UL
  62:Middlewares/FreeRTOS/event_groups.c **** #endif
  63:Middlewares/FreeRTOS/event_groups.c **** 
  64:Middlewares/FreeRTOS/event_groups.c **** typedef struct EventGroupDef_t
  65:Middlewares/FreeRTOS/event_groups.c **** {
  66:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxEventBits;
  67:Middlewares/FreeRTOS/event_groups.c ****     List_t xTasksWaitingForBits; /*< List of tasks waiting for a bit to be set. */
  68:Middlewares/FreeRTOS/event_groups.c **** 
  69:Middlewares/FreeRTOS/event_groups.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
  70:Middlewares/FreeRTOS/event_groups.c ****         UBaseType_t uxEventGroupNumber;
  71:Middlewares/FreeRTOS/event_groups.c ****     #endif
  72:Middlewares/FreeRTOS/event_groups.c **** 
  73:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  74:Middlewares/FreeRTOS/event_groups.c ****         uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated
  75:Middlewares/FreeRTOS/event_groups.c ****     #endif
  76:Middlewares/FreeRTOS/event_groups.c **** } EventGroup_t;
  77:Middlewares/FreeRTOS/event_groups.c **** 
  78:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
  79:Middlewares/FreeRTOS/event_groups.c **** 
  80:Middlewares/FreeRTOS/event_groups.c **** /*
  81:Middlewares/FreeRTOS/event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
  82:Middlewares/FreeRTOS/event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
  83:Middlewares/FreeRTOS/event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
  84:Middlewares/FreeRTOS/event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
  85:Middlewares/FreeRTOS/event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
  86:Middlewares/FreeRTOS/event_groups.c ****  * in uxCurrentEventBits.
  87:Middlewares/FreeRTOS/event_groups.c ****  */
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 3


  88:Middlewares/FreeRTOS/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits,
  89:Middlewares/FreeRTOS/event_groups.c ****                                         const EventBits_t uxBitsToWaitFor,
  90:Middlewares/FreeRTOS/event_groups.c ****                                         const BaseType_t xWaitForAllBits ) PRIVILEGED_FUNCTION;
  91:Middlewares/FreeRTOS/event_groups.c **** 
  92:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
  93:Middlewares/FreeRTOS/event_groups.c **** 
  94:Middlewares/FreeRTOS/event_groups.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
  95:Middlewares/FreeRTOS/event_groups.c **** 
  96:Middlewares/FreeRTOS/event_groups.c ****     EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t * pxEventGroupBuffer )
  97:Middlewares/FreeRTOS/event_groups.c ****     {
  98:Middlewares/FreeRTOS/event_groups.c ****         EventGroup_t * pxEventBits;
  99:Middlewares/FreeRTOS/event_groups.c **** 
 100:Middlewares/FreeRTOS/event_groups.c ****         /* A StaticEventGroup_t object must be provided. */
 101:Middlewares/FreeRTOS/event_groups.c ****         configASSERT( pxEventGroupBuffer );
 102:Middlewares/FreeRTOS/event_groups.c **** 
 103:Middlewares/FreeRTOS/event_groups.c ****         #if ( configASSERT_DEFINED == 1 )
 104:Middlewares/FreeRTOS/event_groups.c ****         {
 105:Middlewares/FreeRTOS/event_groups.c ****             /* Sanity check that the size of the structure used to declare a
 106:Middlewares/FreeRTOS/event_groups.c ****              * variable of type StaticEventGroup_t equals the size of the real
 107:Middlewares/FreeRTOS/event_groups.c ****              * event group structure. */
 108:Middlewares/FreeRTOS/event_groups.c ****             volatile size_t xSize = sizeof( StaticEventGroup_t );
 109:Middlewares/FreeRTOS/event_groups.c ****             configASSERT( xSize == sizeof( EventGroup_t ) );
 110:Middlewares/FreeRTOS/event_groups.c ****         } /*lint !e529 xSize is referenced if configASSERT() is defined. */
 111:Middlewares/FreeRTOS/event_groups.c ****         #endif /* configASSERT_DEFINED */
 112:Middlewares/FreeRTOS/event_groups.c **** 
 113:Middlewares/FreeRTOS/event_groups.c ****         /* The user has provided a statically allocated event group - use it. */
 114:Middlewares/FreeRTOS/event_groups.c ****         pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 !e9087 EventGroup_t and S
 115:Middlewares/FreeRTOS/event_groups.c **** 
 116:Middlewares/FreeRTOS/event_groups.c ****         if( pxEventBits != NULL )
 117:Middlewares/FreeRTOS/event_groups.c ****         {
 118:Middlewares/FreeRTOS/event_groups.c ****             pxEventBits->uxEventBits = 0;
 119:Middlewares/FreeRTOS/event_groups.c ****             vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 120:Middlewares/FreeRTOS/event_groups.c **** 
 121:Middlewares/FreeRTOS/event_groups.c ****             #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 122:Middlewares/FreeRTOS/event_groups.c ****             {
 123:Middlewares/FreeRTOS/event_groups.c ****                 /* Both static and dynamic allocation can be used, so note that
 124:Middlewares/FreeRTOS/event_groups.c ****                  * this event group was created statically in case the event group
 125:Middlewares/FreeRTOS/event_groups.c ****                  * is later deleted. */
 126:Middlewares/FreeRTOS/event_groups.c ****                 pxEventBits->ucStaticallyAllocated = pdTRUE;
 127:Middlewares/FreeRTOS/event_groups.c ****             }
 128:Middlewares/FreeRTOS/event_groups.c ****             #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 129:Middlewares/FreeRTOS/event_groups.c **** 
 130:Middlewares/FreeRTOS/event_groups.c ****             traceEVENT_GROUP_CREATE( pxEventBits );
 131:Middlewares/FreeRTOS/event_groups.c ****         }
 132:Middlewares/FreeRTOS/event_groups.c ****         else
 133:Middlewares/FreeRTOS/event_groups.c ****         {
 134:Middlewares/FreeRTOS/event_groups.c ****             /* xEventGroupCreateStatic should only ever be called with
 135:Middlewares/FreeRTOS/event_groups.c ****              * pxEventGroupBuffer pointing to a pre-allocated (compile time
 136:Middlewares/FreeRTOS/event_groups.c ****              * allocated) StaticEventGroup_t variable. */
 137:Middlewares/FreeRTOS/event_groups.c ****             traceEVENT_GROUP_CREATE_FAILED();
 138:Middlewares/FreeRTOS/event_groups.c ****         }
 139:Middlewares/FreeRTOS/event_groups.c **** 
 140:Middlewares/FreeRTOS/event_groups.c ****         return pxEventBits;
 141:Middlewares/FreeRTOS/event_groups.c ****     }
 142:Middlewares/FreeRTOS/event_groups.c **** 
 143:Middlewares/FreeRTOS/event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 144:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 4


 145:Middlewares/FreeRTOS/event_groups.c **** 
 146:Middlewares/FreeRTOS/event_groups.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 147:Middlewares/FreeRTOS/event_groups.c **** 
 148:Middlewares/FreeRTOS/event_groups.c ****     EventGroupHandle_t xEventGroupCreate( void )
 149:Middlewares/FreeRTOS/event_groups.c ****     {
 150:Middlewares/FreeRTOS/event_groups.c ****         EventGroup_t * pxEventBits;
 151:Middlewares/FreeRTOS/event_groups.c **** 
 152:Middlewares/FreeRTOS/event_groups.c ****         /* Allocate the event group.  Justification for MISRA deviation as
 153:Middlewares/FreeRTOS/event_groups.c ****          * follows:  pvPortMalloc() always ensures returned memory blocks are
 154:Middlewares/FreeRTOS/event_groups.c ****          * aligned per the requirements of the MCU stack.  In this case
 155:Middlewares/FreeRTOS/event_groups.c ****          * pvPortMalloc() must return a pointer that is guaranteed to meet the
 156:Middlewares/FreeRTOS/event_groups.c ****          * alignment requirements of the EventGroup_t structure - which (if you
 157:Middlewares/FreeRTOS/event_groups.c ****          * follow it through) is the alignment requirements of the TickType_t type
 158:Middlewares/FreeRTOS/event_groups.c ****          * (EventBits_t being of TickType_t itself).  Therefore, whenever the
 159:Middlewares/FreeRTOS/event_groups.c ****          * stack alignment requirements are greater than or equal to the
 160:Middlewares/FreeRTOS/event_groups.c ****          * TickType_t alignment requirements the cast is safe.  In other cases,
 161:Middlewares/FreeRTOS/event_groups.c ****          * where the natural word size of the architecture is less than
 162:Middlewares/FreeRTOS/event_groups.c ****          * sizeof( TickType_t ), the TickType_t variables will be accessed in two
 163:Middlewares/FreeRTOS/event_groups.c ****          * or more reads operations, and the alignment requirements is only that
 164:Middlewares/FreeRTOS/event_groups.c ****          * of each individual read. */
 165:Middlewares/FreeRTOS/event_groups.c ****         pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) ); /*lint !e9087 !e90
 166:Middlewares/FreeRTOS/event_groups.c **** 
 167:Middlewares/FreeRTOS/event_groups.c ****         if( pxEventBits != NULL )
 168:Middlewares/FreeRTOS/event_groups.c ****         {
 169:Middlewares/FreeRTOS/event_groups.c ****             pxEventBits->uxEventBits = 0;
 170:Middlewares/FreeRTOS/event_groups.c ****             vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 171:Middlewares/FreeRTOS/event_groups.c **** 
 172:Middlewares/FreeRTOS/event_groups.c ****             #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 173:Middlewares/FreeRTOS/event_groups.c ****             {
 174:Middlewares/FreeRTOS/event_groups.c ****                 /* Both static and dynamic allocation can be used, so note this
 175:Middlewares/FreeRTOS/event_groups.c ****                  * event group was allocated statically in case the event group is
 176:Middlewares/FreeRTOS/event_groups.c ****                  * later deleted. */
 177:Middlewares/FreeRTOS/event_groups.c ****                 pxEventBits->ucStaticallyAllocated = pdFALSE;
 178:Middlewares/FreeRTOS/event_groups.c ****             }
 179:Middlewares/FreeRTOS/event_groups.c ****             #endif /* configSUPPORT_STATIC_ALLOCATION */
 180:Middlewares/FreeRTOS/event_groups.c **** 
 181:Middlewares/FreeRTOS/event_groups.c ****             traceEVENT_GROUP_CREATE( pxEventBits );
 182:Middlewares/FreeRTOS/event_groups.c ****         }
 183:Middlewares/FreeRTOS/event_groups.c ****         else
 184:Middlewares/FreeRTOS/event_groups.c ****         {
 185:Middlewares/FreeRTOS/event_groups.c ****             traceEVENT_GROUP_CREATE_FAILED(); /*lint !e9063 Else branch only exists to allow tracin
 186:Middlewares/FreeRTOS/event_groups.c ****         }
 187:Middlewares/FreeRTOS/event_groups.c **** 
 188:Middlewares/FreeRTOS/event_groups.c ****         return pxEventBits;
 189:Middlewares/FreeRTOS/event_groups.c ****     }
 190:Middlewares/FreeRTOS/event_groups.c **** 
 191:Middlewares/FreeRTOS/event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 192:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 193:Middlewares/FreeRTOS/event_groups.c **** 
 194:Middlewares/FreeRTOS/event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup,
 195:Middlewares/FreeRTOS/event_groups.c ****                              const EventBits_t uxBitsToSet,
 196:Middlewares/FreeRTOS/event_groups.c ****                              const EventBits_t uxBitsToWaitFor,
 197:Middlewares/FreeRTOS/event_groups.c ****                              TickType_t xTicksToWait )
 198:Middlewares/FreeRTOS/event_groups.c **** {
 199:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxOriginalBitValue, uxReturn;
 200:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 201:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xAlreadyYielded;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 5


 202:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xTimeoutOccurred = pdFALSE;
 203:Middlewares/FreeRTOS/event_groups.c **** 
 204:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 205:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 206:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 207:Middlewares/FreeRTOS/event_groups.c ****     {
 208:Middlewares/FreeRTOS/event_groups.c ****         configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait 
 209:Middlewares/FreeRTOS/event_groups.c ****     }
 210:Middlewares/FreeRTOS/event_groups.c ****     #endif
 211:Middlewares/FreeRTOS/event_groups.c **** 
 212:Middlewares/FreeRTOS/event_groups.c ****     vTaskSuspendAll();
 213:Middlewares/FreeRTOS/event_groups.c ****     {
 214:Middlewares/FreeRTOS/event_groups.c ****         uxOriginalBitValue = pxEventBits->uxEventBits;
 215:Middlewares/FreeRTOS/event_groups.c **** 
 216:Middlewares/FreeRTOS/event_groups.c ****         ( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 217:Middlewares/FreeRTOS/event_groups.c **** 
 218:Middlewares/FreeRTOS/event_groups.c ****         if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 219:Middlewares/FreeRTOS/event_groups.c ****         {
 220:Middlewares/FreeRTOS/event_groups.c ****             /* All the rendezvous bits are now set - no need to block. */
 221:Middlewares/FreeRTOS/event_groups.c ****             uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 222:Middlewares/FreeRTOS/event_groups.c **** 
 223:Middlewares/FreeRTOS/event_groups.c ****             /* Rendezvous always clear the bits.  They will have been cleared
 224:Middlewares/FreeRTOS/event_groups.c ****              * already unless this is the only task in the rendezvous. */
 225:Middlewares/FreeRTOS/event_groups.c ****             pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 226:Middlewares/FreeRTOS/event_groups.c **** 
 227:Middlewares/FreeRTOS/event_groups.c ****             xTicksToWait = 0;
 228:Middlewares/FreeRTOS/event_groups.c ****         }
 229:Middlewares/FreeRTOS/event_groups.c ****         else
 230:Middlewares/FreeRTOS/event_groups.c ****         {
 231:Middlewares/FreeRTOS/event_groups.c ****             if( xTicksToWait != ( TickType_t ) 0 )
 232:Middlewares/FreeRTOS/event_groups.c ****             {
 233:Middlewares/FreeRTOS/event_groups.c ****                 traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 234:Middlewares/FreeRTOS/event_groups.c **** 
 235:Middlewares/FreeRTOS/event_groups.c ****                 /* Store the bits that the calling task is waiting for in the
 236:Middlewares/FreeRTOS/event_groups.c ****                  * task's event list item so the kernel knows when a match is
 237:Middlewares/FreeRTOS/event_groups.c ****                  * found.  Then enter the blocked state. */
 238:Middlewares/FreeRTOS/event_groups.c ****                 vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToW
 239:Middlewares/FreeRTOS/event_groups.c **** 
 240:Middlewares/FreeRTOS/event_groups.c ****                 /* This assignment is obsolete as uxReturn will get set after
 241:Middlewares/FreeRTOS/event_groups.c ****                  * the task unblocks, but some compilers mistakenly generate a
 242:Middlewares/FreeRTOS/event_groups.c ****                  * warning about uxReturn being returned without being set if the
 243:Middlewares/FreeRTOS/event_groups.c ****                  * assignment is omitted. */
 244:Middlewares/FreeRTOS/event_groups.c ****                 uxReturn = 0;
 245:Middlewares/FreeRTOS/event_groups.c ****             }
 246:Middlewares/FreeRTOS/event_groups.c ****             else
 247:Middlewares/FreeRTOS/event_groups.c ****             {
 248:Middlewares/FreeRTOS/event_groups.c ****                 /* The rendezvous bits were not set, but no block time was
 249:Middlewares/FreeRTOS/event_groups.c ****                  * specified - just return the current event bit value. */
 250:Middlewares/FreeRTOS/event_groups.c ****                 uxReturn = pxEventBits->uxEventBits;
 251:Middlewares/FreeRTOS/event_groups.c ****                 xTimeoutOccurred = pdTRUE;
 252:Middlewares/FreeRTOS/event_groups.c ****             }
 253:Middlewares/FreeRTOS/event_groups.c ****         }
 254:Middlewares/FreeRTOS/event_groups.c ****     }
 255:Middlewares/FreeRTOS/event_groups.c ****     xAlreadyYielded = xTaskResumeAll();
 256:Middlewares/FreeRTOS/event_groups.c **** 
 257:Middlewares/FreeRTOS/event_groups.c ****     if( xTicksToWait != ( TickType_t ) 0 )
 258:Middlewares/FreeRTOS/event_groups.c ****     {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 6


 259:Middlewares/FreeRTOS/event_groups.c ****         if( xAlreadyYielded == pdFALSE )
 260:Middlewares/FreeRTOS/event_groups.c ****         {
 261:Middlewares/FreeRTOS/event_groups.c ****             portYIELD_WITHIN_API();
 262:Middlewares/FreeRTOS/event_groups.c ****         }
 263:Middlewares/FreeRTOS/event_groups.c ****         else
 264:Middlewares/FreeRTOS/event_groups.c ****         {
 265:Middlewares/FreeRTOS/event_groups.c ****             mtCOVERAGE_TEST_MARKER();
 266:Middlewares/FreeRTOS/event_groups.c ****         }
 267:Middlewares/FreeRTOS/event_groups.c **** 
 268:Middlewares/FreeRTOS/event_groups.c ****         /* The task blocked to wait for its required bits to be set - at this
 269:Middlewares/FreeRTOS/event_groups.c ****          * point either the required bits were set or the block time expired.  If
 270:Middlewares/FreeRTOS/event_groups.c ****          * the required bits were set they will have been stored in the task's
 271:Middlewares/FreeRTOS/event_groups.c ****          * event list item, and they should now be retrieved then cleared. */
 272:Middlewares/FreeRTOS/event_groups.c ****         uxReturn = uxTaskResetEventItemValue();
 273:Middlewares/FreeRTOS/event_groups.c **** 
 274:Middlewares/FreeRTOS/event_groups.c ****         if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 275:Middlewares/FreeRTOS/event_groups.c ****         {
 276:Middlewares/FreeRTOS/event_groups.c ****             /* The task timed out, just return the current event bit value. */
 277:Middlewares/FreeRTOS/event_groups.c ****             taskENTER_CRITICAL();
 278:Middlewares/FreeRTOS/event_groups.c ****             {
 279:Middlewares/FreeRTOS/event_groups.c ****                 uxReturn = pxEventBits->uxEventBits;
 280:Middlewares/FreeRTOS/event_groups.c **** 
 281:Middlewares/FreeRTOS/event_groups.c ****                 /* Although the task got here because it timed out before the
 282:Middlewares/FreeRTOS/event_groups.c ****                  * bits it was waiting for were set, it is possible that since it
 283:Middlewares/FreeRTOS/event_groups.c ****                  * unblocked another task has set the bits.  If this is the case
 284:Middlewares/FreeRTOS/event_groups.c ****                  * then it needs to clear the bits before exiting. */
 285:Middlewares/FreeRTOS/event_groups.c ****                 if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 286:Middlewares/FreeRTOS/event_groups.c ****                 {
 287:Middlewares/FreeRTOS/event_groups.c ****                     pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 288:Middlewares/FreeRTOS/event_groups.c ****                 }
 289:Middlewares/FreeRTOS/event_groups.c ****                 else
 290:Middlewares/FreeRTOS/event_groups.c ****                 {
 291:Middlewares/FreeRTOS/event_groups.c ****                     mtCOVERAGE_TEST_MARKER();
 292:Middlewares/FreeRTOS/event_groups.c ****                 }
 293:Middlewares/FreeRTOS/event_groups.c ****             }
 294:Middlewares/FreeRTOS/event_groups.c ****             taskEXIT_CRITICAL();
 295:Middlewares/FreeRTOS/event_groups.c **** 
 296:Middlewares/FreeRTOS/event_groups.c ****             xTimeoutOccurred = pdTRUE;
 297:Middlewares/FreeRTOS/event_groups.c ****         }
 298:Middlewares/FreeRTOS/event_groups.c ****         else
 299:Middlewares/FreeRTOS/event_groups.c ****         {
 300:Middlewares/FreeRTOS/event_groups.c ****             /* The task unblocked because the bits were set. */
 301:Middlewares/FreeRTOS/event_groups.c ****         }
 302:Middlewares/FreeRTOS/event_groups.c **** 
 303:Middlewares/FreeRTOS/event_groups.c ****         /* Control bits might be set as the task had blocked should not be
 304:Middlewares/FreeRTOS/event_groups.c ****          * returned. */
 305:Middlewares/FreeRTOS/event_groups.c ****         uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 306:Middlewares/FreeRTOS/event_groups.c ****     }
 307:Middlewares/FreeRTOS/event_groups.c **** 
 308:Middlewares/FreeRTOS/event_groups.c ****     traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 309:Middlewares/FreeRTOS/event_groups.c **** 
 310:Middlewares/FreeRTOS/event_groups.c ****     /* Prevent compiler warnings when trace macros are not used. */
 311:Middlewares/FreeRTOS/event_groups.c ****     ( void ) xTimeoutOccurred;
 312:Middlewares/FreeRTOS/event_groups.c **** 
 313:Middlewares/FreeRTOS/event_groups.c ****     return uxReturn;
 314:Middlewares/FreeRTOS/event_groups.c **** }
 315:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 7


 316:Middlewares/FreeRTOS/event_groups.c **** 
 317:Middlewares/FreeRTOS/event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup,
 318:Middlewares/FreeRTOS/event_groups.c ****                                  const EventBits_t uxBitsToWaitFor,
 319:Middlewares/FreeRTOS/event_groups.c ****                                  const BaseType_t xClearOnExit,
 320:Middlewares/FreeRTOS/event_groups.c ****                                  const BaseType_t xWaitForAllBits,
 321:Middlewares/FreeRTOS/event_groups.c ****                                  TickType_t xTicksToWait )
 322:Middlewares/FreeRTOS/event_groups.c **** {
 323:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 324:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxReturn, uxControlBits = 0;
 325:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xWaitConditionMet, xAlreadyYielded;
 326:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xTimeoutOccurred = pdFALSE;
 327:Middlewares/FreeRTOS/event_groups.c **** 
 328:Middlewares/FreeRTOS/event_groups.c ****     /* Check the user is not attempting to wait on the bits used by the kernel
 329:Middlewares/FreeRTOS/event_groups.c ****      * itself, and that at least one bit is being requested. */
 330:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( xEventGroup );
 331:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 332:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 333:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 334:Middlewares/FreeRTOS/event_groups.c ****     {
 335:Middlewares/FreeRTOS/event_groups.c ****         configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait 
 336:Middlewares/FreeRTOS/event_groups.c ****     }
 337:Middlewares/FreeRTOS/event_groups.c ****     #endif
 338:Middlewares/FreeRTOS/event_groups.c **** 
 339:Middlewares/FreeRTOS/event_groups.c ****     vTaskSuspendAll();
 340:Middlewares/FreeRTOS/event_groups.c ****     {
 341:Middlewares/FreeRTOS/event_groups.c ****         const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 342:Middlewares/FreeRTOS/event_groups.c **** 
 343:Middlewares/FreeRTOS/event_groups.c ****         /* Check to see if the wait condition is already met or not. */
 344:Middlewares/FreeRTOS/event_groups.c ****         xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllB
 345:Middlewares/FreeRTOS/event_groups.c **** 
 346:Middlewares/FreeRTOS/event_groups.c ****         if( xWaitConditionMet != pdFALSE )
 347:Middlewares/FreeRTOS/event_groups.c ****         {
 348:Middlewares/FreeRTOS/event_groups.c ****             /* The wait condition has already been met so there is no need to
 349:Middlewares/FreeRTOS/event_groups.c ****              * block. */
 350:Middlewares/FreeRTOS/event_groups.c ****             uxReturn = uxCurrentEventBits;
 351:Middlewares/FreeRTOS/event_groups.c ****             xTicksToWait = ( TickType_t ) 0;
 352:Middlewares/FreeRTOS/event_groups.c **** 
 353:Middlewares/FreeRTOS/event_groups.c ****             /* Clear the wait bits if requested to do so. */
 354:Middlewares/FreeRTOS/event_groups.c ****             if( xClearOnExit != pdFALSE )
 355:Middlewares/FreeRTOS/event_groups.c ****             {
 356:Middlewares/FreeRTOS/event_groups.c ****                 pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 357:Middlewares/FreeRTOS/event_groups.c ****             }
 358:Middlewares/FreeRTOS/event_groups.c ****             else
 359:Middlewares/FreeRTOS/event_groups.c ****             {
 360:Middlewares/FreeRTOS/event_groups.c ****                 mtCOVERAGE_TEST_MARKER();
 361:Middlewares/FreeRTOS/event_groups.c ****             }
 362:Middlewares/FreeRTOS/event_groups.c ****         }
 363:Middlewares/FreeRTOS/event_groups.c ****         else if( xTicksToWait == ( TickType_t ) 0 )
 364:Middlewares/FreeRTOS/event_groups.c ****         {
 365:Middlewares/FreeRTOS/event_groups.c ****             /* The wait condition has not been met, but no block time was
 366:Middlewares/FreeRTOS/event_groups.c ****              * specified, so just return the current value. */
 367:Middlewares/FreeRTOS/event_groups.c ****             uxReturn = uxCurrentEventBits;
 368:Middlewares/FreeRTOS/event_groups.c ****             xTimeoutOccurred = pdTRUE;
 369:Middlewares/FreeRTOS/event_groups.c ****         }
 370:Middlewares/FreeRTOS/event_groups.c ****         else
 371:Middlewares/FreeRTOS/event_groups.c ****         {
 372:Middlewares/FreeRTOS/event_groups.c ****             /* The task is going to block to wait for its required bits to be
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 8


 373:Middlewares/FreeRTOS/event_groups.c ****              * set.  uxControlBits are used to remember the specified behaviour of
 374:Middlewares/FreeRTOS/event_groups.c ****              * this call to xEventGroupWaitBits() - for use when the event bits
 375:Middlewares/FreeRTOS/event_groups.c ****              * unblock the task. */
 376:Middlewares/FreeRTOS/event_groups.c ****             if( xClearOnExit != pdFALSE )
 377:Middlewares/FreeRTOS/event_groups.c ****             {
 378:Middlewares/FreeRTOS/event_groups.c ****                 uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 379:Middlewares/FreeRTOS/event_groups.c ****             }
 380:Middlewares/FreeRTOS/event_groups.c ****             else
 381:Middlewares/FreeRTOS/event_groups.c ****             {
 382:Middlewares/FreeRTOS/event_groups.c ****                 mtCOVERAGE_TEST_MARKER();
 383:Middlewares/FreeRTOS/event_groups.c ****             }
 384:Middlewares/FreeRTOS/event_groups.c **** 
 385:Middlewares/FreeRTOS/event_groups.c ****             if( xWaitForAllBits != pdFALSE )
 386:Middlewares/FreeRTOS/event_groups.c ****             {
 387:Middlewares/FreeRTOS/event_groups.c ****                 uxControlBits |= eventWAIT_FOR_ALL_BITS;
 388:Middlewares/FreeRTOS/event_groups.c ****             }
 389:Middlewares/FreeRTOS/event_groups.c ****             else
 390:Middlewares/FreeRTOS/event_groups.c ****             {
 391:Middlewares/FreeRTOS/event_groups.c ****                 mtCOVERAGE_TEST_MARKER();
 392:Middlewares/FreeRTOS/event_groups.c ****             }
 393:Middlewares/FreeRTOS/event_groups.c **** 
 394:Middlewares/FreeRTOS/event_groups.c ****             /* Store the bits that the calling task is waiting for in the
 395:Middlewares/FreeRTOS/event_groups.c ****              * task's event list item so the kernel knows when a match is
 396:Middlewares/FreeRTOS/event_groups.c ****              * found.  Then enter the blocked state. */
 397:Middlewares/FreeRTOS/event_groups.c ****             vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitF
 398:Middlewares/FreeRTOS/event_groups.c **** 
 399:Middlewares/FreeRTOS/event_groups.c ****             /* This is obsolete as it will get set after the task unblocks, but
 400:Middlewares/FreeRTOS/event_groups.c ****              * some compilers mistakenly generate a warning about the variable
 401:Middlewares/FreeRTOS/event_groups.c ****              * being returned without being set if it is not done. */
 402:Middlewares/FreeRTOS/event_groups.c ****             uxReturn = 0;
 403:Middlewares/FreeRTOS/event_groups.c **** 
 404:Middlewares/FreeRTOS/event_groups.c ****             traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 405:Middlewares/FreeRTOS/event_groups.c ****         }
 406:Middlewares/FreeRTOS/event_groups.c ****     }
 407:Middlewares/FreeRTOS/event_groups.c ****     xAlreadyYielded = xTaskResumeAll();
 408:Middlewares/FreeRTOS/event_groups.c **** 
 409:Middlewares/FreeRTOS/event_groups.c ****     if( xTicksToWait != ( TickType_t ) 0 )
 410:Middlewares/FreeRTOS/event_groups.c ****     {
 411:Middlewares/FreeRTOS/event_groups.c ****         if( xAlreadyYielded == pdFALSE )
 412:Middlewares/FreeRTOS/event_groups.c ****         {
 413:Middlewares/FreeRTOS/event_groups.c ****             portYIELD_WITHIN_API();
 414:Middlewares/FreeRTOS/event_groups.c ****         }
 415:Middlewares/FreeRTOS/event_groups.c ****         else
 416:Middlewares/FreeRTOS/event_groups.c ****         {
 417:Middlewares/FreeRTOS/event_groups.c ****             mtCOVERAGE_TEST_MARKER();
 418:Middlewares/FreeRTOS/event_groups.c ****         }
 419:Middlewares/FreeRTOS/event_groups.c **** 
 420:Middlewares/FreeRTOS/event_groups.c ****         /* The task blocked to wait for its required bits to be set - at this
 421:Middlewares/FreeRTOS/event_groups.c ****          * point either the required bits were set or the block time expired.  If
 422:Middlewares/FreeRTOS/event_groups.c ****          * the required bits were set they will have been stored in the task's
 423:Middlewares/FreeRTOS/event_groups.c ****          * event list item, and they should now be retrieved then cleared. */
 424:Middlewares/FreeRTOS/event_groups.c ****         uxReturn = uxTaskResetEventItemValue();
 425:Middlewares/FreeRTOS/event_groups.c **** 
 426:Middlewares/FreeRTOS/event_groups.c ****         if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 427:Middlewares/FreeRTOS/event_groups.c ****         {
 428:Middlewares/FreeRTOS/event_groups.c ****             taskENTER_CRITICAL();
 429:Middlewares/FreeRTOS/event_groups.c ****             {
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 9


 430:Middlewares/FreeRTOS/event_groups.c ****                 /* The task timed out, just return the current event bit value. */
 431:Middlewares/FreeRTOS/event_groups.c ****                 uxReturn = pxEventBits->uxEventBits;
 432:Middlewares/FreeRTOS/event_groups.c **** 
 433:Middlewares/FreeRTOS/event_groups.c ****                 /* It is possible that the event bits were updated between this
 434:Middlewares/FreeRTOS/event_groups.c ****                  * task leaving the Blocked state and running again. */
 435:Middlewares/FreeRTOS/event_groups.c ****                 if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 436:Middlewares/FreeRTOS/event_groups.c ****                 {
 437:Middlewares/FreeRTOS/event_groups.c ****                     if( xClearOnExit != pdFALSE )
 438:Middlewares/FreeRTOS/event_groups.c ****                     {
 439:Middlewares/FreeRTOS/event_groups.c ****                         pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 440:Middlewares/FreeRTOS/event_groups.c ****                     }
 441:Middlewares/FreeRTOS/event_groups.c ****                     else
 442:Middlewares/FreeRTOS/event_groups.c ****                     {
 443:Middlewares/FreeRTOS/event_groups.c ****                         mtCOVERAGE_TEST_MARKER();
 444:Middlewares/FreeRTOS/event_groups.c ****                     }
 445:Middlewares/FreeRTOS/event_groups.c ****                 }
 446:Middlewares/FreeRTOS/event_groups.c ****                 else
 447:Middlewares/FreeRTOS/event_groups.c ****                 {
 448:Middlewares/FreeRTOS/event_groups.c ****                     mtCOVERAGE_TEST_MARKER();
 449:Middlewares/FreeRTOS/event_groups.c ****                 }
 450:Middlewares/FreeRTOS/event_groups.c **** 
 451:Middlewares/FreeRTOS/event_groups.c ****                 xTimeoutOccurred = pdTRUE;
 452:Middlewares/FreeRTOS/event_groups.c ****             }
 453:Middlewares/FreeRTOS/event_groups.c ****             taskEXIT_CRITICAL();
 454:Middlewares/FreeRTOS/event_groups.c ****         }
 455:Middlewares/FreeRTOS/event_groups.c ****         else
 456:Middlewares/FreeRTOS/event_groups.c ****         {
 457:Middlewares/FreeRTOS/event_groups.c ****             /* The task unblocked because the bits were set. */
 458:Middlewares/FreeRTOS/event_groups.c ****         }
 459:Middlewares/FreeRTOS/event_groups.c **** 
 460:Middlewares/FreeRTOS/event_groups.c ****         /* The task blocked so control bits may have been set. */
 461:Middlewares/FreeRTOS/event_groups.c ****         uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 462:Middlewares/FreeRTOS/event_groups.c ****     }
 463:Middlewares/FreeRTOS/event_groups.c **** 
 464:Middlewares/FreeRTOS/event_groups.c ****     traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 465:Middlewares/FreeRTOS/event_groups.c **** 
 466:Middlewares/FreeRTOS/event_groups.c ****     /* Prevent compiler warnings when trace macros are not used. */
 467:Middlewares/FreeRTOS/event_groups.c ****     ( void ) xTimeoutOccurred;
 468:Middlewares/FreeRTOS/event_groups.c **** 
 469:Middlewares/FreeRTOS/event_groups.c ****     return uxReturn;
 470:Middlewares/FreeRTOS/event_groups.c **** }
 471:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 472:Middlewares/FreeRTOS/event_groups.c **** 
 473:Middlewares/FreeRTOS/event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup,
 474:Middlewares/FreeRTOS/event_groups.c ****                                   const EventBits_t uxBitsToClear )
 475:Middlewares/FreeRTOS/event_groups.c **** {
 476:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 477:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxReturn;
 478:Middlewares/FreeRTOS/event_groups.c **** 
 479:Middlewares/FreeRTOS/event_groups.c ****     /* Check the user is not attempting to clear the bits used by the kernel
 480:Middlewares/FreeRTOS/event_groups.c ****      * itself. */
 481:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( xEventGroup );
 482:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 483:Middlewares/FreeRTOS/event_groups.c **** 
 484:Middlewares/FreeRTOS/event_groups.c ****     taskENTER_CRITICAL();
 485:Middlewares/FreeRTOS/event_groups.c ****     {
 486:Middlewares/FreeRTOS/event_groups.c ****         traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 10


 487:Middlewares/FreeRTOS/event_groups.c **** 
 488:Middlewares/FreeRTOS/event_groups.c ****         /* The value returned is the event group value prior to the bits being
 489:Middlewares/FreeRTOS/event_groups.c ****          * cleared. */
 490:Middlewares/FreeRTOS/event_groups.c ****         uxReturn = pxEventBits->uxEventBits;
 491:Middlewares/FreeRTOS/event_groups.c **** 
 492:Middlewares/FreeRTOS/event_groups.c ****         /* Clear the bits. */
 493:Middlewares/FreeRTOS/event_groups.c ****         pxEventBits->uxEventBits &= ~uxBitsToClear;
 494:Middlewares/FreeRTOS/event_groups.c ****     }
 495:Middlewares/FreeRTOS/event_groups.c ****     taskEXIT_CRITICAL();
 496:Middlewares/FreeRTOS/event_groups.c **** 
 497:Middlewares/FreeRTOS/event_groups.c ****     return uxReturn;
 498:Middlewares/FreeRTOS/event_groups.c **** }
 499:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 500:Middlewares/FreeRTOS/event_groups.c **** 
 501:Middlewares/FreeRTOS/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 502:Middlewares/FreeRTOS/event_groups.c **** 
 503:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup,
 504:Middlewares/FreeRTOS/event_groups.c ****                                             const EventBits_t uxBitsToClear )
 505:Middlewares/FreeRTOS/event_groups.c ****     {
 506:Middlewares/FreeRTOS/event_groups.c ****         BaseType_t xReturn;
 507:Middlewares/FreeRTOS/event_groups.c **** 
 508:Middlewares/FreeRTOS/event_groups.c ****         traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 509:Middlewares/FreeRTOS/event_groups.c ****         xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGro
 510:Middlewares/FreeRTOS/event_groups.c **** 
 511:Middlewares/FreeRTOS/event_groups.c ****         return xReturn;
 512:Middlewares/FreeRTOS/event_groups.c ****     }
 513:Middlewares/FreeRTOS/event_groups.c **** 
 514:Middlewares/FreeRTOS/event_groups.c **** #endif /* if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( co
 515:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 516:Middlewares/FreeRTOS/event_groups.c **** 
 517:Middlewares/FreeRTOS/event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 518:Middlewares/FreeRTOS/event_groups.c **** {
 519:Middlewares/FreeRTOS/event_groups.c ****     UBaseType_t uxSavedInterruptStatus;
 520:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t const * const pxEventBits = xEventGroup;
 521:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxReturn;
 522:Middlewares/FreeRTOS/event_groups.c **** 
 523:Middlewares/FreeRTOS/event_groups.c ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 524:Middlewares/FreeRTOS/event_groups.c ****     {
 525:Middlewares/FreeRTOS/event_groups.c ****         uxReturn = pxEventBits->uxEventBits;
 526:Middlewares/FreeRTOS/event_groups.c ****     }
 527:Middlewares/FreeRTOS/event_groups.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 528:Middlewares/FreeRTOS/event_groups.c **** 
 529:Middlewares/FreeRTOS/event_groups.c ****     return uxReturn;
 530:Middlewares/FreeRTOS/event_groups.c **** } /*lint !e818 EventGroupHandle_t is a typedef used in other functions to so can't be pointer to co
 531:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 532:Middlewares/FreeRTOS/event_groups.c **** 
 533:Middlewares/FreeRTOS/event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup,
 534:Middlewares/FreeRTOS/event_groups.c ****                                 const EventBits_t uxBitsToSet )
 535:Middlewares/FreeRTOS/event_groups.c **** {
 536:Middlewares/FreeRTOS/event_groups.c ****     ListItem_t * pxListItem;
 537:Middlewares/FreeRTOS/event_groups.c ****     ListItem_t * pxNext;
 538:Middlewares/FreeRTOS/event_groups.c ****     ListItem_t const * pxListEnd;
 539:Middlewares/FreeRTOS/event_groups.c ****     List_t const * pxList;
 540:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 541:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 542:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xMatchFound = pdFALSE;
 543:Middlewares/FreeRTOS/event_groups.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 11


 544:Middlewares/FreeRTOS/event_groups.c ****     /* Check the user is not attempting to set the bits used by the kernel
 545:Middlewares/FreeRTOS/event_groups.c ****      * itself. */
 546:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( xEventGroup );
 547:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 548:Middlewares/FreeRTOS/event_groups.c **** 
 549:Middlewares/FreeRTOS/event_groups.c ****     pxList = &( pxEventBits->xTasksWaitingForBits );
 550:Middlewares/FreeRTOS/event_groups.c ****     pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 !e9087 The mini list structure is 
 551:Middlewares/FreeRTOS/event_groups.c ****     vTaskSuspendAll();
 552:Middlewares/FreeRTOS/event_groups.c ****     {
 553:Middlewares/FreeRTOS/event_groups.c ****         traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 554:Middlewares/FreeRTOS/event_groups.c **** 
 555:Middlewares/FreeRTOS/event_groups.c ****         pxListItem = listGET_HEAD_ENTRY( pxList );
 556:Middlewares/FreeRTOS/event_groups.c **** 
 557:Middlewares/FreeRTOS/event_groups.c ****         /* Set the bits. */
 558:Middlewares/FreeRTOS/event_groups.c ****         pxEventBits->uxEventBits |= uxBitsToSet;
 559:Middlewares/FreeRTOS/event_groups.c **** 
 560:Middlewares/FreeRTOS/event_groups.c ****         /* See if the new bit value should unblock any tasks. */
 561:Middlewares/FreeRTOS/event_groups.c ****         while( pxListItem != pxListEnd )
 562:Middlewares/FreeRTOS/event_groups.c ****         {
 563:Middlewares/FreeRTOS/event_groups.c ****             pxNext = listGET_NEXT( pxListItem );
 564:Middlewares/FreeRTOS/event_groups.c ****             uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 565:Middlewares/FreeRTOS/event_groups.c ****             xMatchFound = pdFALSE;
 566:Middlewares/FreeRTOS/event_groups.c **** 
 567:Middlewares/FreeRTOS/event_groups.c ****             /* Split the bits waited for from the control bits. */
 568:Middlewares/FreeRTOS/event_groups.c ****             uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 569:Middlewares/FreeRTOS/event_groups.c ****             uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 570:Middlewares/FreeRTOS/event_groups.c **** 
 571:Middlewares/FreeRTOS/event_groups.c ****             if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 572:Middlewares/FreeRTOS/event_groups.c ****             {
 573:Middlewares/FreeRTOS/event_groups.c ****                 /* Just looking for single bit being set. */
 574:Middlewares/FreeRTOS/event_groups.c ****                 if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 575:Middlewares/FreeRTOS/event_groups.c ****                 {
 576:Middlewares/FreeRTOS/event_groups.c ****                     xMatchFound = pdTRUE;
 577:Middlewares/FreeRTOS/event_groups.c ****                 }
 578:Middlewares/FreeRTOS/event_groups.c ****                 else
 579:Middlewares/FreeRTOS/event_groups.c ****                 {
 580:Middlewares/FreeRTOS/event_groups.c ****                     mtCOVERAGE_TEST_MARKER();
 581:Middlewares/FreeRTOS/event_groups.c ****                 }
 582:Middlewares/FreeRTOS/event_groups.c ****             }
 583:Middlewares/FreeRTOS/event_groups.c ****             else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 584:Middlewares/FreeRTOS/event_groups.c ****             {
 585:Middlewares/FreeRTOS/event_groups.c ****                 /* All bits are set. */
 586:Middlewares/FreeRTOS/event_groups.c ****                 xMatchFound = pdTRUE;
 587:Middlewares/FreeRTOS/event_groups.c ****             }
 588:Middlewares/FreeRTOS/event_groups.c ****             else
 589:Middlewares/FreeRTOS/event_groups.c ****             {
 590:Middlewares/FreeRTOS/event_groups.c ****                 /* Need all bits to be set, but not all the bits were set. */
 591:Middlewares/FreeRTOS/event_groups.c ****             }
 592:Middlewares/FreeRTOS/event_groups.c **** 
 593:Middlewares/FreeRTOS/event_groups.c ****             if( xMatchFound != pdFALSE )
 594:Middlewares/FreeRTOS/event_groups.c ****             {
 595:Middlewares/FreeRTOS/event_groups.c ****                 /* The bits match.  Should the bits be cleared on exit? */
 596:Middlewares/FreeRTOS/event_groups.c ****                 if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 597:Middlewares/FreeRTOS/event_groups.c ****                 {
 598:Middlewares/FreeRTOS/event_groups.c ****                     uxBitsToClear |= uxBitsWaitedFor;
 599:Middlewares/FreeRTOS/event_groups.c ****                 }
 600:Middlewares/FreeRTOS/event_groups.c ****                 else
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 12


 601:Middlewares/FreeRTOS/event_groups.c ****                 {
 602:Middlewares/FreeRTOS/event_groups.c ****                     mtCOVERAGE_TEST_MARKER();
 603:Middlewares/FreeRTOS/event_groups.c ****                 }
 604:Middlewares/FreeRTOS/event_groups.c **** 
 605:Middlewares/FreeRTOS/event_groups.c ****                 /* Store the actual event flag value in the task's event list
 606:Middlewares/FreeRTOS/event_groups.c ****                  * item before removing the task from the event list.  The
 607:Middlewares/FreeRTOS/event_groups.c ****                  * eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 608:Middlewares/FreeRTOS/event_groups.c ****                  * that is was unblocked due to its required bits matching, rather
 609:Middlewares/FreeRTOS/event_groups.c ****                  * than because it timed out. */
 610:Middlewares/FreeRTOS/event_groups.c ****                 vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBL
 611:Middlewares/FreeRTOS/event_groups.c ****             }
 612:Middlewares/FreeRTOS/event_groups.c **** 
 613:Middlewares/FreeRTOS/event_groups.c ****             /* Move onto the next list item.  Note pxListItem->pxNext is not
 614:Middlewares/FreeRTOS/event_groups.c ****              * used here as the list item may have been removed from the event list
 615:Middlewares/FreeRTOS/event_groups.c ****              * and inserted into the ready/pending reading list. */
 616:Middlewares/FreeRTOS/event_groups.c ****             pxListItem = pxNext;
 617:Middlewares/FreeRTOS/event_groups.c ****         }
 618:Middlewares/FreeRTOS/event_groups.c **** 
 619:Middlewares/FreeRTOS/event_groups.c ****         /* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 620:Middlewares/FreeRTOS/event_groups.c ****          * bit was set in the control word. */
 621:Middlewares/FreeRTOS/event_groups.c ****         pxEventBits->uxEventBits &= ~uxBitsToClear;
 622:Middlewares/FreeRTOS/event_groups.c ****     }
 623:Middlewares/FreeRTOS/event_groups.c ****     ( void ) xTaskResumeAll();
 624:Middlewares/FreeRTOS/event_groups.c **** 
 625:Middlewares/FreeRTOS/event_groups.c ****     return pxEventBits->uxEventBits;
 626:Middlewares/FreeRTOS/event_groups.c **** }
 627:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 628:Middlewares/FreeRTOS/event_groups.c **** 
 629:Middlewares/FreeRTOS/event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 630:Middlewares/FreeRTOS/event_groups.c **** {
 631:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 632:Middlewares/FreeRTOS/event_groups.c ****     const List_t * pxTasksWaitingForBits;
 633:Middlewares/FreeRTOS/event_groups.c **** 
 634:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( pxEventBits );
 635:Middlewares/FreeRTOS/event_groups.c **** 
 636:Middlewares/FreeRTOS/event_groups.c ****     pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 637:Middlewares/FreeRTOS/event_groups.c **** 
 638:Middlewares/FreeRTOS/event_groups.c ****     vTaskSuspendAll();
 639:Middlewares/FreeRTOS/event_groups.c ****     {
 640:Middlewares/FreeRTOS/event_groups.c ****         traceEVENT_GROUP_DELETE( xEventGroup );
 641:Middlewares/FreeRTOS/event_groups.c **** 
 642:Middlewares/FreeRTOS/event_groups.c ****         while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 643:Middlewares/FreeRTOS/event_groups.c ****         {
 644:Middlewares/FreeRTOS/event_groups.c ****             /* Unblock the task, returning 0 as the event list is being deleted
 645:Middlewares/FreeRTOS/event_groups.c ****              * and cannot therefore have any bits set. */
 646:Middlewares/FreeRTOS/event_groups.c ****             configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( const ListItem_t * ) &( pxTas
 647:Middlewares/FreeRTOS/event_groups.c ****             vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCK
 648:Middlewares/FreeRTOS/event_groups.c ****         }
 649:Middlewares/FreeRTOS/event_groups.c ****     }
 650:Middlewares/FreeRTOS/event_groups.c ****     ( void ) xTaskResumeAll();
 651:Middlewares/FreeRTOS/event_groups.c **** 
 652:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 653:Middlewares/FreeRTOS/event_groups.c ****     {
 654:Middlewares/FreeRTOS/event_groups.c ****         /* The event group can only have been allocated dynamically - free
 655:Middlewares/FreeRTOS/event_groups.c ****          * it again. */
 656:Middlewares/FreeRTOS/event_groups.c ****         vPortFree( pxEventBits );
 657:Middlewares/FreeRTOS/event_groups.c ****     }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 13


 658:Middlewares/FreeRTOS/event_groups.c ****     #elif ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 659:Middlewares/FreeRTOS/event_groups.c ****     {
 660:Middlewares/FreeRTOS/event_groups.c ****         /* The event group could have been allocated statically or
 661:Middlewares/FreeRTOS/event_groups.c ****          * dynamically, so check before attempting to free the memory. */
 662:Middlewares/FreeRTOS/event_groups.c ****         if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 663:Middlewares/FreeRTOS/event_groups.c ****         {
 664:Middlewares/FreeRTOS/event_groups.c ****             vPortFree( pxEventBits );
 665:Middlewares/FreeRTOS/event_groups.c ****         }
 666:Middlewares/FreeRTOS/event_groups.c ****         else
 667:Middlewares/FreeRTOS/event_groups.c ****         {
 668:Middlewares/FreeRTOS/event_groups.c ****             mtCOVERAGE_TEST_MARKER();
 669:Middlewares/FreeRTOS/event_groups.c ****         }
 670:Middlewares/FreeRTOS/event_groups.c ****     }
 671:Middlewares/FreeRTOS/event_groups.c ****     #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 672:Middlewares/FreeRTOS/event_groups.c **** }
 673:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 674:Middlewares/FreeRTOS/event_groups.c **** 
 675:Middlewares/FreeRTOS/event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 676:Middlewares/FreeRTOS/event_groups.c ****  * an interrupt. */
 677:Middlewares/FreeRTOS/event_groups.c **** void vEventGroupSetBitsCallback( void * pvEventGroup,
 678:Middlewares/FreeRTOS/event_groups.c ****                                  const uint32_t ulBitsToSet )
 679:Middlewares/FreeRTOS/event_groups.c **** {
 680:Middlewares/FreeRTOS/event_groups.c ****     ( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't a
 681:Middlewares/FreeRTOS/event_groups.c **** }
 682:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 683:Middlewares/FreeRTOS/event_groups.c **** 
 684:Middlewares/FreeRTOS/event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 685:Middlewares/FreeRTOS/event_groups.c ****  * an interrupt. */
 686:Middlewares/FreeRTOS/event_groups.c **** void vEventGroupClearBitsCallback( void * pvEventGroup,
 687:Middlewares/FreeRTOS/event_groups.c ****                                    const uint32_t ulBitsToClear )
 688:Middlewares/FreeRTOS/event_groups.c **** {
 689:Middlewares/FreeRTOS/event_groups.c ****     ( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can
 690:Middlewares/FreeRTOS/event_groups.c **** }
 691:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 692:Middlewares/FreeRTOS/event_groups.c **** 
 693:Middlewares/FreeRTOS/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits,
 694:Middlewares/FreeRTOS/event_groups.c ****                                         const EventBits_t uxBitsToWaitFor,
 695:Middlewares/FreeRTOS/event_groups.c ****                                         const BaseType_t xWaitForAllBits )
 696:Middlewares/FreeRTOS/event_groups.c **** {
  29              		.loc 1 696 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 697:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xWaitConditionMet = pdFALSE;
  34              		.loc 1 697 5 view .LVU1
 698:Middlewares/FreeRTOS/event_groups.c **** 
 699:Middlewares/FreeRTOS/event_groups.c ****     if( xWaitForAllBits == pdFALSE )
  35              		.loc 1 699 5 view .LVU2
  36              		.loc 1 699 7 is_stmt 0 view .LVU3
  37 0000 1AB9     		cbnz	r2, .L2
 700:Middlewares/FreeRTOS/event_groups.c ****     {
 701:Middlewares/FreeRTOS/event_groups.c ****         /* Task only has to wait for one bit within uxBitsToWaitFor to be
 702:Middlewares/FreeRTOS/event_groups.c ****          * set.  Is one already set? */
 703:Middlewares/FreeRTOS/event_groups.c ****         if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
  38              		.loc 1 703 9 is_stmt 1 view .LVU4
  39              		.loc 1 703 11 is_stmt 0 view .LVU5
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 14


  40 0002 0842     		tst	r0, r1
  41 0004 05D1     		bne	.L4
 697:Middlewares/FreeRTOS/event_groups.c **** 
  42              		.loc 1 697 16 view .LVU6
  43 0006 1046     		mov	r0, r2
  44              	.LVL1:
 697:Middlewares/FreeRTOS/event_groups.c **** 
  45              		.loc 1 697 16 view .LVU7
  46 0008 7047     		bx	lr
  47              	.LVL2:
  48              	.L2:
 704:Middlewares/FreeRTOS/event_groups.c ****         {
 705:Middlewares/FreeRTOS/event_groups.c ****             xWaitConditionMet = pdTRUE;
 706:Middlewares/FreeRTOS/event_groups.c ****         }
 707:Middlewares/FreeRTOS/event_groups.c ****         else
 708:Middlewares/FreeRTOS/event_groups.c ****         {
 709:Middlewares/FreeRTOS/event_groups.c ****             mtCOVERAGE_TEST_MARKER();
 710:Middlewares/FreeRTOS/event_groups.c ****         }
 711:Middlewares/FreeRTOS/event_groups.c ****     }
 712:Middlewares/FreeRTOS/event_groups.c ****     else
 713:Middlewares/FreeRTOS/event_groups.c ****     {
 714:Middlewares/FreeRTOS/event_groups.c ****         /* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 715:Middlewares/FreeRTOS/event_groups.c ****          * Are they set already? */
 716:Middlewares/FreeRTOS/event_groups.c ****         if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
  49              		.loc 1 716 9 is_stmt 1 view .LVU8
  50              		.loc 1 716 11 is_stmt 0 view .LVU9
  51 000a 8143     		bics	r1, r1, r0
  52              	.LVL3:
  53              		.loc 1 716 11 view .LVU10
  54 000c 03D0     		beq	.L5
 697:Middlewares/FreeRTOS/event_groups.c **** 
  55              		.loc 1 697 16 view .LVU11
  56 000e 0020     		movs	r0, #0
  57              	.LVL4:
 697:Middlewares/FreeRTOS/event_groups.c **** 
  58              		.loc 1 697 16 view .LVU12
  59 0010 7047     		bx	lr
  60              	.LVL5:
  61              	.L4:
 705:Middlewares/FreeRTOS/event_groups.c ****         }
  62              		.loc 1 705 31 view .LVU13
  63 0012 0120     		movs	r0, #1
  64              	.LVL6:
 705:Middlewares/FreeRTOS/event_groups.c ****         }
  65              		.loc 1 705 31 view .LVU14
  66 0014 7047     		bx	lr
  67              	.LVL7:
  68              	.L5:
 717:Middlewares/FreeRTOS/event_groups.c ****         {
 718:Middlewares/FreeRTOS/event_groups.c ****             xWaitConditionMet = pdTRUE;
  69              		.loc 1 718 31 view .LVU15
  70 0016 0120     		movs	r0, #1
  71              	.LVL8:
 719:Middlewares/FreeRTOS/event_groups.c ****         }
 720:Middlewares/FreeRTOS/event_groups.c ****         else
 721:Middlewares/FreeRTOS/event_groups.c ****         {
 722:Middlewares/FreeRTOS/event_groups.c ****             mtCOVERAGE_TEST_MARKER();
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 15


  72              		.loc 1 722 37 is_stmt 1 view .LVU16
 723:Middlewares/FreeRTOS/event_groups.c ****         }
 724:Middlewares/FreeRTOS/event_groups.c ****     }
 725:Middlewares/FreeRTOS/event_groups.c **** 
 726:Middlewares/FreeRTOS/event_groups.c ****     return xWaitConditionMet;
  73              		.loc 1 726 5 view .LVU17
 727:Middlewares/FreeRTOS/event_groups.c **** }
  74              		.loc 1 727 1 is_stmt 0 view .LVU18
  75 0018 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE15:
  79              		.section	.text.xEventGroupCreateStatic,"ax",%progbits
  80              		.align	1
  81              		.global	xEventGroupCreateStatic
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  86              	xEventGroupCreateStatic:
  87              	.LVL9:
  88              	.LFB5:
  97:Middlewares/FreeRTOS/event_groups.c ****         EventGroup_t * pxEventBits;
  89              		.loc 1 97 5 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 8
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  98:Middlewares/FreeRTOS/event_groups.c **** 
  93              		.loc 1 98 9 view .LVU20
 101:Middlewares/FreeRTOS/event_groups.c **** 
  94              		.loc 1 101 9 view .LVU21
  95 0000 80B1     		cbz	r0, .L13
  97:Middlewares/FreeRTOS/event_groups.c ****         EventGroup_t * pxEventBits;
  96              		.loc 1 97 5 is_stmt 0 discriminator 2 view .LVU22
  97 0002 10B5     		push	{r4, lr}
  98              	.LCFI0:
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 4, -8
 101              		.cfi_offset 14, -4
 102 0004 82B0     		sub	sp, sp, #8
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 16
 105 0006 0446     		mov	r4, r0
 101:Middlewares/FreeRTOS/event_groups.c **** 
 106              		.loc 1 101 43 is_stmt 1 discriminator 2 view .LVU23
 107              	.LBB38:
 108:Middlewares/FreeRTOS/event_groups.c ****             configASSERT( xSize == sizeof( EventGroup_t ) );
 108              		.loc 1 108 13 discriminator 2 view .LVU24
 108:Middlewares/FreeRTOS/event_groups.c ****             configASSERT( xSize == sizeof( EventGroup_t ) );
 109              		.loc 1 108 29 is_stmt 0 discriminator 2 view .LVU25
 110 0008 1C23     		movs	r3, #28
 111 000a 0193     		str	r3, [sp, #4]
 109:Middlewares/FreeRTOS/event_groups.c ****         } /*lint !e529 xSize is referenced if configASSERT() is defined. */
 112              		.loc 1 109 13 is_stmt 1 discriminator 2 view .LVU26
 113 000c 019B     		ldr	r3, [sp, #4]
 114 000e 1C2B     		cmp	r3, #28
 115 0010 11D0     		beq	.L9
 109:Middlewares/FreeRTOS/event_groups.c ****         } /*lint !e529 xSize is referenced if configASSERT() is defined. */
 116              		.loc 1 109 13 view .LVU27
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 16


 117              	.LBB39:
 118              	.LBI39:
 119              		.file 2 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.5.1
   3:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   7:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  13:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  14:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  16:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  17:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  24:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  25:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  26:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  27:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  28:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  30:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  31:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  32:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  33:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  34:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  35:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  36:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  37:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #include "projdefs.h"
  38:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #include "FreeRTOSConfig.h"
  39:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  40:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  41:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  43:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  44:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  45:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  46:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  47:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  48:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  49:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  50:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  51:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  52:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  53:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  54:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 17


  55:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  56:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  57:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  58:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  59:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  60:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  61:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  62:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  63:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
  64:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  65:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  66:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  67:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  68:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  69:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  70:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  71:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  72:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  73:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  74:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  75:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  76:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  77:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  78:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  79:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  80:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  81:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  82:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  83:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  84:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  85:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  86:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  87:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  88:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  89:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  90:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  91:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  92:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
  93:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  94:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  95:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  96:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  97:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  98:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  99:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 100:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
 101:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
 102:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 103:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 104:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 105:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 106:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 107:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 108:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 109:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 110:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 111:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 18


 112:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 113:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 114:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 115:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 116:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 117:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 118:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 119:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 120:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 121:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 122:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 123:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 124:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 125:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 126:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 127:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 128:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 129:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 130:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 131:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 132:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 133:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 134:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 135:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 136:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 137:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 139:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 140:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 141:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 142:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 144:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 145:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 146:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 147:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 148:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 149:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 150:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 151:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 152:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 153:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 154:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 155:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 156:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 157:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 158:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 159:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 161:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 162:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 163:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 164:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 166:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 167:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 168:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 19


 169:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 170:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 171:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 172:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 173:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 175:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 176:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 177:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
 178:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 179:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 180:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 181:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 182:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 183:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 184:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 185:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 186:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         else
 187:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 188:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 189:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 190:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 192:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 193:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 194:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 195:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 120              		.loc 2 196 34 view .LVU28
 121              	.LBB40:
 197:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
 122              		.loc 2 198 9 view .LVU29
 199:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 123              		.loc 2 200 9 view .LVU30
 124              		.syntax unified
 125              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 126 0012 4FF01003 			mov r3, #16												
 127 0016 83F31188 		msr basepri, r3											
 128 001a BFF36F8F 		isb														
 129 001e BFF34F8F 		dsb														
 130              	
 131              	@ 0 "" 2
 132              	.LVL10:
 133              		.thumb
 134              		.syntax unified
 135              	.L10:
 136              		.loc 2 200 9 is_stmt 0 view .LVU31
 137              	.LBE40:
 138              	.LBE39:
 109:Middlewares/FreeRTOS/event_groups.c ****         } /*lint !e529 xSize is referenced if configASSERT() is defined. */
 139              		.loc 1 109 13 is_stmt 1 discriminator 2 view .LVU32
 109:Middlewares/FreeRTOS/event_groups.c ****         } /*lint !e529 xSize is referenced if configASSERT() is defined. */
 140              		.loc 1 109 13 discriminator 2 view .LVU33
 141 0022 FEE7     		b	.L10
 142              	.L13:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 20


 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 0
 145              		.cfi_restore 4
 146              		.cfi_restore 14
 109:Middlewares/FreeRTOS/event_groups.c ****         } /*lint !e529 xSize is referenced if configASSERT() is defined. */
 147              		.loc 1 109 13 is_stmt 0 discriminator 2 view .LVU34
 148              	.LBE38:
 101:Middlewares/FreeRTOS/event_groups.c **** 
 149              		.loc 1 101 9 is_stmt 1 view .LVU35
 150              	.LBB41:
 151              	.LBI41:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 152              		.loc 2 196 34 view .LVU36
 153              	.LBB42:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 154              		.loc 2 198 9 view .LVU37
 155              		.loc 2 200 9 view .LVU38
 156              		.syntax unified
 157              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 158 0024 4FF01003 			mov r3, #16												
 159 0028 83F31188 		msr basepri, r3											
 160 002c BFF36F8F 		isb														
 161 0030 BFF34F8F 		dsb														
 162              	
 163              	@ 0 "" 2
 164              	.LVL11:
 165              		.thumb
 166              		.syntax unified
 167              	.L8:
 168              		.loc 2 200 9 is_stmt 0 view .LVU39
 169              	.LBE42:
 170              	.LBE41:
 101:Middlewares/FreeRTOS/event_groups.c **** 
 171              		.loc 1 101 9 is_stmt 1 discriminator 1 view .LVU40
 101:Middlewares/FreeRTOS/event_groups.c **** 
 172              		.loc 1 101 9 discriminator 1 view .LVU41
 173 0034 FEE7     		b	.L8
 174              	.L9:
 175              	.LCFI3:
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
 179              	.LBB43:
 109:Middlewares/FreeRTOS/event_groups.c ****         } /*lint !e529 xSize is referenced if configASSERT() is defined. */
 180              		.loc 1 109 60 view .LVU42
 181              	.LBE43:
 114:Middlewares/FreeRTOS/event_groups.c **** 
 182              		.loc 1 114 9 view .LVU43
 183              	.LVL12:
 116:Middlewares/FreeRTOS/event_groups.c ****         {
 184              		.loc 1 116 9 view .LVU44
 118:Middlewares/FreeRTOS/event_groups.c ****             vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 185              		.loc 1 118 13 view .LVU45
 118:Middlewares/FreeRTOS/event_groups.c ****             vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 186              		.loc 1 118 38 is_stmt 0 view .LVU46
 187 0036 0023     		movs	r3, #0
 188 0038 40F8043B 		str	r3, [r0], #4
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 21


 189              	.LVL13:
 119:Middlewares/FreeRTOS/event_groups.c **** 
 190              		.loc 1 119 13 is_stmt 1 view .LVU47
 191 003c FFF7FEFF 		bl	vListInitialise
 192              	.LVL14:
 126:Middlewares/FreeRTOS/event_groups.c ****             }
 193              		.loc 1 126 17 view .LVU48
 126:Middlewares/FreeRTOS/event_groups.c ****             }
 194              		.loc 1 126 52 is_stmt 0 view .LVU49
 195 0040 0123     		movs	r3, #1
 196 0042 2376     		strb	r3, [r4, #24]
 130:Middlewares/FreeRTOS/event_groups.c ****         }
 197              		.loc 1 130 51 is_stmt 1 view .LVU50
 137:Middlewares/FreeRTOS/event_groups.c ****         }
 198              		.loc 1 137 45 view .LVU51
 140:Middlewares/FreeRTOS/event_groups.c ****     }
 199              		.loc 1 140 9 view .LVU52
 141:Middlewares/FreeRTOS/event_groups.c **** 
 200              		.loc 1 141 5 is_stmt 0 view .LVU53
 201 0044 2046     		mov	r0, r4
 202 0046 02B0     		add	sp, sp, #8
 203              	.LCFI4:
 204              		.cfi_def_cfa_offset 8
 205              		@ sp needed
 206 0048 10BD     		pop	{r4, pc}
 141:Middlewares/FreeRTOS/event_groups.c **** 
 207              		.loc 1 141 5 view .LVU54
 208              		.cfi_endproc
 209              	.LFE5:
 211              		.section	.text.xEventGroupCreate,"ax",%progbits
 212              		.align	1
 213              		.global	xEventGroupCreate
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	xEventGroupCreate:
 219              	.LFB6:
 149:Middlewares/FreeRTOS/event_groups.c ****         EventGroup_t * pxEventBits;
 220              		.loc 1 149 5 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 38B5     		push	{r3, r4, r5, lr}
 225              	.LCFI5:
 226              		.cfi_def_cfa_offset 16
 227              		.cfi_offset 3, -16
 228              		.cfi_offset 4, -12
 229              		.cfi_offset 5, -8
 230              		.cfi_offset 14, -4
 150:Middlewares/FreeRTOS/event_groups.c **** 
 231              		.loc 1 150 9 view .LVU56
 165:Middlewares/FreeRTOS/event_groups.c **** 
 232              		.loc 1 165 9 view .LVU57
 165:Middlewares/FreeRTOS/event_groups.c **** 
 233              		.loc 1 165 42 is_stmt 0 view .LVU58
 234 0002 1C20     		movs	r0, #28
 235 0004 FFF7FEFF 		bl	pvPortMalloc
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 22


 236              	.LVL15:
 167:Middlewares/FreeRTOS/event_groups.c ****         {
 237              		.loc 1 167 9 is_stmt 1 view .LVU59
 167:Middlewares/FreeRTOS/event_groups.c ****         {
 238              		.loc 1 167 11 is_stmt 0 view .LVU60
 239 0008 0446     		mov	r4, r0
 240 000a 28B1     		cbz	r0, .L14
 169:Middlewares/FreeRTOS/event_groups.c ****             vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 241              		.loc 1 169 13 is_stmt 1 view .LVU61
 169:Middlewares/FreeRTOS/event_groups.c ****             vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 242              		.loc 1 169 38 is_stmt 0 view .LVU62
 243 000c 0025     		movs	r5, #0
 244 000e 40F8045B 		str	r5, [r0], #4
 245              	.LVL16:
 170:Middlewares/FreeRTOS/event_groups.c **** 
 246              		.loc 1 170 13 is_stmt 1 view .LVU63
 247 0012 FFF7FEFF 		bl	vListInitialise
 248              	.LVL17:
 177:Middlewares/FreeRTOS/event_groups.c ****             }
 249              		.loc 1 177 17 view .LVU64
 177:Middlewares/FreeRTOS/event_groups.c ****             }
 250              		.loc 1 177 52 is_stmt 0 view .LVU65
 251 0016 2576     		strb	r5, [r4, #24]
 181:Middlewares/FreeRTOS/event_groups.c ****         }
 252              		.loc 1 181 51 is_stmt 1 view .LVU66
 185:Middlewares/FreeRTOS/event_groups.c ****         }
 253              		.loc 1 185 45 view .LVU67
 188:Middlewares/FreeRTOS/event_groups.c ****     }
 254              		.loc 1 188 9 view .LVU68
 255              	.L14:
 189:Middlewares/FreeRTOS/event_groups.c **** 
 256              		.loc 1 189 5 is_stmt 0 view .LVU69
 257 0018 2046     		mov	r0, r4
 258 001a 38BD     		pop	{r3, r4, r5, pc}
 189:Middlewares/FreeRTOS/event_groups.c **** 
 259              		.loc 1 189 5 view .LVU70
 260              		.cfi_endproc
 261              	.LFE6:
 263              		.section	.text.xEventGroupWaitBits,"ax",%progbits
 264              		.align	1
 265              		.global	xEventGroupWaitBits
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 270              	xEventGroupWaitBits:
 271              	.LVL18:
 272              	.LFB8:
 322:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 273              		.loc 1 322 1 is_stmt 1 view -0
 274              		.cfi_startproc
 275              		@ args = 4, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 323:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxReturn, uxControlBits = 0;
 277              		.loc 1 323 5 view .LVU72
 324:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xWaitConditionMet, xAlreadyYielded;
 278              		.loc 1 324 5 view .LVU73
 325:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xTimeoutOccurred = pdFALSE;
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 23


 279              		.loc 1 325 5 view .LVU74
 326:Middlewares/FreeRTOS/event_groups.c **** 
 280              		.loc 1 326 5 view .LVU75
 330:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 281              		.loc 1 330 5 view .LVU76
 282 0000 88B1     		cbz	r0, .L38
 322:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 283              		.loc 1 322 1 is_stmt 0 discriminator 2 view .LVU77
 284 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 285              	.LCFI6:
 286              		.cfi_def_cfa_offset 24
 287              		.cfi_offset 4, -24
 288              		.cfi_offset 5, -20
 289              		.cfi_offset 6, -16
 290              		.cfi_offset 7, -12
 291              		.cfi_offset 8, -8
 292              		.cfi_offset 14, -4
 293 0006 0C46     		mov	r4, r1
 294 0008 1646     		mov	r6, r2
 295 000a 1D46     		mov	r5, r3
 296 000c 0746     		mov	r7, r0
 330:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 297              		.loc 1 330 32 is_stmt 1 discriminator 2 view .LVU78
 331:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 298              		.loc 1 331 5 discriminator 2 view .LVU79
 299 000e B1F1807F 		cmp	r1, #16777216
 300 0012 11D3     		bcc	.L20
 331:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 301              		.loc 1 331 5 view .LVU80
 302              	.LBB44:
 303              	.LBI44:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 304              		.loc 2 196 34 view .LVU81
 305              	.LBB45:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 306              		.loc 2 198 9 view .LVU82
 307              		.loc 2 200 9 view .LVU83
 308              		.syntax unified
 309              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 310 0014 4FF01003 			mov r3, #16												
 311 0018 83F31188 		msr basepri, r3											
 312 001c BFF36F8F 		isb														
 313 0020 BFF34F8F 		dsb														
 314              	
 315              	@ 0 "" 2
 316              	.LVL19:
 317              		.thumb
 318              		.syntax unified
 319              	.L21:
 320              		.loc 2 200 9 is_stmt 0 view .LVU84
 321              	.LBE45:
 322              	.LBE44:
 331:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 323              		.loc 1 331 5 is_stmt 1 discriminator 2 view .LVU85
 331:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 324              		.loc 1 331 5 discriminator 2 view .LVU86
 325 0024 FEE7     		b	.L21
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 24


 326              	.LVL20:
 327              	.L38:
 328              	.LCFI7:
 329              		.cfi_def_cfa_offset 0
 330              		.cfi_restore 4
 331              		.cfi_restore 5
 332              		.cfi_restore 6
 333              		.cfi_restore 7
 334              		.cfi_restore 8
 335              		.cfi_restore 14
 330:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 336              		.loc 1 330 5 view .LVU87
 337              	.LBB46:
 338              	.LBI46:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 339              		.loc 2 196 34 view .LVU88
 340              	.LBB47:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 341              		.loc 2 198 9 view .LVU89
 342              		.loc 2 200 9 view .LVU90
 343              		.syntax unified
 344              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 345 0026 4FF01003 			mov r3, #16												
 346 002a 83F31188 		msr basepri, r3											
 347 002e BFF36F8F 		isb														
 348 0032 BFF34F8F 		dsb														
 349              	
 350              	@ 0 "" 2
 351              	.LVL21:
 352              		.thumb
 353              		.syntax unified
 354              	.L19:
 355              		.loc 2 200 9 is_stmt 0 view .LVU91
 356              	.LBE47:
 357              	.LBE46:
 330:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 358              		.loc 1 330 5 is_stmt 1 discriminator 1 view .LVU92
 330:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 359              		.loc 1 330 5 discriminator 1 view .LVU93
 360 0036 FEE7     		b	.L19
 361              	.LVL22:
 362              	.L20:
 363              	.LCFI8:
 364              		.cfi_def_cfa_offset 24
 365              		.cfi_offset 4, -24
 366              		.cfi_offset 5, -20
 367              		.cfi_offset 6, -16
 368              		.cfi_offset 7, -12
 369              		.cfi_offset 8, -8
 370              		.cfi_offset 14, -4
 331:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 371              		.loc 1 331 77 discriminator 2 view .LVU94
 332:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 372              		.loc 1 332 5 discriminator 2 view .LVU95
 373 0038 41B9     		cbnz	r1, .L22
 332:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 374              		.loc 1 332 5 view .LVU96
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 25


 375              	.LBB48:
 376              	.LBI48:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 377              		.loc 2 196 34 view .LVU97
 378              	.LBB49:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 379              		.loc 2 198 9 view .LVU98
 380              		.loc 2 200 9 view .LVU99
 381              		.syntax unified
 382              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 383 003a 4FF01003 			mov r3, #16												
 384 003e 83F31188 		msr basepri, r3											
 385 0042 BFF36F8F 		isb														
 386 0046 BFF34F8F 		dsb														
 387              	
 388              	@ 0 "" 2
 389              	.LVL23:
 390              		.thumb
 391              		.syntax unified
 392              	.L23:
 393              		.loc 2 200 9 is_stmt 0 view .LVU100
 394              	.LBE49:
 395              	.LBE48:
 332:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 396              		.loc 1 332 5 is_stmt 1 discriminator 3 view .LVU101
 332:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 397              		.loc 1 332 5 discriminator 3 view .LVU102
 398 004a FEE7     		b	.L23
 399              	.LVL24:
 400              	.L22:
 332:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 401              		.loc 1 332 41 discriminator 2 view .LVU103
 335:Middlewares/FreeRTOS/event_groups.c ****     }
 402              		.loc 1 335 9 discriminator 2 view .LVU104
 403 004c FFF7FEFF 		bl	xTaskGetSchedulerState
 404              	.LVL25:
 335:Middlewares/FreeRTOS/event_groups.c ****     }
 405              		.loc 1 335 9 is_stmt 0 discriminator 2 view .LVU105
 406 0050 50B9     		cbnz	r0, .L24
 407 0052 069B     		ldr	r3, [sp, #24]
 408 0054 43B1     		cbz	r3, .L24
 335:Middlewares/FreeRTOS/event_groups.c ****     }
 409              		.loc 1 335 9 is_stmt 1 view .LVU106
 410              	.LBB50:
 411              	.LBI50:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 412              		.loc 2 196 34 view .LVU107
 413              	.LBB51:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 414              		.loc 2 198 9 view .LVU108
 415              		.loc 2 200 9 view .LVU109
 416              		.syntax unified
 417              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 418 0056 4FF01003 			mov r3, #16												
 419 005a 83F31188 		msr basepri, r3											
 420 005e BFF36F8F 		isb														
 421 0062 BFF34F8F 		dsb														
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 26


 422              	
 423              	@ 0 "" 2
 424              	.LVL26:
 425              		.thumb
 426              		.syntax unified
 427              	.L25:
 428              		.loc 2 200 9 is_stmt 0 view .LVU110
 429              	.LBE51:
 430              	.LBE50:
 335:Middlewares/FreeRTOS/event_groups.c ****     }
 431              		.loc 1 335 9 is_stmt 1 discriminator 4 view .LVU111
 335:Middlewares/FreeRTOS/event_groups.c ****     }
 432              		.loc 1 335 9 discriminator 4 view .LVU112
 433 0066 FEE7     		b	.L25
 434              	.L24:
 335:Middlewares/FreeRTOS/event_groups.c ****     }
 435              		.loc 1 335 110 discriminator 8 view .LVU113
 339:Middlewares/FreeRTOS/event_groups.c ****     {
 436              		.loc 1 339 5 discriminator 8 view .LVU114
 437 0068 FFF7FEFF 		bl	vTaskSuspendAll
 438              	.LVL27:
 439              	.LBB52:
 341:Middlewares/FreeRTOS/event_groups.c **** 
 440              		.loc 1 341 9 discriminator 8 view .LVU115
 341:Middlewares/FreeRTOS/event_groups.c **** 
 441              		.loc 1 341 27 is_stmt 0 discriminator 8 view .LVU116
 442 006c D7F80080 		ldr	r8, [r7]
 443              	.LVL28:
 344:Middlewares/FreeRTOS/event_groups.c **** 
 444              		.loc 1 344 9 is_stmt 1 discriminator 8 view .LVU117
 344:Middlewares/FreeRTOS/event_groups.c **** 
 445              		.loc 1 344 29 is_stmt 0 discriminator 8 view .LVU118
 446 0070 2A46     		mov	r2, r5
 447 0072 2146     		mov	r1, r4
 448 0074 4046     		mov	r0, r8
 449 0076 FFF7FEFF 		bl	prvTestWaitCondition
 450              	.LVL29:
 346:Middlewares/FreeRTOS/event_groups.c ****         {
 451              		.loc 1 346 9 is_stmt 1 discriminator 8 view .LVU119
 346:Middlewares/FreeRTOS/event_groups.c ****         {
 452              		.loc 1 346 11 is_stmt 0 discriminator 8 view .LVU120
 453 007a F8B1     		cbz	r0, .L26
 350:Middlewares/FreeRTOS/event_groups.c ****             xTicksToWait = ( TickType_t ) 0;
 454              		.loc 1 350 13 is_stmt 1 view .LVU121
 455              	.LVL30:
 351:Middlewares/FreeRTOS/event_groups.c **** 
 456              		.loc 1 351 13 view .LVU122
 354:Middlewares/FreeRTOS/event_groups.c ****             {
 457              		.loc 1 354 13 view .LVU123
 354:Middlewares/FreeRTOS/event_groups.c ****             {
 458              		.loc 1 354 15 is_stmt 0 view .LVU124
 459 007c 8EB3     		cbz	r6, .L34
 356:Middlewares/FreeRTOS/event_groups.c ****             }
 460              		.loc 1 356 17 is_stmt 1 view .LVU125
 356:Middlewares/FreeRTOS/event_groups.c ****             }
 461              		.loc 1 356 42 is_stmt 0 view .LVU126
 462 007e 28EA0403 		bic	r3, r8, r4
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 27


 463 0082 3B60     		str	r3, [r7]
 351:Middlewares/FreeRTOS/event_groups.c **** 
 464              		.loc 1 351 26 view .LVU127
 465 0084 0023     		movs	r3, #0
 466 0086 0693     		str	r3, [sp, #24]
 467              	.LVL31:
 468              	.L27:
 404:Middlewares/FreeRTOS/event_groups.c ****         }
 469              		.loc 1 404 77 is_stmt 1 view .LVU128
 470              	.LBE52:
 407:Middlewares/FreeRTOS/event_groups.c **** 
 471              		.loc 1 407 5 view .LVU129
 407:Middlewares/FreeRTOS/event_groups.c **** 
 472              		.loc 1 407 23 is_stmt 0 view .LVU130
 473 0088 FFF7FEFF 		bl	xTaskResumeAll
 474              	.LVL32:
 409:Middlewares/FreeRTOS/event_groups.c ****     {
 475              		.loc 1 409 5 is_stmt 1 view .LVU131
 409:Middlewares/FreeRTOS/event_groups.c ****     {
 476              		.loc 1 409 7 is_stmt 0 view .LVU132
 477 008c 069B     		ldr	r3, [sp, #24]
 478 008e 93B1     		cbz	r3, .L17
 411:Middlewares/FreeRTOS/event_groups.c ****         {
 479              		.loc 1 411 9 is_stmt 1 view .LVU133
 411:Middlewares/FreeRTOS/event_groups.c ****         {
 480              		.loc 1 411 11 is_stmt 0 view .LVU134
 481 0090 48B9     		cbnz	r0, .L31
 413:Middlewares/FreeRTOS/event_groups.c ****         }
 482              		.loc 1 413 13 is_stmt 1 view .LVU135
 483 0092 4FF0E023 		mov	r3, #-536813568
 484 0096 4FF08052 		mov	r2, #268435456
 485 009a C3F8042D 		str	r2, [r3, #3332]
 486              	.LVL33:
 413:Middlewares/FreeRTOS/event_groups.c ****         }
 487              		.loc 1 413 13 view .LVU136
 488              		.syntax unified
 489              	@ 413 "Middlewares/FreeRTOS/event_groups.c" 1
 490 009e BFF34F8F 		dsb
 491              	@ 0 "" 2
 413:Middlewares/FreeRTOS/event_groups.c ****         }
 492              		.loc 1 413 13 view .LVU137
 493              	@ 413 "Middlewares/FreeRTOS/event_groups.c" 1
 494 00a2 BFF36F8F 		isb
 495              	@ 0 "" 2
 413:Middlewares/FreeRTOS/event_groups.c ****         }
 496              		.loc 1 413 35 view .LVU138
 497              		.thumb
 498              		.syntax unified
 499              	.L31:
 417:Middlewares/FreeRTOS/event_groups.c ****         }
 500              		.loc 1 417 37 view .LVU139
 424:Middlewares/FreeRTOS/event_groups.c **** 
 501              		.loc 1 424 9 view .LVU140
 424:Middlewares/FreeRTOS/event_groups.c **** 
 502              		.loc 1 424 20 is_stmt 0 view .LVU141
 503 00a6 FFF7FEFF 		bl	uxTaskResetEventItemValue
 504              	.LVL34:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 28


 424:Middlewares/FreeRTOS/event_groups.c **** 
 505              		.loc 1 424 20 view .LVU142
 506 00aa 8046     		mov	r8, r0
 507              	.LVL35:
 426:Middlewares/FreeRTOS/event_groups.c ****         {
 508              		.loc 1 426 9 is_stmt 1 view .LVU143
 426:Middlewares/FreeRTOS/event_groups.c ****         {
 509              		.loc 1 426 11 is_stmt 0 view .LVU144
 510 00ac 10F0007F 		tst	r0, #33554432
 511 00b0 1AD0     		beq	.L39
 512              	.LVL36:
 513              	.L32:
 458:Middlewares/FreeRTOS/event_groups.c **** 
 514              		.loc 1 458 9 is_stmt 1 view .LVU145
 461:Middlewares/FreeRTOS/event_groups.c ****     }
 515              		.loc 1 461 9 view .LVU146
 461:Middlewares/FreeRTOS/event_groups.c ****     }
 516              		.loc 1 461 18 is_stmt 0 view .LVU147
 517 00b2 28F07F48 		bic	r8, r8, #-16777216
 518              	.LVL37:
 464:Middlewares/FreeRTOS/event_groups.c **** 
 519              		.loc 1 464 5 is_stmt 1 view .LVU148
 467:Middlewares/FreeRTOS/event_groups.c **** 
 520              		.loc 1 467 5 view .LVU149
 469:Middlewares/FreeRTOS/event_groups.c **** }
 521              		.loc 1 469 5 view .LVU150
 522              	.L17:
 470:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 523              		.loc 1 470 1 is_stmt 0 view .LVU151
 524 00b6 4046     		mov	r0, r8
 525 00b8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 526              	.LVL38:
 527              	.L26:
 528              	.LBB53:
 363:Middlewares/FreeRTOS/event_groups.c ****         {
 529              		.loc 1 363 14 is_stmt 1 view .LVU152
 363:Middlewares/FreeRTOS/event_groups.c ****         {
 530              		.loc 1 363 16 is_stmt 0 view .LVU153
 531 00bc 069B     		ldr	r3, [sp, #24]
 532 00be 002B     		cmp	r3, #0
 533 00c0 E2D0     		beq	.L27
 376:Middlewares/FreeRTOS/event_groups.c ****             {
 534              		.loc 1 376 13 is_stmt 1 view .LVU154
 376:Middlewares/FreeRTOS/event_groups.c ****             {
 535              		.loc 1 376 15 is_stmt 0 view .LVU155
 536 00c2 5EB9     		cbnz	r6, .L35
 537              	.LBE53:
 324:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xWaitConditionMet, xAlreadyYielded;
 538              		.loc 1 324 27 view .LVU156
 539 00c4 0021     		movs	r1, #0
 540              	.L28:
 541              	.LVL39:
 542              	.LBB54:
 382:Middlewares/FreeRTOS/event_groups.c ****             }
 543              		.loc 1 382 41 is_stmt 1 view .LVU157
 385:Middlewares/FreeRTOS/event_groups.c ****             {
 544              		.loc 1 385 13 view .LVU158
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 29


 385:Middlewares/FreeRTOS/event_groups.c ****             {
 545              		.loc 1 385 15 is_stmt 0 view .LVU159
 546 00c6 0DB1     		cbz	r5, .L29
 387:Middlewares/FreeRTOS/event_groups.c ****             }
 547              		.loc 1 387 17 is_stmt 1 view .LVU160
 387:Middlewares/FreeRTOS/event_groups.c ****             }
 548              		.loc 1 387 31 is_stmt 0 view .LVU161
 549 00c8 41F08061 		orr	r1, r1, #67108864
 550              	.LVL40:
 551              	.L29:
 391:Middlewares/FreeRTOS/event_groups.c ****             }
 552              		.loc 1 391 41 is_stmt 1 view .LVU162
 397:Middlewares/FreeRTOS/event_groups.c **** 
 553              		.loc 1 397 13 view .LVU163
 554 00cc 069A     		ldr	r2, [sp, #24]
 555 00ce 2143     		orrs	r1, r1, r4
 556              	.LVL41:
 397:Middlewares/FreeRTOS/event_groups.c **** 
 557              		.loc 1 397 13 is_stmt 0 view .LVU164
 558 00d0 381D     		adds	r0, r7, #4
 559              	.LVL42:
 397:Middlewares/FreeRTOS/event_groups.c **** 
 560              		.loc 1 397 13 view .LVU165
 561 00d2 FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 562              	.LVL43:
 402:Middlewares/FreeRTOS/event_groups.c **** 
 563              		.loc 1 402 13 is_stmt 1 view .LVU166
 402:Middlewares/FreeRTOS/event_groups.c **** 
 564              		.loc 1 402 22 is_stmt 0 view .LVU167
 565 00d6 4FF00008 		mov	r8, #0
 566              	.LVL44:
 402:Middlewares/FreeRTOS/event_groups.c **** 
 567              		.loc 1 402 22 view .LVU168
 568 00da D5E7     		b	.L27
 569              	.LVL45:
 570              	.L35:
 378:Middlewares/FreeRTOS/event_groups.c ****             }
 571              		.loc 1 378 31 view .LVU169
 572 00dc 4FF08071 		mov	r1, #16777216
 573 00e0 F1E7     		b	.L28
 574              	.LVL46:
 575              	.L34:
 351:Middlewares/FreeRTOS/event_groups.c **** 
 576              		.loc 1 351 26 view .LVU170
 577 00e2 0023     		movs	r3, #0
 578 00e4 0693     		str	r3, [sp, #24]
 579 00e6 CFE7     		b	.L27
 580              	.LVL47:
 581              	.L39:
 351:Middlewares/FreeRTOS/event_groups.c **** 
 582              		.loc 1 351 26 view .LVU171
 583              	.LBE54:
 428:Middlewares/FreeRTOS/event_groups.c ****             {
 584              		.loc 1 428 13 is_stmt 1 view .LVU172
 585 00e8 FFF7FEFF 		bl	vPortEnterCritical
 586              	.LVL48:
 431:Middlewares/FreeRTOS/event_groups.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 30


 587              		.loc 1 431 17 view .LVU173
 431:Middlewares/FreeRTOS/event_groups.c **** 
 588              		.loc 1 431 26 is_stmt 0 view .LVU174
 589 00ec D7F80080 		ldr	r8, [r7]
 590              	.LVL49:
 435:Middlewares/FreeRTOS/event_groups.c ****                 {
 591              		.loc 1 435 17 is_stmt 1 view .LVU175
 435:Middlewares/FreeRTOS/event_groups.c ****                 {
 592              		.loc 1 435 21 is_stmt 0 view .LVU176
 593 00f0 2A46     		mov	r2, r5
 594 00f2 2146     		mov	r1, r4
 595 00f4 4046     		mov	r0, r8
 596 00f6 FFF7FEFF 		bl	prvTestWaitCondition
 597              	.LVL50:
 435:Middlewares/FreeRTOS/event_groups.c ****                 {
 598              		.loc 1 435 19 view .LVU177
 599 00fa 18B1     		cbz	r0, .L33
 437:Middlewares/FreeRTOS/event_groups.c ****                     {
 600              		.loc 1 437 21 is_stmt 1 view .LVU178
 437:Middlewares/FreeRTOS/event_groups.c ****                     {
 601              		.loc 1 437 23 is_stmt 0 view .LVU179
 602 00fc 16B1     		cbz	r6, .L33
 439:Middlewares/FreeRTOS/event_groups.c ****                     }
 603              		.loc 1 439 25 is_stmt 1 view .LVU180
 439:Middlewares/FreeRTOS/event_groups.c ****                     }
 604              		.loc 1 439 50 is_stmt 0 view .LVU181
 605 00fe 28EA0404 		bic	r4, r8, r4
 606              	.LVL51:
 439:Middlewares/FreeRTOS/event_groups.c ****                     }
 607              		.loc 1 439 50 view .LVU182
 608 0102 3C60     		str	r4, [r7]
 609              	.L33:
 448:Middlewares/FreeRTOS/event_groups.c ****                 }
 610              		.loc 1 448 45 is_stmt 1 view .LVU183
 451:Middlewares/FreeRTOS/event_groups.c ****             }
 611              		.loc 1 451 17 view .LVU184
 612              	.LVL52:
 453:Middlewares/FreeRTOS/event_groups.c ****         }
 613              		.loc 1 453 13 view .LVU185
 614 0104 FFF7FEFF 		bl	vPortExitCritical
 615              	.LVL53:
 616 0108 D3E7     		b	.L32
 617              		.cfi_endproc
 618              	.LFE8:
 620              		.section	.text.xEventGroupClearBits,"ax",%progbits
 621              		.align	1
 622              		.global	xEventGroupClearBits
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 627              	xEventGroupClearBits:
 628              	.LVL54:
 629              	.LFB9:
 475:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 630              		.loc 1 475 1 view -0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 31


 633              		@ frame_needed = 0, uses_anonymous_args = 0
 476:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxReturn;
 634              		.loc 1 476 5 view .LVU187
 477:Middlewares/FreeRTOS/event_groups.c **** 
 635              		.loc 1 477 5 view .LVU188
 481:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 636              		.loc 1 481 5 view .LVU189
 637 0000 70B1     		cbz	r0, .L47
 475:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 638              		.loc 1 475 1 is_stmt 0 discriminator 2 view .LVU190
 639 0002 70B5     		push	{r4, r5, r6, lr}
 640              	.LCFI9:
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 4, -16
 643              		.cfi_offset 5, -12
 644              		.cfi_offset 6, -8
 645              		.cfi_offset 14, -4
 646 0004 0C46     		mov	r4, r1
 647 0006 0546     		mov	r5, r0
 481:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 648              		.loc 1 481 32 is_stmt 1 discriminator 2 view .LVU191
 482:Middlewares/FreeRTOS/event_groups.c **** 
 649              		.loc 1 482 5 discriminator 2 view .LVU192
 650 0008 B1F1807F 		cmp	r1, #16777216
 651 000c 11D3     		bcc	.L43
 482:Middlewares/FreeRTOS/event_groups.c **** 
 652              		.loc 1 482 5 view .LVU193
 653              	.LBB55:
 654              	.LBI55:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 655              		.loc 2 196 34 view .LVU194
 656              	.LBB56:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 657              		.loc 2 198 9 view .LVU195
 658              		.loc 2 200 9 view .LVU196
 659              		.syntax unified
 660              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 661 000e 4FF01003 			mov r3, #16												
 662 0012 83F31188 		msr basepri, r3											
 663 0016 BFF36F8F 		isb														
 664 001a BFF34F8F 		dsb														
 665              	
 666              	@ 0 "" 2
 667              	.LVL55:
 668              		.thumb
 669              		.syntax unified
 670              	.L44:
 671              		.loc 2 200 9 is_stmt 0 view .LVU197
 672              	.LBE56:
 673              	.LBE55:
 482:Middlewares/FreeRTOS/event_groups.c **** 
 674              		.loc 1 482 5 is_stmt 1 discriminator 2 view .LVU198
 482:Middlewares/FreeRTOS/event_groups.c **** 
 675              		.loc 1 482 5 discriminator 2 view .LVU199
 676 001e FEE7     		b	.L44
 677              	.L47:
 678              	.LCFI10:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 32


 679              		.cfi_def_cfa_offset 0
 680              		.cfi_restore 4
 681              		.cfi_restore 5
 682              		.cfi_restore 6
 683              		.cfi_restore 14
 481:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 684              		.loc 1 481 5 view .LVU200
 685              	.LBB57:
 686              	.LBI57:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 687              		.loc 2 196 34 view .LVU201
 688              	.LBB58:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 689              		.loc 2 198 9 view .LVU202
 690              		.loc 2 200 9 view .LVU203
 691              		.syntax unified
 692              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 693 0020 4FF01003 			mov r3, #16												
 694 0024 83F31188 		msr basepri, r3											
 695 0028 BFF36F8F 		isb														
 696 002c BFF34F8F 		dsb														
 697              	
 698              	@ 0 "" 2
 699              	.LVL56:
 700              		.thumb
 701              		.syntax unified
 702              	.L42:
 703              		.loc 2 200 9 is_stmt 0 view .LVU204
 704              	.LBE58:
 705              	.LBE57:
 481:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 706              		.loc 1 481 5 is_stmt 1 discriminator 1 view .LVU205
 481:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 707              		.loc 1 481 5 discriminator 1 view .LVU206
 708 0030 FEE7     		b	.L42
 709              	.L43:
 710              	.LCFI11:
 711              		.cfi_def_cfa_offset 16
 712              		.cfi_offset 4, -16
 713              		.cfi_offset 5, -12
 714              		.cfi_offset 6, -8
 715              		.cfi_offset 14, -4
 482:Middlewares/FreeRTOS/event_groups.c **** 
 716              		.loc 1 482 75 discriminator 2 view .LVU207
 484:Middlewares/FreeRTOS/event_groups.c ****     {
 717              		.loc 1 484 5 discriminator 2 view .LVU208
 718 0032 FFF7FEFF 		bl	vPortEnterCritical
 719              	.LVL57:
 486:Middlewares/FreeRTOS/event_groups.c **** 
 720              		.loc 1 486 66 discriminator 2 view .LVU209
 490:Middlewares/FreeRTOS/event_groups.c **** 
 721              		.loc 1 490 9 discriminator 2 view .LVU210
 490:Middlewares/FreeRTOS/event_groups.c **** 
 722              		.loc 1 490 18 is_stmt 0 discriminator 2 view .LVU211
 723 0036 2E68     		ldr	r6, [r5]
 724              	.LVL58:
 493:Middlewares/FreeRTOS/event_groups.c ****     }
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 33


 725              		.loc 1 493 9 is_stmt 1 discriminator 2 view .LVU212
 493:Middlewares/FreeRTOS/event_groups.c ****     }
 726              		.loc 1 493 34 is_stmt 0 discriminator 2 view .LVU213
 727 0038 26EA0404 		bic	r4, r6, r4
 728              	.LVL59:
 493:Middlewares/FreeRTOS/event_groups.c ****     }
 729              		.loc 1 493 34 discriminator 2 view .LVU214
 730 003c 2C60     		str	r4, [r5]
 495:Middlewares/FreeRTOS/event_groups.c **** 
 731              		.loc 1 495 5 is_stmt 1 discriminator 2 view .LVU215
 732 003e FFF7FEFF 		bl	vPortExitCritical
 733              	.LVL60:
 497:Middlewares/FreeRTOS/event_groups.c **** }
 734              		.loc 1 497 5 discriminator 2 view .LVU216
 498:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 735              		.loc 1 498 1 is_stmt 0 discriminator 2 view .LVU217
 736 0042 3046     		mov	r0, r6
 737 0044 70BD     		pop	{r4, r5, r6, pc}
 498:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 738              		.loc 1 498 1 discriminator 2 view .LVU218
 739              		.cfi_endproc
 740              	.LFE9:
 742              		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
 743              		.align	1
 744              		.global	xEventGroupGetBitsFromISR
 745              		.syntax unified
 746              		.thumb
 747              		.thumb_func
 749              	xEventGroupGetBitsFromISR:
 750              	.LVL61:
 751              	.LFB10:
 518:Middlewares/FreeRTOS/event_groups.c ****     UBaseType_t uxSavedInterruptStatus;
 752              		.loc 1 518 1 is_stmt 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 519:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t const * const pxEventBits = xEventGroup;
 757              		.loc 1 519 5 view .LVU220
 520:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxReturn;
 758              		.loc 1 520 5 view .LVU221
 521:Middlewares/FreeRTOS/event_groups.c **** 
 759              		.loc 1 521 5 view .LVU222
 523:Middlewares/FreeRTOS/event_groups.c ****     {
 760              		.loc 1 523 5 view .LVU223
 761              	.LBB59:
 762              	.LBI59:
 201:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 202:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %0, %1												\n"\
 203:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %0											\n"\
 204:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 205:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 206:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 207:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 208:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 209:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 210:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 34


 211:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 212:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 763              		.loc 2 212 38 view .LVU224
 764              	.LBB60:
 213:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 214:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 765              		.loc 2 214 9 view .LVU225
 215:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 216:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 766              		.loc 2 216 9 view .LVU226
 767              		.syntax unified
 768              	@ 216 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 769 0000 EFF31183 			mrs r3, basepri											
 770 0004 4FF01002 		mov r2, #16												
 771 0008 82F31188 		msr basepri, r2											
 772 000c BFF36F8F 		isb														
 773 0010 BFF34F8F 		dsb														
 774              	
 775              	@ 0 "" 2
 776              	.LVL62:
 217:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 218:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mrs %0, basepri											\n"\
 219:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %1, %2												\n"\
 220:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %1											\n"\
 221:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 222:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 223:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 224:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 225:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 226:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 227:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * warnings. */
 228:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return ulOriginalBASEPRI;
 777              		.loc 2 228 9 view .LVU227
 778              		.loc 2 228 9 is_stmt 0 view .LVU228
 779              		.thumb
 780              		.syntax unified
 781              	.LBE60:
 782              	.LBE59:
 525:Middlewares/FreeRTOS/event_groups.c ****     }
 783              		.loc 1 525 9 is_stmt 1 view .LVU229
 525:Middlewares/FreeRTOS/event_groups.c ****     }
 784              		.loc 1 525 18 is_stmt 0 view .LVU230
 785 0014 0068     		ldr	r0, [r0]
 786              	.LVL63:
 527:Middlewares/FreeRTOS/event_groups.c **** 
 787              		.loc 1 527 5 is_stmt 1 view .LVU231
 788              	.LBB61:
 789              	.LBI61:
 229:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 230:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 231:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 232:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 790              		.loc 2 232 34 view .LVU232
 791              	.LBB62:
 233:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 234:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 792              		.loc 2 234 9 view .LVU233
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 35


 793              		.syntax unified
 794              	@ 234 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 795 0016 83F31188 			msr basepri, r3	
 796              	@ 0 "" 2
 797              	.LVL64:
 798              		.loc 2 234 9 is_stmt 0 view .LVU234
 799              		.thumb
 800              		.syntax unified
 801              	.LBE62:
 802              	.LBE61:
 529:Middlewares/FreeRTOS/event_groups.c **** } /*lint !e818 EventGroupHandle_t is a typedef used in other functions to so can't be pointer to co
 803              		.loc 1 529 5 is_stmt 1 view .LVU235
 530:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 804              		.loc 1 530 1 is_stmt 0 view .LVU236
 805 001a 7047     		bx	lr
 806              		.cfi_endproc
 807              	.LFE10:
 809              		.section	.text.xEventGroupSetBits,"ax",%progbits
 810              		.align	1
 811              		.global	xEventGroupSetBits
 812              		.syntax unified
 813              		.thumb
 814              		.thumb_func
 816              	xEventGroupSetBits:
 817              	.LVL65:
 818              	.LFB11:
 535:Middlewares/FreeRTOS/event_groups.c ****     ListItem_t * pxListItem;
 819              		.loc 1 535 1 is_stmt 1 view -0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 535:Middlewares/FreeRTOS/event_groups.c ****     ListItem_t * pxListItem;
 823              		.loc 1 535 1 is_stmt 0 view .LVU238
 824 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 825              	.LCFI12:
 826              		.cfi_def_cfa_offset 24
 827              		.cfi_offset 3, -24
 828              		.cfi_offset 4, -20
 829              		.cfi_offset 5, -16
 830              		.cfi_offset 6, -12
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 536:Middlewares/FreeRTOS/event_groups.c ****     ListItem_t * pxNext;
 833              		.loc 1 536 5 is_stmt 1 view .LVU239
 537:Middlewares/FreeRTOS/event_groups.c ****     ListItem_t const * pxListEnd;
 834              		.loc 1 537 5 view .LVU240
 538:Middlewares/FreeRTOS/event_groups.c ****     List_t const * pxList;
 835              		.loc 1 538 5 view .LVU241
 539:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 836              		.loc 1 539 5 view .LVU242
 540:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 837              		.loc 1 540 5 view .LVU243
 838              	.LVL66:
 541:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xMatchFound = pdFALSE;
 839              		.loc 1 541 5 view .LVU244
 542:Middlewares/FreeRTOS/event_groups.c **** 
 840              		.loc 1 542 5 view .LVU245
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 36


 546:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 841              		.loc 1 546 5 view .LVU246
 842 0002 68B1     		cbz	r0, .L61
 843 0004 0D46     		mov	r5, r1
 844 0006 0446     		mov	r4, r0
 546:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 845              		.loc 1 546 32 discriminator 2 view .LVU247
 547:Middlewares/FreeRTOS/event_groups.c **** 
 846              		.loc 1 547 5 discriminator 2 view .LVU248
 847 0008 B1F1807F 		cmp	r1, #16777216
 848 000c 11D3     		bcc	.L52
 547:Middlewares/FreeRTOS/event_groups.c **** 
 849              		.loc 1 547 5 view .LVU249
 850              	.LBB63:
 851              	.LBI63:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 852              		.loc 2 196 34 view .LVU250
 853              	.LBB64:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 854              		.loc 2 198 9 view .LVU251
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 855              		.loc 2 200 9 view .LVU252
 856              		.syntax unified
 857              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 858 000e 4FF01003 			mov r3, #16												
 859 0012 83F31188 		msr basepri, r3											
 860 0016 BFF36F8F 		isb														
 861 001a BFF34F8F 		dsb														
 862              	
 863              	@ 0 "" 2
 864              	.LVL67:
 865              		.thumb
 866              		.syntax unified
 867              	.L53:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 868              		.loc 2 200 9 is_stmt 0 view .LVU253
 869              	.LBE64:
 870              	.LBE63:
 547:Middlewares/FreeRTOS/event_groups.c **** 
 871              		.loc 1 547 5 is_stmt 1 discriminator 2 view .LVU254
 547:Middlewares/FreeRTOS/event_groups.c **** 
 872              		.loc 1 547 5 discriminator 2 view .LVU255
 873 001e FEE7     		b	.L53
 874              	.L61:
 546:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 875              		.loc 1 546 5 view .LVU256
 876              	.LBB65:
 877              	.LBI65:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 878              		.loc 2 196 34 view .LVU257
 879              	.LBB66:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 880              		.loc 2 198 9 view .LVU258
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 881              		.loc 2 200 9 view .LVU259
 882              		.syntax unified
 883              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 37


 884 0020 4FF01003 			mov r3, #16												
 885 0024 83F31188 		msr basepri, r3											
 886 0028 BFF36F8F 		isb														
 887 002c BFF34F8F 		dsb														
 888              	
 889              	@ 0 "" 2
 890              	.LVL68:
 891              		.thumb
 892              		.syntax unified
 893              	.L51:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 894              		.loc 2 200 9 is_stmt 0 view .LVU260
 895              	.LBE66:
 896              	.LBE65:
 546:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 897              		.loc 1 546 5 is_stmt 1 discriminator 1 view .LVU261
 546:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 898              		.loc 1 546 5 discriminator 1 view .LVU262
 899 0030 FEE7     		b	.L51
 900              	.L52:
 547:Middlewares/FreeRTOS/event_groups.c **** 
 901              		.loc 1 547 73 discriminator 2 view .LVU263
 549:Middlewares/FreeRTOS/event_groups.c ****     pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 !e9087 The mini list structure is 
 902              		.loc 1 549 5 discriminator 2 view .LVU264
 903              	.LVL69:
 550:Middlewares/FreeRTOS/event_groups.c ****     vTaskSuspendAll();
 904              		.loc 1 550 5 discriminator 2 view .LVU265
 550:Middlewares/FreeRTOS/event_groups.c ****     vTaskSuspendAll();
 905              		.loc 1 550 15 is_stmt 0 discriminator 2 view .LVU266
 906 0032 00F10C06 		add	r6, r0, #12
 907              	.LVL70:
 551:Middlewares/FreeRTOS/event_groups.c ****     {
 908              		.loc 1 551 5 is_stmt 1 discriminator 2 view .LVU267
 909 0036 FFF7FEFF 		bl	vTaskSuspendAll
 910              	.LVL71:
 553:Middlewares/FreeRTOS/event_groups.c **** 
 911              		.loc 1 553 62 discriminator 2 view .LVU268
 555:Middlewares/FreeRTOS/event_groups.c **** 
 912              		.loc 1 555 9 discriminator 2 view .LVU269
 555:Middlewares/FreeRTOS/event_groups.c **** 
 913              		.loc 1 555 20 is_stmt 0 discriminator 2 view .LVU270
 914 003a 2069     		ldr	r0, [r4, #16]
 915              	.LVL72:
 558:Middlewares/FreeRTOS/event_groups.c **** 
 916              		.loc 1 558 9 is_stmt 1 discriminator 2 view .LVU271
 558:Middlewares/FreeRTOS/event_groups.c **** 
 917              		.loc 1 558 20 is_stmt 0 discriminator 2 view .LVU272
 918 003c 2368     		ldr	r3, [r4]
 558:Middlewares/FreeRTOS/event_groups.c **** 
 919              		.loc 1 558 34 discriminator 2 view .LVU273
 920 003e 2B43     		orrs	r3, r3, r5
 921 0040 2360     		str	r3, [r4]
 561:Middlewares/FreeRTOS/event_groups.c ****         {
 922              		.loc 1 561 9 is_stmt 1 discriminator 2 view .LVU274
 540:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 923              		.loc 1 540 17 is_stmt 0 discriminator 2 view .LVU275
 924 0042 0027     		movs	r7, #0
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 38


 561:Middlewares/FreeRTOS/event_groups.c ****         {
 925              		.loc 1 561 14 discriminator 2 view .LVU276
 926 0044 0AE0     		b	.L54
 927              	.LVL73:
 928              	.L55:
 583:Middlewares/FreeRTOS/event_groups.c ****             {
 929              		.loc 1 583 18 is_stmt 1 view .LVU277
 583:Middlewares/FreeRTOS/event_groups.c ****             {
 930              		.loc 1 583 53 is_stmt 0 view .LVU278
 931 0046 2168     		ldr	r1, [r4]
 583:Middlewares/FreeRTOS/event_groups.c ****             {
 932              		.loc 1 583 20 view .LVU279
 933 0048 32EA0101 		bics	r1, r2, r1
 934 004c 05D1     		bne	.L57
 583:Middlewares/FreeRTOS/event_groups.c ****             {
 935              		.loc 1 583 20 view .LVU280
 936 004e 11E0     		b	.L56
 937              	.LVL74:
 938              	.L58:
 602:Middlewares/FreeRTOS/event_groups.c ****                 }
 939              		.loc 1 602 45 is_stmt 1 view .LVU281
 610:Middlewares/FreeRTOS/event_groups.c ****             }
 940              		.loc 1 610 17 view .LVU282
 610:Middlewares/FreeRTOS/event_groups.c ****             }
 941              		.loc 1 610 75 is_stmt 0 view .LVU283
 942 0050 2168     		ldr	r1, [r4]
 610:Middlewares/FreeRTOS/event_groups.c ****             }
 943              		.loc 1 610 17 view .LVU284
 944 0052 41F00071 		orr	r1, r1, #33554432
 945 0056 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 946              	.LVL75:
 947              	.L57:
 535:Middlewares/FreeRTOS/event_groups.c ****     ListItem_t * pxListItem;
 948              		.loc 1 535 1 view .LVU285
 949 005a 2846     		mov	r0, r5
 950              	.LVL76:
 951              	.L54:
 561:Middlewares/FreeRTOS/event_groups.c ****         {
 952              		.loc 1 561 27 is_stmt 1 view .LVU286
 953 005c B042     		cmp	r0, r6
 954 005e 0ED0     		beq	.L62
 563:Middlewares/FreeRTOS/event_groups.c ****             uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 955              		.loc 1 563 13 view .LVU287
 563:Middlewares/FreeRTOS/event_groups.c ****             uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 956              		.loc 1 563 20 is_stmt 0 view .LVU288
 957 0060 4568     		ldr	r5, [r0, #4]
 958              	.LVL77:
 564:Middlewares/FreeRTOS/event_groups.c ****             xMatchFound = pdFALSE;
 959              		.loc 1 564 13 is_stmt 1 view .LVU289
 564:Middlewares/FreeRTOS/event_groups.c ****             xMatchFound = pdFALSE;
 960              		.loc 1 564 29 is_stmt 0 view .LVU290
 961 0062 0368     		ldr	r3, [r0]
 962              	.LVL78:
 565:Middlewares/FreeRTOS/event_groups.c **** 
 963              		.loc 1 565 13 is_stmt 1 view .LVU291
 568:Middlewares/FreeRTOS/event_groups.c ****             uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 964              		.loc 1 568 13 view .LVU292
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 39


 569:Middlewares/FreeRTOS/event_groups.c **** 
 965              		.loc 1 569 13 view .LVU293
 569:Middlewares/FreeRTOS/event_groups.c **** 
 966              		.loc 1 569 29 is_stmt 0 view .LVU294
 967 0064 23F07F42 		bic	r2, r3, #-16777216
 968              	.LVL79:
 571:Middlewares/FreeRTOS/event_groups.c ****             {
 969              		.loc 1 571 13 is_stmt 1 view .LVU295
 571:Middlewares/FreeRTOS/event_groups.c ****             {
 970              		.loc 1 571 15 is_stmt 0 view .LVU296
 971 0068 13F0806F 		tst	r3, #67108864
 972 006c EBD1     		bne	.L55
 574:Middlewares/FreeRTOS/event_groups.c ****                 {
 973              		.loc 1 574 17 is_stmt 1 view .LVU297
 574:Middlewares/FreeRTOS/event_groups.c ****                 {
 974              		.loc 1 574 52 is_stmt 0 view .LVU298
 975 006e 2168     		ldr	r1, [r4]
 574:Middlewares/FreeRTOS/event_groups.c ****                 {
 976              		.loc 1 574 19 view .LVU299
 977 0070 1142     		tst	r1, r2
 978 0072 F2D0     		beq	.L57
 979              	.L56:
 980              	.LVL80:
 596:Middlewares/FreeRTOS/event_groups.c ****                 {
 981              		.loc 1 596 17 is_stmt 1 view .LVU300
 596:Middlewares/FreeRTOS/event_groups.c ****                 {
 982              		.loc 1 596 19 is_stmt 0 view .LVU301
 983 0074 13F0807F 		tst	r3, #16777216
 984 0078 EAD0     		beq	.L58
 598:Middlewares/FreeRTOS/event_groups.c ****                 }
 985              		.loc 1 598 21 is_stmt 1 view .LVU302
 598:Middlewares/FreeRTOS/event_groups.c ****                 }
 986              		.loc 1 598 35 is_stmt 0 view .LVU303
 987 007a 1743     		orrs	r7, r7, r2
 988              	.LVL81:
 598:Middlewares/FreeRTOS/event_groups.c ****                 }
 989              		.loc 1 598 35 view .LVU304
 990 007c E8E7     		b	.L58
 991              	.LVL82:
 992              	.L62:
 621:Middlewares/FreeRTOS/event_groups.c ****     }
 993              		.loc 1 621 9 is_stmt 1 view .LVU305
 621:Middlewares/FreeRTOS/event_groups.c ****     }
 994              		.loc 1 621 20 is_stmt 0 view .LVU306
 995 007e 2368     		ldr	r3, [r4]
 621:Middlewares/FreeRTOS/event_groups.c ****     }
 996              		.loc 1 621 34 view .LVU307
 997 0080 23EA0703 		bic	r3, r3, r7
 998 0084 2360     		str	r3, [r4]
 623:Middlewares/FreeRTOS/event_groups.c **** 
 999              		.loc 1 623 5 is_stmt 1 view .LVU308
 623:Middlewares/FreeRTOS/event_groups.c **** 
 1000              		.loc 1 623 14 is_stmt 0 view .LVU309
 1001 0086 FFF7FEFF 		bl	xTaskResumeAll
 1002              	.LVL83:
 625:Middlewares/FreeRTOS/event_groups.c **** }
 1003              		.loc 1 625 5 is_stmt 1 view .LVU310
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 40


 626:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 1004              		.loc 1 626 1 is_stmt 0 view .LVU311
 1005 008a 2068     		ldr	r0, [r4]
 1006 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 626:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 1007              		.loc 1 626 1 view .LVU312
 1008              		.cfi_endproc
 1009              	.LFE11:
 1011              		.section	.text.xEventGroupSync,"ax",%progbits
 1012              		.align	1
 1013              		.global	xEventGroupSync
 1014              		.syntax unified
 1015              		.thumb
 1016              		.thumb_func
 1018              	xEventGroupSync:
 1019              	.LVL84:
 1020              	.LFB7:
 198:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxOriginalBitValue, uxReturn;
 1021              		.loc 1 198 1 is_stmt 1 view -0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 199:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 1025              		.loc 1 199 5 view .LVU314
 200:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xAlreadyYielded;
 1026              		.loc 1 200 5 view .LVU315
 201:Middlewares/FreeRTOS/event_groups.c ****     BaseType_t xTimeoutOccurred = pdFALSE;
 1027              		.loc 1 201 5 view .LVU316
 202:Middlewares/FreeRTOS/event_groups.c **** 
 1028              		.loc 1 202 5 view .LVU317
 204:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 1029              		.loc 1 204 5 view .LVU318
 1030 0000 B2F1807F 		cmp	r2, #16777216
 1031 0004 08D3     		bcc	.L64
 204:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 1032              		.loc 1 204 5 view .LVU319
 1033              	.LBB67:
 1034              	.LBI67:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1035              		.loc 2 196 34 view .LVU320
 1036              	.LBB68:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1037              		.loc 2 198 9 view .LVU321
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1038              		.loc 2 200 9 view .LVU322
 1039              		.syntax unified
 1040              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1041 0006 4FF01003 			mov r3, #16												
 1042 000a 83F31188 		msr basepri, r3											
 1043 000e BFF36F8F 		isb														
 1044 0012 BFF34F8F 		dsb														
 1045              	
 1046              	@ 0 "" 2
 1047              	.LVL85:
 1048              		.thumb
 1049              		.syntax unified
 1050              	.L65:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 41


 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1051              		.loc 2 200 9 is_stmt 0 view .LVU323
 1052              	.LBE68:
 1053              	.LBE67:
 204:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 1054              		.loc 1 204 5 is_stmt 1 discriminator 1 view .LVU324
 204:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 1055              		.loc 1 204 5 discriminator 1 view .LVU325
 1056 0016 FEE7     		b	.L65
 1057              	.LVL86:
 1058              	.L64:
 198:Middlewares/FreeRTOS/event_groups.c ****     EventBits_t uxOriginalBitValue, uxReturn;
 1059              		.loc 1 198 1 is_stmt 0 discriminator 2 view .LVU326
 1060 0018 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1061              	.LCFI13:
 1062              		.cfi_def_cfa_offset 24
 1063              		.cfi_offset 4, -24
 1064              		.cfi_offset 5, -20
 1065              		.cfi_offset 6, -16
 1066              		.cfi_offset 7, -12
 1067              		.cfi_offset 8, -8
 1068              		.cfi_offset 14, -4
 1069 001c 0746     		mov	r7, r0
 1070 001e 0D46     		mov	r5, r1
 1071 0020 1446     		mov	r4, r2
 1072 0022 1E46     		mov	r6, r3
 204:Middlewares/FreeRTOS/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 1073              		.loc 1 204 77 is_stmt 1 discriminator 2 view .LVU327
 205:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1074              		.loc 1 205 5 discriminator 2 view .LVU328
 1075 0024 42B9     		cbnz	r2, .L66
 205:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1076              		.loc 1 205 5 view .LVU329
 1077              	.LBB69:
 1078              	.LBI69:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1079              		.loc 2 196 34 view .LVU330
 1080              	.LBB70:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1081              		.loc 2 198 9 view .LVU331
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1082              		.loc 2 200 9 view .LVU332
 1083              		.syntax unified
 1084              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1085 0026 4FF01003 			mov r3, #16												
 1086 002a 83F31188 		msr basepri, r3											
 1087 002e BFF36F8F 		isb														
 1088 0032 BFF34F8F 		dsb														
 1089              	
 1090              	@ 0 "" 2
 1091              	.LVL87:
 1092              		.thumb
 1093              		.syntax unified
 1094              	.L67:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1095              		.loc 2 200 9 is_stmt 0 view .LVU333
 1096              	.LBE70:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 42


 1097              	.LBE69:
 205:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1098              		.loc 1 205 5 is_stmt 1 discriminator 2 view .LVU334
 205:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1099              		.loc 1 205 5 discriminator 2 view .LVU335
 1100 0036 FEE7     		b	.L67
 1101              	.LVL88:
 1102              	.L66:
 205:Middlewares/FreeRTOS/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1103              		.loc 1 205 41 discriminator 2 view .LVU336
 208:Middlewares/FreeRTOS/event_groups.c ****     }
 1104              		.loc 1 208 9 discriminator 2 view .LVU337
 1105 0038 FFF7FEFF 		bl	xTaskGetSchedulerState
 1106              	.LVL89:
 208:Middlewares/FreeRTOS/event_groups.c ****     }
 1107              		.loc 1 208 9 is_stmt 0 discriminator 2 view .LVU338
 1108 003c 48B9     		cbnz	r0, .L68
 1109 003e 46B1     		cbz	r6, .L68
 208:Middlewares/FreeRTOS/event_groups.c ****     }
 1110              		.loc 1 208 9 is_stmt 1 view .LVU339
 1111              	.LBB71:
 1112              	.LBI71:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1113              		.loc 2 196 34 view .LVU340
 1114              	.LBB72:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1115              		.loc 2 198 9 view .LVU341
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1116              		.loc 2 200 9 view .LVU342
 1117              		.syntax unified
 1118              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1119 0040 4FF01003 			mov r3, #16												
 1120 0044 83F31188 		msr basepri, r3											
 1121 0048 BFF36F8F 		isb														
 1122 004c BFF34F8F 		dsb														
 1123              	
 1124              	@ 0 "" 2
 1125              	.LVL90:
 1126              		.thumb
 1127              		.syntax unified
 1128              	.L69:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1129              		.loc 2 200 9 is_stmt 0 view .LVU343
 1130              	.LBE72:
 1131              	.LBE71:
 208:Middlewares/FreeRTOS/event_groups.c ****     }
 1132              		.loc 1 208 9 is_stmt 1 discriminator 3 view .LVU344
 208:Middlewares/FreeRTOS/event_groups.c ****     }
 1133              		.loc 1 208 9 discriminator 3 view .LVU345
 1134 0050 FEE7     		b	.L69
 1135              	.L68:
 208:Middlewares/FreeRTOS/event_groups.c ****     }
 1136              		.loc 1 208 110 discriminator 8 view .LVU346
 212:Middlewares/FreeRTOS/event_groups.c ****     {
 1137              		.loc 1 212 5 discriminator 8 view .LVU347
 1138 0052 FFF7FEFF 		bl	vTaskSuspendAll
 1139              	.LVL91:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 43


 214:Middlewares/FreeRTOS/event_groups.c **** 
 1140              		.loc 1 214 9 discriminator 8 view .LVU348
 214:Middlewares/FreeRTOS/event_groups.c **** 
 1141              		.loc 1 214 28 is_stmt 0 discriminator 8 view .LVU349
 1142 0056 D7F80080 		ldr	r8, [r7]
 1143              	.LVL92:
 216:Middlewares/FreeRTOS/event_groups.c **** 
 1144              		.loc 1 216 9 is_stmt 1 discriminator 8 view .LVU350
 216:Middlewares/FreeRTOS/event_groups.c **** 
 1145              		.loc 1 216 18 is_stmt 0 discriminator 8 view .LVU351
 1146 005a 2946     		mov	r1, r5
 1147 005c 3846     		mov	r0, r7
 1148 005e FFF7FEFF 		bl	xEventGroupSetBits
 1149              	.LVL93:
 218:Middlewares/FreeRTOS/event_groups.c ****         {
 1150              		.loc 1 218 9 is_stmt 1 discriminator 8 view .LVU352
 218:Middlewares/FreeRTOS/event_groups.c ****         {
 1151              		.loc 1 218 36 is_stmt 0 discriminator 8 view .LVU353
 1152 0062 48EA0505 		orr	r5, r8, r5
 1153              	.LVL94:
 218:Middlewares/FreeRTOS/event_groups.c ****         {
 1154              		.loc 1 218 11 discriminator 8 view .LVU354
 1155 0066 34EA0503 		bics	r3, r4, r5
 1156 006a 1AD0     		beq	.L79
 231:Middlewares/FreeRTOS/event_groups.c ****             {
 1157              		.loc 1 231 13 is_stmt 1 view .LVU355
 231:Middlewares/FreeRTOS/event_groups.c ****             {
 1158              		.loc 1 231 15 is_stmt 0 view .LVU356
 1159 006c FEB9     		cbnz	r6, .L80
 250:Middlewares/FreeRTOS/event_groups.c ****                 xTimeoutOccurred = pdTRUE;
 1160              		.loc 1 250 17 is_stmt 1 view .LVU357
 250:Middlewares/FreeRTOS/event_groups.c ****                 xTimeoutOccurred = pdTRUE;
 1161              		.loc 1 250 26 is_stmt 0 view .LVU358
 1162 006e 3D68     		ldr	r5, [r7]
 1163              	.LVL95:
 251:Middlewares/FreeRTOS/event_groups.c ****             }
 1164              		.loc 1 251 17 is_stmt 1 view .LVU359
 1165              	.L71:
 255:Middlewares/FreeRTOS/event_groups.c **** 
 1166              		.loc 1 255 5 view .LVU360
 255:Middlewares/FreeRTOS/event_groups.c **** 
 1167              		.loc 1 255 23 is_stmt 0 view .LVU361
 1168 0070 FFF7FEFF 		bl	xTaskResumeAll
 1169              	.LVL96:
 257:Middlewares/FreeRTOS/event_groups.c ****     {
 1170              		.loc 1 257 5 is_stmt 1 view .LVU362
 257:Middlewares/FreeRTOS/event_groups.c ****     {
 1171              		.loc 1 257 7 is_stmt 0 view .LVU363
 1172 0074 96B1     		cbz	r6, .L63
 259:Middlewares/FreeRTOS/event_groups.c ****         {
 1173              		.loc 1 259 9 is_stmt 1 view .LVU364
 259:Middlewares/FreeRTOS/event_groups.c ****         {
 1174              		.loc 1 259 11 is_stmt 0 view .LVU365
 1175 0076 48B9     		cbnz	r0, .L74
 261:Middlewares/FreeRTOS/event_groups.c ****         }
 1176              		.loc 1 261 13 is_stmt 1 view .LVU366
 1177 0078 4FF0E023 		mov	r3, #-536813568
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 44


 1178 007c 4FF08052 		mov	r2, #268435456
 1179 0080 C3F8042D 		str	r2, [r3, #3332]
 261:Middlewares/FreeRTOS/event_groups.c ****         }
 1180              		.loc 1 261 13 view .LVU367
 1181              		.syntax unified
 1182              	@ 261 "Middlewares/FreeRTOS/event_groups.c" 1
 1183 0084 BFF34F8F 		dsb
 1184              	@ 0 "" 2
 261:Middlewares/FreeRTOS/event_groups.c ****         }
 1185              		.loc 1 261 13 view .LVU368
 1186              	@ 261 "Middlewares/FreeRTOS/event_groups.c" 1
 1187 0088 BFF36F8F 		isb
 1188              	@ 0 "" 2
 261:Middlewares/FreeRTOS/event_groups.c ****         }
 1189              		.loc 1 261 35 view .LVU369
 1190              		.thumb
 1191              		.syntax unified
 1192              	.L74:
 265:Middlewares/FreeRTOS/event_groups.c ****         }
 1193              		.loc 1 265 37 view .LVU370
 272:Middlewares/FreeRTOS/event_groups.c **** 
 1194              		.loc 1 272 9 view .LVU371
 272:Middlewares/FreeRTOS/event_groups.c **** 
 1195              		.loc 1 272 20 is_stmt 0 view .LVU372
 1196 008c FFF7FEFF 		bl	uxTaskResetEventItemValue
 1197              	.LVL97:
 272:Middlewares/FreeRTOS/event_groups.c **** 
 1198              		.loc 1 272 20 view .LVU373
 1199 0090 0546     		mov	r5, r0
 1200              	.LVL98:
 274:Middlewares/FreeRTOS/event_groups.c ****         {
 1201              		.loc 1 274 9 is_stmt 1 view .LVU374
 274:Middlewares/FreeRTOS/event_groups.c ****         {
 1202              		.loc 1 274 11 is_stmt 0 view .LVU375
 1203 0092 10F0007F 		tst	r0, #33554432
 1204 0096 12D0     		beq	.L81
 1205              	.LVL99:
 1206              	.L75:
 301:Middlewares/FreeRTOS/event_groups.c **** 
 1207              		.loc 1 301 9 is_stmt 1 view .LVU376
 305:Middlewares/FreeRTOS/event_groups.c ****     }
 1208              		.loc 1 305 9 view .LVU377
 305:Middlewares/FreeRTOS/event_groups.c ****     }
 1209              		.loc 1 305 18 is_stmt 0 view .LVU378
 1210 0098 25F07F45 		bic	r5, r5, #-16777216
 1211              	.LVL100:
 308:Middlewares/FreeRTOS/event_groups.c **** 
 1212              		.loc 1 308 5 is_stmt 1 view .LVU379
 311:Middlewares/FreeRTOS/event_groups.c **** 
 1213              		.loc 1 311 5 view .LVU380
 313:Middlewares/FreeRTOS/event_groups.c **** }
 1214              		.loc 1 313 5 view .LVU381
 1215              	.L63:
 314:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 1216              		.loc 1 314 1 is_stmt 0 view .LVU382
 1217 009c 2846     		mov	r0, r5
 1218 009e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 45


 1219              	.LVL101:
 1220              	.L79:
 221:Middlewares/FreeRTOS/event_groups.c **** 
 1221              		.loc 1 221 13 is_stmt 1 view .LVU383
 225:Middlewares/FreeRTOS/event_groups.c **** 
 1222              		.loc 1 225 13 view .LVU384
 225:Middlewares/FreeRTOS/event_groups.c **** 
 1223              		.loc 1 225 24 is_stmt 0 view .LVU385
 1224 00a2 3B68     		ldr	r3, [r7]
 225:Middlewares/FreeRTOS/event_groups.c **** 
 1225              		.loc 1 225 38 view .LVU386
 1226 00a4 23EA0403 		bic	r3, r3, r4
 1227 00a8 3B60     		str	r3, [r7]
 227:Middlewares/FreeRTOS/event_groups.c ****         }
 1228              		.loc 1 227 13 is_stmt 1 view .LVU387
 1229              	.LVL102:
 227:Middlewares/FreeRTOS/event_groups.c ****         }
 1230              		.loc 1 227 26 is_stmt 0 view .LVU388
 1231 00aa 0026     		movs	r6, #0
 1232 00ac E0E7     		b	.L71
 1233              	.LVL103:
 1234              	.L80:
 233:Middlewares/FreeRTOS/event_groups.c **** 
 1235              		.loc 1 233 89 is_stmt 1 view .LVU389
 238:Middlewares/FreeRTOS/event_groups.c **** 
 1236              		.loc 1 238 17 view .LVU390
 1237 00ae 3246     		mov	r2, r6
 1238 00b0 44F0A061 		orr	r1, r4, #83886080
 1239 00b4 381D     		adds	r0, r7, #4
 1240 00b6 FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 1241              	.LVL104:
 244:Middlewares/FreeRTOS/event_groups.c ****             }
 1242              		.loc 1 244 17 view .LVU391
 244:Middlewares/FreeRTOS/event_groups.c ****             }
 1243              		.loc 1 244 26 is_stmt 0 view .LVU392
 1244 00ba 0025     		movs	r5, #0
 1245 00bc D8E7     		b	.L71
 1246              	.LVL105:
 1247              	.L81:
 277:Middlewares/FreeRTOS/event_groups.c ****             {
 1248              		.loc 1 277 13 is_stmt 1 view .LVU393
 1249 00be FFF7FEFF 		bl	vPortEnterCritical
 1250              	.LVL106:
 279:Middlewares/FreeRTOS/event_groups.c **** 
 1251              		.loc 1 279 17 view .LVU394
 279:Middlewares/FreeRTOS/event_groups.c **** 
 1252              		.loc 1 279 26 is_stmt 0 view .LVU395
 1253 00c2 3D68     		ldr	r5, [r7]
 1254              	.LVL107:
 285:Middlewares/FreeRTOS/event_groups.c ****                 {
 1255              		.loc 1 285 17 is_stmt 1 view .LVU396
 285:Middlewares/FreeRTOS/event_groups.c ****                 {
 1256              		.loc 1 285 19 is_stmt 0 view .LVU397
 1257 00c4 34EA0503 		bics	r3, r4, r5
 1258 00c8 02D0     		beq	.L82
 1259              	.LVL108:
 1260              	.L76:
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 46


 291:Middlewares/FreeRTOS/event_groups.c ****                 }
 1261              		.loc 1 291 45 is_stmt 1 view .LVU398
 294:Middlewares/FreeRTOS/event_groups.c **** 
 1262              		.loc 1 294 13 view .LVU399
 1263 00ca FFF7FEFF 		bl	vPortExitCritical
 1264              	.LVL109:
 296:Middlewares/FreeRTOS/event_groups.c ****         }
 1265              		.loc 1 296 13 view .LVU400
 296:Middlewares/FreeRTOS/event_groups.c ****         }
 1266              		.loc 1 296 13 is_stmt 0 view .LVU401
 1267 00ce E3E7     		b	.L75
 1268              	.LVL110:
 1269              	.L82:
 287:Middlewares/FreeRTOS/event_groups.c ****                 }
 1270              		.loc 1 287 21 is_stmt 1 view .LVU402
 287:Middlewares/FreeRTOS/event_groups.c ****                 }
 1271              		.loc 1 287 46 is_stmt 0 view .LVU403
 1272 00d0 25EA0404 		bic	r4, r5, r4
 1273              	.LVL111:
 287:Middlewares/FreeRTOS/event_groups.c ****                 }
 1274              		.loc 1 287 46 view .LVU404
 1275 00d4 3C60     		str	r4, [r7]
 1276 00d6 F8E7     		b	.L76
 1277              		.cfi_endproc
 1278              	.LFE7:
 1280              		.section	.text.vEventGroupDelete,"ax",%progbits
 1281              		.align	1
 1282              		.global	vEventGroupDelete
 1283              		.syntax unified
 1284              		.thumb
 1285              		.thumb_func
 1287              	vEventGroupDelete:
 1288              	.LVL112:
 1289              	.LFB12:
 630:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 1290              		.loc 1 630 1 is_stmt 1 view -0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 0
 1293              		@ frame_needed = 0, uses_anonymous_args = 0
 631:Middlewares/FreeRTOS/event_groups.c ****     const List_t * pxTasksWaitingForBits;
 1294              		.loc 1 631 5 view .LVU406
 632:Middlewares/FreeRTOS/event_groups.c **** 
 1295              		.loc 1 632 5 view .LVU407
 634:Middlewares/FreeRTOS/event_groups.c **** 
 1296              		.loc 1 634 5 view .LVU408
 1297 0000 78B1     		cbz	r0, .L93
 630:Middlewares/FreeRTOS/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 1298              		.loc 1 630 1 is_stmt 0 discriminator 2 view .LVU409
 1299 0002 10B5     		push	{r4, lr}
 1300              	.LCFI14:
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 4, -8
 1303              		.cfi_offset 14, -4
 1304 0004 0446     		mov	r4, r0
 634:Middlewares/FreeRTOS/event_groups.c **** 
 1305              		.loc 1 634 32 is_stmt 1 discriminator 2 view .LVU410
 636:Middlewares/FreeRTOS/event_groups.c **** 
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 47


 1306              		.loc 1 636 5 discriminator 2 view .LVU411
 1307              	.LVL113:
 638:Middlewares/FreeRTOS/event_groups.c ****     {
 1308              		.loc 1 638 5 discriminator 2 view .LVU412
 1309 0006 FFF7FEFF 		bl	vTaskSuspendAll
 1310              	.LVL114:
 640:Middlewares/FreeRTOS/event_groups.c **** 
 1311              		.loc 1 640 47 discriminator 2 view .LVU413
 642:Middlewares/FreeRTOS/event_groups.c ****         {
 1312              		.loc 1 642 9 discriminator 2 view .LVU414
 1313              	.L86:
 642:Middlewares/FreeRTOS/event_groups.c ****         {
 1314              		.loc 1 642 65 view .LVU415
 642:Middlewares/FreeRTOS/event_groups.c ****         {
 1315              		.loc 1 642 16 is_stmt 0 view .LVU416
 1316 000a 6368     		ldr	r3, [r4, #4]
 642:Middlewares/FreeRTOS/event_groups.c ****         {
 1317              		.loc 1 642 65 view .LVU417
 1318 000c DBB1     		cbz	r3, .L94
 646:Middlewares/FreeRTOS/event_groups.c ****             vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCK
 1319              		.loc 1 646 13 is_stmt 1 view .LVU418
 1320 000e 2069     		ldr	r0, [r4, #16]
 1321 0010 04F10C03 		add	r3, r4, #12
 1322 0014 9842     		cmp	r0, r3
 1323 0016 0DD0     		beq	.L95
 646:Middlewares/FreeRTOS/event_groups.c ****             vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCK
 1324              		.loc 1 646 130 discriminator 2 view .LVU419
 647:Middlewares/FreeRTOS/event_groups.c ****         }
 1325              		.loc 1 647 13 discriminator 2 view .LVU420
 1326 0018 4FF00071 		mov	r1, #33554432
 1327 001c FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 1328              	.LVL115:
 1329 0020 F3E7     		b	.L86
 1330              	.LVL116:
 1331              	.L93:
 1332              	.LCFI15:
 1333              		.cfi_def_cfa_offset 0
 1334              		.cfi_restore 4
 1335              		.cfi_restore 14
 634:Middlewares/FreeRTOS/event_groups.c **** 
 1336              		.loc 1 634 5 view .LVU421
 1337              	.LBB73:
 1338              	.LBI73:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1339              		.loc 2 196 34 view .LVU422
 1340              	.LBB74:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1341              		.loc 2 198 9 view .LVU423
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1342              		.loc 2 200 9 view .LVU424
 1343              		.syntax unified
 1344              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1345 0022 4FF01003 			mov r3, #16												
 1346 0026 83F31188 		msr basepri, r3											
 1347 002a BFF36F8F 		isb														
 1348 002e BFF34F8F 		dsb														
 1349              	
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 48


 1350              	@ 0 "" 2
 1351              	.LVL117:
 1352              		.thumb
 1353              		.syntax unified
 1354              	.L85:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1355              		.loc 2 200 9 is_stmt 0 view .LVU425
 1356              	.LBE74:
 1357              	.LBE73:
 634:Middlewares/FreeRTOS/event_groups.c **** 
 1358              		.loc 1 634 5 is_stmt 1 discriminator 1 view .LVU426
 634:Middlewares/FreeRTOS/event_groups.c **** 
 1359              		.loc 1 634 5 discriminator 1 view .LVU427
 1360 0032 FEE7     		b	.L85
 1361              	.LVL118:
 1362              	.L95:
 1363              	.LCFI16:
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 4, -8
 1366              		.cfi_offset 14, -4
 646:Middlewares/FreeRTOS/event_groups.c ****             vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCK
 1367              		.loc 1 646 13 view .LVU428
 1368              	.LBB75:
 1369              	.LBI75:
 196:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1370              		.loc 2 196 34 view .LVU429
 1371              	.LBB76:
 198:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1372              		.loc 2 198 9 view .LVU430
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1373              		.loc 2 200 9 view .LVU431
 1374              		.syntax unified
 1375              	@ 200 "Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1376 0034 4FF01003 			mov r3, #16												
 1377 0038 83F31188 		msr basepri, r3											
 1378 003c BFF36F8F 		isb														
 1379 0040 BFF34F8F 		dsb														
 1380              	
 1381              	@ 0 "" 2
 1382              	.LVL119:
 1383              		.thumb
 1384              		.syntax unified
 1385              	.L88:
 200:Middlewares/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1386              		.loc 2 200 9 is_stmt 0 view .LVU432
 1387              	.LBE76:
 1388              	.LBE75:
 646:Middlewares/FreeRTOS/event_groups.c ****             vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCK
 1389              		.loc 1 646 13 is_stmt 1 discriminator 2 view .LVU433
 646:Middlewares/FreeRTOS/event_groups.c ****             vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCK
 1390              		.loc 1 646 13 discriminator 2 view .LVU434
 1391 0044 FEE7     		b	.L88
 1392              	.L94:
 650:Middlewares/FreeRTOS/event_groups.c **** 
 1393              		.loc 1 650 5 view .LVU435
 650:Middlewares/FreeRTOS/event_groups.c **** 
 1394              		.loc 1 650 14 is_stmt 0 view .LVU436
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 49


 1395 0046 FFF7FEFF 		bl	xTaskResumeAll
 1396              	.LVL120:
 662:Middlewares/FreeRTOS/event_groups.c ****         {
 1397              		.loc 1 662 9 is_stmt 1 view .LVU437
 662:Middlewares/FreeRTOS/event_groups.c ****         {
 1398              		.loc 1 662 24 is_stmt 0 view .LVU438
 1399 004a 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 662:Middlewares/FreeRTOS/event_groups.c ****         {
 1400              		.loc 1 662 11 view .LVU439
 1401 004c 03B1     		cbz	r3, .L96
 1402              	.L83:
 672:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 1403              		.loc 1 672 1 view .LVU440
 1404 004e 10BD     		pop	{r4, pc}
 1405              	.LVL121:
 1406              	.L96:
 664:Middlewares/FreeRTOS/event_groups.c ****         }
 1407              		.loc 1 664 13 is_stmt 1 view .LVU441
 1408 0050 2046     		mov	r0, r4
 1409 0052 FFF7FEFF 		bl	vPortFree
 1410              	.LVL122:
 668:Middlewares/FreeRTOS/event_groups.c ****         }
 1411              		.loc 1 668 37 view .LVU442
 672:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 1412              		.loc 1 672 1 is_stmt 0 view .LVU443
 1413 0056 FAE7     		b	.L83
 1414              		.cfi_endproc
 1415              	.LFE12:
 1417              		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 1418              		.align	1
 1419              		.global	vEventGroupSetBitsCallback
 1420              		.syntax unified
 1421              		.thumb
 1422              		.thumb_func
 1424              	vEventGroupSetBitsCallback:
 1425              	.LVL123:
 1426              	.LFB13:
 679:Middlewares/FreeRTOS/event_groups.c ****     ( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't a
 1427              		.loc 1 679 1 is_stmt 1 view -0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 0
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 679:Middlewares/FreeRTOS/event_groups.c ****     ( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't a
 1431              		.loc 1 679 1 is_stmt 0 view .LVU445
 1432 0000 08B5     		push	{r3, lr}
 1433              	.LCFI17:
 1434              		.cfi_def_cfa_offset 8
 1435              		.cfi_offset 3, -8
 1436              		.cfi_offset 14, -4
 680:Middlewares/FreeRTOS/event_groups.c **** }
 1437              		.loc 1 680 5 is_stmt 1 view .LVU446
 680:Middlewares/FreeRTOS/event_groups.c **** }
 1438              		.loc 1 680 14 is_stmt 0 view .LVU447
 1439 0002 FFF7FEFF 		bl	xEventGroupSetBits
 1440              	.LVL124:
 681:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 1441              		.loc 1 681 1 view .LVU448
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 50


 1442 0006 08BD     		pop	{r3, pc}
 1443              		.cfi_endproc
 1444              	.LFE13:
 1446              		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 1447              		.align	1
 1448              		.global	vEventGroupClearBitsCallback
 1449              		.syntax unified
 1450              		.thumb
 1451              		.thumb_func
 1453              	vEventGroupClearBitsCallback:
 1454              	.LVL125:
 1455              	.LFB14:
 688:Middlewares/FreeRTOS/event_groups.c ****     ( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can
 1456              		.loc 1 688 1 is_stmt 1 view -0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 0
 1459              		@ frame_needed = 0, uses_anonymous_args = 0
 688:Middlewares/FreeRTOS/event_groups.c ****     ( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can
 1460              		.loc 1 688 1 is_stmt 0 view .LVU450
 1461 0000 08B5     		push	{r3, lr}
 1462              	.LCFI18:
 1463              		.cfi_def_cfa_offset 8
 1464              		.cfi_offset 3, -8
 1465              		.cfi_offset 14, -4
 689:Middlewares/FreeRTOS/event_groups.c **** }
 1466              		.loc 1 689 5 is_stmt 1 view .LVU451
 689:Middlewares/FreeRTOS/event_groups.c **** }
 1467              		.loc 1 689 14 is_stmt 0 view .LVU452
 1468 0002 FFF7FEFF 		bl	xEventGroupClearBits
 1469              	.LVL126:
 690:Middlewares/FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 1470              		.loc 1 690 1 view .LVU453
 1471 0006 08BD     		pop	{r3, pc}
 1472              		.cfi_endproc
 1473              	.LFE14:
 1475              		.text
 1476              	.Letext0:
 1477              		.file 3 "/Users/echo/Development/arm-gnu-toolchain/arm64-arm-none-eabi12/lib/gcc/arm-none-eabi/12.
 1478              		.file 4 "/Users/echo/Development/arm-gnu-toolchain/arm64-arm-none-eabi12/arm-none-eabi/include/mac
 1479              		.file 5 "/Users/echo/Development/arm-gnu-toolchain/arm64-arm-none-eabi12/arm-none-eabi/include/sys
 1480              		.file 6 "Middlewares/FreeRTOS/include/FreeRTOS.h"
 1481              		.file 7 "Middlewares/FreeRTOS/include/list.h"
 1482              		.file 8 "Middlewares/FreeRTOS/include/event_groups.h"
 1483              		.file 9 "Middlewares/FreeRTOS/include/portable.h"
 1484              		.file 10 "Middlewares/FreeRTOS/include/task.h"
ARM GAS  /var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s 			page 51


DEFINED SYMBOLS
                            *ABS*:00000000 event_groups.c
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:21     .text.prvTestWaitCondition:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:26     .text.prvTestWaitCondition:00000000 prvTestWaitCondition
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:80     .text.xEventGroupCreateStatic:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:86     .text.xEventGroupCreateStatic:00000000 xEventGroupCreateStatic
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:212    .text.xEventGroupCreate:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:218    .text.xEventGroupCreate:00000000 xEventGroupCreate
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:264    .text.xEventGroupWaitBits:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:270    .text.xEventGroupWaitBits:00000000 xEventGroupWaitBits
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:621    .text.xEventGroupClearBits:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:627    .text.xEventGroupClearBits:00000000 xEventGroupClearBits
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:743    .text.xEventGroupGetBitsFromISR:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:749    .text.xEventGroupGetBitsFromISR:00000000 xEventGroupGetBitsFromISR
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:810    .text.xEventGroupSetBits:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:816    .text.xEventGroupSetBits:00000000 xEventGroupSetBits
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:1012   .text.xEventGroupSync:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:1018   .text.xEventGroupSync:00000000 xEventGroupSync
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:1281   .text.vEventGroupDelete:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:1287   .text.vEventGroupDelete:00000000 vEventGroupDelete
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:1418   .text.vEventGroupSetBitsCallback:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:1424   .text.vEventGroupSetBitsCallback:00000000 vEventGroupSetBitsCallback
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:1447   .text.vEventGroupClearBitsCallback:00000000 $t
/var/folders/mn/k5wp23016n9dfxcgh9w5nftw0000gn/T//cc3OEiTQ.s:1453   .text.vEventGroupClearBitsCallback:00000000 vEventGroupClearBitsCallback

UNDEFINED SYMBOLS
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskSuspendAll
xTaskResumeAll
uxTaskResetEventItemValue
vTaskPlaceOnUnorderedEventList
vPortEnterCritical
vPortExitCritical
vTaskRemoveFromUnorderedEventList
vPortFree
